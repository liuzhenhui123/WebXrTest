(self["webpackChunkar_unity_renderer"]=self["webpackChunkar_unity_renderer"]||[]).push([[998],{9662:function(t,e,n){var r=n(614),s=n(6330),o=TypeError;t.exports=function(t){if(r(t))return t;throw o(s(t)+" is not a function")}},6077:function(t,e,n){var r=n(614),s=String,o=TypeError;t.exports=function(t){if("object"==typeof t||r(t))return t;throw o("Can't set "+s(t)+" as a prototype")}},5787:function(t,e,n){var r=n(7976),s=TypeError;t.exports=function(t,e){if(r(e,t))return t;throw s("Incorrect invocation")}},9670:function(t,e,n){var r=n(111),s=String,o=TypeError;t.exports=function(t){if(r(t))return t;throw o(s(t)+" is not an object")}},3013:function(t){t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},260:function(t,e,n){"use strict";var r,s,o,a=n(3013),i=n(9781),u=n(7854),l=n(614),c=n(111),h=n(2597),p=n(648),d=n(6330),f=n(8880),m=n(8052),g=n(3070).f,y=n(7976),b=n(9518),x=n(7674),w=n(5112),v=n(9711),k=n(9909),I=k.enforce,S=k.get,N=u.Int8Array,T=N&&N.prototype,C=u.Uint8ClampedArray,E=C&&C.prototype,$=N&&b(N),R=T&&b(T),A=Object.prototype,_=u.TypeError,M=w("toStringTag"),F=v("TYPED_ARRAY_TAG"),D="TypedArrayConstructor",O=a&&!!x&&"Opera"!==p(u.opera),L=!1,P={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},z={BigInt64Array:8,BigUint64Array:8},B=function(t){if(!c(t))return!1;var e=p(t);return"DataView"===e||h(P,e)||h(z,e)},U=function(t){var e=b(t);if(c(e)){var n=S(e);return n&&h(n,D)?n[D]:U(e)}},V=function(t){if(!c(t))return!1;var e=p(t);return h(P,e)||h(z,e)},W=function(t){if(V(t))return t;throw _("Target is not a typed array")},G=function(t){if(l(t)&&(!x||y($,t)))return t;throw _(d(t)+" is not a typed array constructor")},H=function(t,e,n,r){if(i){if(n)for(var s in P){var o=u[s];if(o&&h(o.prototype,t))try{delete o.prototype[t]}catch(a){try{o.prototype[t]=e}catch(l){}}}R[t]&&!n||m(R,t,n?e:O&&T[t]||e,r)}},j=function(t,e,n){var r,s;if(i){if(x){if(n)for(r in P)if(s=u[r],s&&h(s,t))try{delete s[t]}catch(o){}if($[t]&&!n)return;try{return m($,t,n?e:O&&$[t]||e)}catch(o){}}for(r in P)s=u[r],!s||s[t]&&!n||m(s,t,e)}};for(r in P)s=u[r],o=s&&s.prototype,o?I(o)[D]=s:O=!1;for(r in z)s=u[r],o=s&&s.prototype,o&&(I(o)[D]=s);if((!O||!l($)||$===Function.prototype)&&($=function(){throw _("Incorrect invocation")},O))for(r in P)u[r]&&x(u[r],$);if((!O||!R||R===A)&&(R=$.prototype,O))for(r in P)u[r]&&x(u[r].prototype,R);if(O&&b(E)!==R&&x(E,R),i&&!h(R,M))for(r in L=!0,g(R,M,{get:function(){return c(this)?this[F]:void 0}}),P)u[r]&&f(u[r],F,r);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:O,TYPED_ARRAY_TAG:L&&F,aTypedArray:W,aTypedArrayConstructor:G,exportTypedArrayMethod:H,exportTypedArrayStaticMethod:j,getTypedArrayConstructor:U,isView:B,isTypedArray:V,TypedArray:$,TypedArrayPrototype:R}},1318:function(t,e,n){var r=n(5656),s=n(1400),o=n(6244),a=function(t){return function(e,n,a){var i,u=r(e),l=o(u),c=s(a,l);if(t&&n!=n){while(l>c)if(i=u[c++],i!=i)return!0}else for(;l>c;c++)if((t||c in u)&&u[c]===n)return t||c||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},9671:function(t,e,n){var r=n(9974),s=n(8361),o=n(7908),a=n(6244),i=function(t){var e=1==t;return function(n,i,u){var l,c,h=o(n),p=s(h),d=r(i,u),f=a(p);while(f-- >0)if(l=p[f],c=d(l,f,h),c)switch(t){case 0:return l;case 1:return f}return e?-1:void 0}};t.exports={findLast:i(0),findLastIndex:i(1)}},3658:function(t,e,n){"use strict";var r=n(9781),s=n(3157),o=TypeError,a=Object.getOwnPropertyDescriptor,i=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=i?function(t,e){if(s(t)&&!a(t,"length").writable)throw o("Cannot set read only .length");return t.length=e}:function(t,e){return t.length=e}},206:function(t,e,n){var r=n(1702);t.exports=r([].slice)},4326:function(t,e,n){var r=n(84),s=r({}.toString),o=r("".slice);t.exports=function(t){return o(s(t),8,-1)}},648:function(t,e,n){var r=n(1694),s=n(614),o=n(4326),a=n(5112),i=a("toStringTag"),u=Object,l="Arguments"==o(function(){return arguments}()),c=function(t,e){try{return t[e]}catch(n){}};t.exports=r?o:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=c(e=u(t),i))?n:l?o(e):"Object"==(r=o(e))&&s(e.callee)?"Arguments":r}},9920:function(t,e,n){var r=n(2597),s=n(3887),o=n(1236),a=n(3070);t.exports=function(t,e,n){for(var i=s(e),u=a.f,l=o.f,c=0;c<i.length;c++){var h=i[c];r(t,h)||n&&r(n,h)||u(t,h,l(e,h))}}},8544:function(t,e,n){var r=n(7293);t.exports=!r((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},8880:function(t,e,n){var r=n(9781),s=n(3070),o=n(9114);t.exports=r?function(t,e,n){return s.f(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},9114:function(t){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},7045:function(t,e,n){var r=n(6339),s=n(3070);t.exports=function(t,e,n){return n.get&&r(n.get,e,{getter:!0}),n.set&&r(n.set,e,{setter:!0}),s.f(t,e,n)}},8052:function(t,e,n){var r=n(614),s=n(3070),o=n(6339),a=n(3072);t.exports=function(t,e,n,i){i||(i={});var u=i.enumerable,l=void 0!==i.name?i.name:e;if(r(n)&&o(n,l,i),i.global)u?t[e]=n:a(e,n);else{try{i.unsafe?t[e]&&(u=!0):delete t[e]}catch(c){}u?t[e]=n:s.f(t,e,{value:n,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return t}},3072:function(t,e,n){var r=n(7854),s=Object.defineProperty;t.exports=function(t,e){try{s(r,t,{value:e,configurable:!0,writable:!0})}catch(n){r[t]=e}return e}},5117:function(t,e,n){"use strict";var r=n(6330),s=TypeError;t.exports=function(t,e){if(!delete t[e])throw s("Cannot delete property "+r(e)+" of "+r(t))}},9781:function(t,e,n){var r=n(7293);t.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:function(t){var e="object"==typeof document&&document.all,n="undefined"==typeof e&&void 0!==e;t.exports={all:e,IS_HTMLDDA:n}},317:function(t,e,n){var r=n(7854),s=n(111),o=r.document,a=s(o)&&s(o.createElement);t.exports=function(t){return a?o.createElement(t):{}}},7207:function(t){var e=TypeError,n=9007199254740991;t.exports=function(t){if(t>n)throw e("Maximum allowed index exceeded");return t}},3678:function(t){t.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},6833:function(t,e,n){var r=n(8113);t.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},5268:function(t,e,n){var r=n(4326),s=n(7854);t.exports="process"==r(s.process)},8113:function(t,e,n){var r=n(5005);t.exports=r("navigator","userAgent")||""},7392:function(t,e,n){var r,s,o=n(7854),a=n(8113),i=o.process,u=o.Deno,l=i&&i.versions||u&&u.version,c=l&&l.v8;c&&(r=c.split("."),s=r[0]>0&&r[0]<4?1:+(r[0]+r[1])),!s&&a&&(r=a.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/),r&&(s=+r[1]))),t.exports=s},748:function(t){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},1060:function(t,e,n){var r=n(1702),s=Error,o=r("".replace),a=function(t){return String(s(t).stack)}("zxcasd"),i=/\n\s*at [^:]*:[^\n]*/,u=i.test(a);t.exports=function(t,e){if(u&&"string"==typeof t&&!s.prepareStackTrace)while(e--)t=o(t,i,"");return t}},2109:function(t,e,n){var r=n(7854),s=n(1236).f,o=n(8880),a=n(8052),i=n(3072),u=n(9920),l=n(4705);t.exports=function(t,e){var n,c,h,p,d,f,m=t.target,g=t.global,y=t.stat;if(c=g?r:y?r[m]||i(m,{}):(r[m]||{}).prototype,c)for(h in e){if(d=e[h],t.dontCallGetSet?(f=s(c,h),p=f&&f.value):p=c[h],n=l(g?h:m+(y?".":"#")+h,t.forced),!n&&void 0!==p){if(typeof d==typeof p)continue;u(d,p)}(t.sham||p&&p.sham)&&o(d,"sham",!0),a(c,h,d,t)}}},7293:function(t){t.exports=function(t){try{return!!t()}catch(e){return!0}}},2104:function(t,e,n){var r=n(4374),s=Function.prototype,o=s.apply,a=s.call;t.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(o):function(){return a.apply(o,arguments)})},9974:function(t,e,n){var r=n(1702),s=n(9662),o=n(4374),a=r(r.bind);t.exports=function(t,e){return s(t),void 0===e?t:o?a(t,e):function(){return t.apply(e,arguments)}}},4374:function(t,e,n){var r=n(7293);t.exports=!r((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},6916:function(t,e,n){var r=n(4374),s=Function.prototype.call;t.exports=r?s.bind(s):function(){return s.apply(s,arguments)}},6530:function(t,e,n){var r=n(9781),s=n(2597),o=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,i=s(o,"name"),u=i&&"something"===function(){}.name,l=i&&(!r||r&&a(o,"name").configurable);t.exports={EXISTS:i,PROPER:u,CONFIGURABLE:l}},84:function(t,e,n){var r=n(4374),s=Function.prototype,o=s.call,a=r&&s.bind.bind(o,o);t.exports=function(t){return r?a(t):function(){return o.apply(t,arguments)}}},1702:function(t,e,n){var r=n(4326),s=n(84);t.exports=function(t){if("Function"===r(t))return s(t)}},5005:function(t,e,n){var r=n(7854),s=n(614),o=function(t){return s(t)?t:void 0};t.exports=function(t,e){return arguments.length<2?o(r[t]):r[t]&&r[t][e]}},8173:function(t,e,n){var r=n(9662),s=n(8554);t.exports=function(t,e){var n=t[e];return s(n)?void 0:r(n)}},7854:function(t,e,n){var r=function(t){return t&&t.Math==Math&&t};t.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()},2597:function(t,e,n){var r=n(1702),s=n(7908),o=r({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return o(s(t),e)}},3501:function(t){t.exports={}},490:function(t,e,n){var r=n(5005);t.exports=r("document","documentElement")},4664:function(t,e,n){var r=n(9781),s=n(7293),o=n(317);t.exports=!r&&!s((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},8361:function(t,e,n){var r=n(1702),s=n(7293),o=n(4326),a=Object,i=r("".split);t.exports=s((function(){return!a("z").propertyIsEnumerable(0)}))?function(t){return"String"==o(t)?i(t,""):a(t)}:a},9587:function(t,e,n){var r=n(614),s=n(111),o=n(7674);t.exports=function(t,e,n){var a,i;return o&&r(a=e.constructor)&&a!==n&&s(i=a.prototype)&&i!==n.prototype&&o(t,i),t}},2788:function(t,e,n){var r=n(1702),s=n(614),o=n(5465),a=r(Function.toString);s(o.inspectSource)||(o.inspectSource=function(t){return a(t)}),t.exports=o.inspectSource},9909:function(t,e,n){var r,s,o,a=n(4811),i=n(7854),u=n(111),l=n(8880),c=n(2597),h=n(5465),p=n(6200),d=n(3501),f="Object already initialized",m=i.TypeError,g=i.WeakMap,y=function(t){return o(t)?s(t):r(t,{})},b=function(t){return function(e){var n;if(!u(e)||(n=s(e)).type!==t)throw m("Incompatible receiver, "+t+" required");return n}};if(a||h.state){var x=h.state||(h.state=new g);x.get=x.get,x.has=x.has,x.set=x.set,r=function(t,e){if(x.has(t))throw m(f);return e.facade=t,x.set(t,e),e},s=function(t){return x.get(t)||{}},o=function(t){return x.has(t)}}else{var w=p("state");d[w]=!0,r=function(t,e){if(c(t,w))throw m(f);return e.facade=t,l(t,w,e),e},s=function(t){return c(t,w)?t[w]:{}},o=function(t){return c(t,w)}}t.exports={set:r,get:s,has:o,enforce:y,getterFor:b}},3157:function(t,e,n){var r=n(4326);t.exports=Array.isArray||function(t){return"Array"==r(t)}},614:function(t,e,n){var r=n(4154),s=r.all;t.exports=r.IS_HTMLDDA?function(t){return"function"==typeof t||t===s}:function(t){return"function"==typeof t}},4705:function(t,e,n){var r=n(7293),s=n(614),o=/#|\.prototype\./,a=function(t,e){var n=u[i(t)];return n==c||n!=l&&(s(e)?r(e):!!e)},i=a.normalize=function(t){return String(t).replace(o,".").toLowerCase()},u=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";t.exports=a},8554:function(t){t.exports=function(t){return null===t||void 0===t}},111:function(t,e,n){var r=n(614),s=n(4154),o=s.all;t.exports=s.IS_HTMLDDA?function(t){return"object"==typeof t?null!==t:r(t)||t===o}:function(t){return"object"==typeof t?null!==t:r(t)}},1913:function(t){t.exports=!1},2190:function(t,e,n){var r=n(5005),s=n(614),o=n(7976),a=n(3307),i=Object;t.exports=a?function(t){return"symbol"==typeof t}:function(t){var e=r("Symbol");return s(e)&&o(e.prototype,i(t))}},6244:function(t,e,n){var r=n(7466);t.exports=function(t){return r(t.length)}},6339:function(t,e,n){var r=n(7293),s=n(614),o=n(2597),a=n(9781),i=n(6530).CONFIGURABLE,u=n(2788),l=n(9909),c=l.enforce,h=l.get,p=Object.defineProperty,d=a&&!r((function(){return 8!==p((function(){}),"length",{value:8}).length})),f=String(String).split("String"),m=t.exports=function(t,e,n){"Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(e="get "+e),n&&n.setter&&(e="set "+e),(!o(t,"name")||i&&t.name!==e)&&(a?p(t,"name",{value:e,configurable:!0}):t.name=e),d&&n&&o(n,"arity")&&t.length!==n.arity&&p(t,"length",{value:n.arity});try{n&&o(n,"constructor")&&n.constructor?a&&p(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(s){}var r=c(t);return o(r,"source")||(r.source=f.join("string"==typeof e?e:"")),t};Function.prototype.toString=m((function(){return s(this)&&h(this).source||u(this)}),"toString")},4758:function(t){var e=Math.ceil,n=Math.floor;t.exports=Math.trunc||function(t){var r=+t;return(r>0?n:e)(r)}},6277:function(t,e,n){var r=n(1340);t.exports=function(t,e){return void 0===t?arguments.length<2?"":e:r(t)}},3070:function(t,e,n){var r=n(9781),s=n(4664),o=n(3353),a=n(9670),i=n(4948),u=TypeError,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",p="configurable",d="writable";e.f=r?o?function(t,e,n){if(a(t),e=i(e),a(n),"function"===typeof t&&"prototype"===e&&"value"in n&&d in n&&!n[d]){var r=c(t,e);r&&r[d]&&(t[e]=n.value,n={configurable:p in n?n[p]:r[p],enumerable:h in n?n[h]:r[h],writable:!1})}return l(t,e,n)}:l:function(t,e,n){if(a(t),e=i(e),a(n),s)try{return l(t,e,n)}catch(r){}if("get"in n||"set"in n)throw u("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},1236:function(t,e,n){var r=n(9781),s=n(6916),o=n(5296),a=n(9114),i=n(5656),u=n(4948),l=n(2597),c=n(4664),h=Object.getOwnPropertyDescriptor;e.f=r?h:function(t,e){if(t=i(t),e=u(e),c)try{return h(t,e)}catch(n){}if(l(t,e))return a(!s(o.f,t,e),t[e])}},8006:function(t,e,n){var r=n(6324),s=n(748),o=s.concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,o)}},5181:function(t,e){e.f=Object.getOwnPropertySymbols},9518:function(t,e,n){var r=n(2597),s=n(614),o=n(7908),a=n(6200),i=n(8544),u=a("IE_PROTO"),l=Object,c=l.prototype;t.exports=i?l.getPrototypeOf:function(t){var e=o(t);if(r(e,u))return e[u];var n=e.constructor;return s(n)&&e instanceof n?n.prototype:e instanceof l?c:null}},7976:function(t,e,n){var r=n(1702);t.exports=r({}.isPrototypeOf)},6324:function(t,e,n){var r=n(1702),s=n(2597),o=n(5656),a=n(1318).indexOf,i=n(3501),u=r([].push);t.exports=function(t,e){var n,r=o(t),l=0,c=[];for(n in r)!s(i,n)&&s(r,n)&&u(c,n);while(e.length>l)s(r,n=e[l++])&&(~a(c,n)||u(c,n));return c}},5296:function(t,e){"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,s=r&&!n.call({1:2},1);e.f=s?function(t){var e=r(this,t);return!!e&&e.enumerable}:n},7674:function(t,e,n){var r=n(1702),s=n(9670),o=n(6077);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{t=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),t(n,[]),e=n instanceof Array}catch(a){}return function(n,r){return s(n),o(r),e?t(n,r):n.__proto__=r,n}}():void 0)},2140:function(t,e,n){var r=n(6916),s=n(614),o=n(111),a=TypeError;t.exports=function(t,e){var n,i;if("string"===e&&s(n=t.toString)&&!o(i=r(n,t)))return i;if(s(n=t.valueOf)&&!o(i=r(n,t)))return i;if("string"!==e&&s(n=t.toString)&&!o(i=r(n,t)))return i;throw a("Can't convert object to primitive value")}},3887:function(t,e,n){var r=n(5005),s=n(1702),o=n(8006),a=n(5181),i=n(9670),u=s([].concat);t.exports=r("Reflect","ownKeys")||function(t){var e=o.f(i(t)),n=a.f;return n?u(e,n(t)):e}},7066:function(t,e,n){"use strict";var r=n(9670);t.exports=function(){var t=r(this),e="";return t.hasIndices&&(e+="d"),t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.unicodeSets&&(e+="v"),t.sticky&&(e+="y"),e}},4488:function(t,e,n){var r=n(8554),s=TypeError;t.exports=function(t){if(r(t))throw s("Can't call method on "+t);return t}},6200:function(t,e,n){var r=n(2309),s=n(9711),o=r("keys");t.exports=function(t){return o[t]||(o[t]=s(t))}},5465:function(t,e,n){var r=n(7854),s=n(3072),o="__core-js_shared__",a=r[o]||s(o,{});t.exports=a},2309:function(t,e,n){var r=n(1913),s=n(5465);(t.exports=function(t,e){return s[t]||(s[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.25.5",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.5/LICENSE",source:"https://github.com/zloirock/core-js"})},6293:function(t,e,n){var r=n(7392),s=n(7293);t.exports=!!Object.getOwnPropertySymbols&&!s((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},261:function(t,e,n){var r,s,o,a,i=n(7854),u=n(2104),l=n(9974),c=n(614),h=n(2597),p=n(7293),d=n(490),f=n(206),m=n(317),g=n(8053),y=n(6833),b=n(5268),x=i.setImmediate,w=i.clearImmediate,v=i.process,k=i.Dispatch,I=i.Function,S=i.MessageChannel,N=i.String,T=0,C={},E="onreadystatechange";try{r=i.location}catch(M){}var $=function(t){if(h(C,t)){var e=C[t];delete C[t],e()}},R=function(t){return function(){$(t)}},A=function(t){$(t.data)},_=function(t){i.postMessage(N(t),r.protocol+"//"+r.host)};x&&w||(x=function(t){g(arguments.length,1);var e=c(t)?t:I(t),n=f(arguments,1);return C[++T]=function(){u(e,void 0,n)},s(T),T},w=function(t){delete C[t]},b?s=function(t){v.nextTick(R(t))}:k&&k.now?s=function(t){k.now(R(t))}:S&&!y?(o=new S,a=o.port2,o.port1.onmessage=A,s=l(a.postMessage,a)):i.addEventListener&&c(i.postMessage)&&!i.importScripts&&r&&"file:"!==r.protocol&&!p(_)?(s=_,i.addEventListener("message",A,!1)):s=E in m("script")?function(t){d.appendChild(m("script"))[E]=function(){d.removeChild(this),$(t)}}:function(t){setTimeout(R(t),0)}),t.exports={set:x,clear:w}},1400:function(t,e,n){var r=n(9303),s=Math.max,o=Math.min;t.exports=function(t,e){var n=r(t);return n<0?s(n+e,0):o(n,e)}},5656:function(t,e,n){var r=n(8361),s=n(4488);t.exports=function(t){return r(s(t))}},9303:function(t,e,n){var r=n(4758);t.exports=function(t){var e=+t;return e!==e||0===e?0:r(e)}},7466:function(t,e,n){var r=n(9303),s=Math.min;t.exports=function(t){return t>0?s(r(t),9007199254740991):0}},7908:function(t,e,n){var r=n(4488),s=Object;t.exports=function(t){return s(r(t))}},7593:function(t,e,n){var r=n(6916),s=n(111),o=n(2190),a=n(8173),i=n(2140),u=n(5112),l=TypeError,c=u("toPrimitive");t.exports=function(t,e){if(!s(t)||o(t))return t;var n,u=a(t,c);if(u){if(void 0===e&&(e="default"),n=r(u,t,e),!s(n)||o(n))return n;throw l("Can't convert object to primitive value")}return void 0===e&&(e="number"),i(t,e)}},4948:function(t,e,n){var r=n(7593),s=n(2190);t.exports=function(t){var e=r(t,"string");return s(e)?e:e+""}},1694:function(t,e,n){var r=n(5112),s=r("toStringTag"),o={};o[s]="z",t.exports="[object z]"===String(o)},1340:function(t,e,n){var r=n(648),s=String;t.exports=function(t){if("Symbol"===r(t))throw TypeError("Cannot convert a Symbol value to a string");return s(t)}},6330:function(t){var e=String;t.exports=function(t){try{return e(t)}catch(n){return"Object"}}},9711:function(t,e,n){var r=n(1702),s=0,o=Math.random(),a=r(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++s+o,36)}},3307:function(t,e,n){var r=n(6293);t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:function(t,e,n){var r=n(9781),s=n(7293);t.exports=r&&s((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},8053:function(t){var e=TypeError;t.exports=function(t,n){if(t<n)throw e("Not enough arguments");return t}},4811:function(t,e,n){var r=n(7854),s=n(614),o=r.WeakMap;t.exports=s(o)&&/native code/.test(String(o))},5112:function(t,e,n){var r=n(7854),s=n(2309),o=n(2597),a=n(9711),i=n(6293),u=n(3307),l=s("wks"),c=r.Symbol,h=c&&c["for"],p=u?c:c&&c.withoutSetter||a;t.exports=function(t){if(!o(l,t)||!i&&"string"!=typeof l[t]){var e="Symbol."+t;i&&o(c,t)?l[t]=c[t]:l[t]=u&&h?h(e):p(e)}return l[t]}},7658:function(t,e,n){"use strict";var r=n(2109),s=n(7908),o=n(6244),a=n(3658),i=n(7207),u=n(7293),l=u((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(t){return t instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:l||c},{push:function(t){var e=s(this),n=o(e),r=arguments.length;i(n+r);for(var u=0;u<r;u++)e[n]=arguments[u],n++;return a(e,n),n}})},541:function(t,e,n){"use strict";var r=n(2109),s=n(7908),o=n(6244),a=n(3658),i=n(5117),u=n(7207),l=1!==[].unshift(0),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).unshift()}catch(t){return t instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:l||c},{unshift:function(t){var e=s(this),n=o(e),r=arguments.length;if(r){u(n+r);var l=n;while(l--){var c=l+r;l in e?e[c]=e[l]:i(e,c)}for(var h=0;h<r;h++)e[h]=arguments[h]}return a(e,n+r)}})},2087:function(t,e,n){var r=n(7854),s=n(9781),o=n(7045),a=n(7066),i=n(7293),u=r.RegExp,l=u.prototype,c=s&&i((function(){var t=!0;try{u(".","d")}catch(c){t=!1}var e={},n="",r=t?"dgimsy":"gimsy",s=function(t,r){Object.defineProperty(e,t,{get:function(){return n+=r,!0}})},o={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var a in t&&(o.hasIndices="d"),o)s(a,o[a]);var i=Object.getOwnPropertyDescriptor(l,"flags").get.call(e);return i!==r||n!==r}));c&&o(l,"flags",{configurable:!0,get:a})},4590:function(t,e,n){"use strict";var r=n(260),s=n(9671).findLastIndex,o=r.aTypedArray,a=r.exportTypedArrayMethod;a("findLastIndex",(function(t){return s(o(this),t,arguments.length>1?arguments[1]:void 0)}))},3408:function(t,e,n){"use strict";var r=n(260),s=n(9671).findLast,o=r.aTypedArray,a=r.exportTypedArrayMethod;a("findLast",(function(t){return s(o(this),t,arguments.length>1?arguments[1]:void 0)}))},1091:function(t,e,n){var r=n(2109),s=n(7854),o=n(261).clear;r({global:!0,bind:!0,enumerable:!0,forced:s.clearImmediate!==o},{clearImmediate:o})},2801:function(t,e,n){"use strict";var r=n(2109),s=n(7854),o=n(5005),a=n(9114),i=n(3070).f,u=n(2597),l=n(5787),c=n(9587),h=n(6277),p=n(3678),d=n(1060),f=n(9781),m=n(1913),g="DOMException",y=o("Error"),b=o(g),x=function(){l(this,w);var t=arguments.length,e=h(t<1?void 0:arguments[0]),n=h(t<2?void 0:arguments[1],"Error"),r=new b(e,n),s=y(e);return s.name=g,i(r,"stack",a(1,d(s.stack,1))),c(r,this,x),r},w=x.prototype=b.prototype,v="stack"in y(g),k="stack"in new b(1,2),I=b&&f&&Object.getOwnPropertyDescriptor(s,g),S=!!I&&!(I.writable&&I.configurable),N=v&&!S&&!k;r({global:!0,constructor:!0,forced:m||N},{DOMException:N?x:b});var T=o(g),C=T.prototype;if(C.constructor!==T)for(var E in m||i(C,"constructor",a(1,T)),p)if(u(p,E)){var $=p[E],R=$.s;u(T,R)||i(T,R,a(6,$.c))}},4633:function(t,e,n){n(1091),n(2986)},2986:function(t,e,n){var r=n(2109),s=n(7854),o=n(261).set;r({global:!0,bind:!0,enumerable:!0,forced:s.setImmediate!==o},{setImmediate:o})},4870:function(t,e,n){"use strict";n.d(e,{Bj:function(){return o},Fl:function(){return Gt},IU:function(){return Et},Jd:function(){return I},PG:function(){return St},SU:function(){return zt},Um:function(){return vt},WL:function(){return Ut},X$:function(){return C},X3:function(){return Ct},XI:function(){return Ot},Xl:function(){return $t},dq:function(){return Ft},iH:function(){return Dt},j:function(){return N},lk:function(){return S},qj:function(){return wt},qq:function(){return x},yT:function(){return Tt}});n(7658);var r=n(7139);let s;class o{constructor(t=!1){this.active=!0,this.effects=[],this.cleanups=[],!t&&s&&(this.parent=s,this.index=(s.scopes||(s.scopes=[])).push(this)-1)}run(t){if(this.active){const e=s;try{return s=this,t()}finally{s=e}}else 0}on(){s=this}off(){s=this.parent}stop(t){if(this.active){let e,n;for(e=0,n=this.effects.length;e<n;e++)this.effects[e].stop();for(e=0,n=this.cleanups.length;e<n;e++)this.cleanups[e]();if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].stop(!0);if(this.parent&&!t){const t=this.parent.scopes.pop();t&&t!==this&&(this.parent.scopes[this.index]=t,t.index=this.index)}this.active=!1}}}function a(t,e=s){e&&e.active&&e.effects.push(t)}const i=t=>{const e=new Set(t);return e.w=0,e.n=0,e},u=t=>(t.w&f)>0,l=t=>(t.n&f)>0,c=({deps:t})=>{if(t.length)for(let e=0;e<t.length;e++)t[e].w|=f},h=t=>{const{deps:e}=t;if(e.length){let n=0;for(let r=0;r<e.length;r++){const s=e[r];u(s)&&!l(s)?s.delete(t):e[n++]=s,s.w&=~f,s.n&=~f}e.length=n}},p=new WeakMap;let d=0,f=1;const m=30;let g;const y=Symbol(""),b=Symbol("");class x{constructor(t,e=null,n){this.fn=t,this.scheduler=e,this.active=!0,this.deps=[],this.parent=void 0,a(this,n)}run(){if(!this.active)return this.fn();let t=g,e=v;while(t){if(t===this)return;t=t.parent}try{return this.parent=g,g=this,v=!0,f=1<<++d,d<=m?c(this):w(this),this.fn()}finally{d<=m&&h(this),f=1<<--d,g=this.parent,v=e,this.parent=void 0,this.deferStop&&this.stop()}}stop(){g===this?this.deferStop=!0:this.active&&(w(this),this.onStop&&this.onStop(),this.active=!1)}}function w(t){const{deps:e}=t;if(e.length){for(let n=0;n<e.length;n++)e[n].delete(t);e.length=0}}let v=!0;const k=[];function I(){k.push(v),v=!1}function S(){const t=k.pop();v=void 0===t||t}function N(t,e,n){if(v&&g){let e=p.get(t);e||p.set(t,e=new Map);let r=e.get(n);r||e.set(n,r=i());const s=void 0;T(r,s)}}function T(t,e){let n=!1;d<=m?l(t)||(t.n|=f,n=!u(t)):n=!t.has(g),n&&(t.add(g),g.deps.push(t))}function C(t,e,n,s,o,a){const u=p.get(t);if(!u)return;let l=[];if("clear"===e)l=[...u.values()];else if("length"===n&&(0,r.kJ)(t))u.forEach(((t,e)=>{("length"===e||e>=s)&&l.push(t)}));else switch(void 0!==n&&l.push(u.get(n)),e){case"add":(0,r.kJ)(t)?(0,r.S0)(n)&&l.push(u.get("length")):(l.push(u.get(y)),(0,r._N)(t)&&l.push(u.get(b)));break;case"delete":(0,r.kJ)(t)||(l.push(u.get(y)),(0,r._N)(t)&&l.push(u.get(b)));break;case"set":(0,r._N)(t)&&l.push(u.get(y));break}if(1===l.length)l[0]&&E(l[0]);else{const t=[];for(const e of l)e&&t.push(...e);E(i(t))}}function E(t,e){const n=(0,r.kJ)(t)?t:[...t];for(const r of n)r.computed&&$(r,e);for(const r of n)r.computed||$(r,e)}function $(t,e){(t!==g||t.allowRecurse)&&(t.scheduler?t.scheduler():t.run())}const R=(0,r.fY)("__proto__,__v_isRef,__isVue"),A=new Set(Object.getOwnPropertyNames(Symbol).filter((t=>"arguments"!==t&&"caller"!==t)).map((t=>Symbol[t])).filter(r.yk)),_=L(),M=L(!1,!0),F=L(!0),D=O();function O(){const t={};return["includes","indexOf","lastIndexOf"].forEach((e=>{t[e]=function(...t){const n=Et(this);for(let e=0,s=this.length;e<s;e++)N(n,"get",e+"");const r=n[e](...t);return-1===r||!1===r?n[e](...t.map(Et)):r}})),["push","pop","shift","unshift","splice"].forEach((e=>{t[e]=function(...t){I();const n=Et(this)[e].apply(this,t);return S(),n}})),t}function L(t=!1,e=!1){return function(n,s,o){if("__v_isReactive"===s)return!t;if("__v_isReadonly"===s)return t;if("__v_isShallow"===s)return e;if("__v_raw"===s&&o===(t?e?yt:gt:e?mt:ft).get(n))return n;const a=(0,r.kJ)(n);if(!t&&a&&(0,r.RI)(D,s))return Reflect.get(D,s,o);const i=Reflect.get(n,s,o);return((0,r.yk)(s)?A.has(s):R(s))?i:(t||N(n,"get",s),e?i:Ft(i)?a&&(0,r.S0)(s)?i:i.value:(0,r.Kn)(i)?t?kt(i):wt(i):i)}}const P=B(),z=B(!0);function B(t=!1){return function(e,n,s,o){let a=e[n];if(Nt(a)&&Ft(a)&&!Ft(s))return!1;if(!t&&(Tt(s)||Nt(s)||(a=Et(a),s=Et(s)),!(0,r.kJ)(e)&&Ft(a)&&!Ft(s)))return a.value=s,!0;const i=(0,r.kJ)(e)&&(0,r.S0)(n)?Number(n)<e.length:(0,r.RI)(e,n),u=Reflect.set(e,n,s,o);return e===Et(o)&&(i?(0,r.aU)(s,a)&&C(e,"set",n,s,a):C(e,"add",n,s)),u}}function U(t,e){const n=(0,r.RI)(t,e),s=t[e],o=Reflect.deleteProperty(t,e);return o&&n&&C(t,"delete",e,void 0,s),o}function V(t,e){const n=Reflect.has(t,e);return(0,r.yk)(e)&&A.has(e)||N(t,"has",e),n}function W(t){return N(t,"iterate",(0,r.kJ)(t)?"length":y),Reflect.ownKeys(t)}const G={get:_,set:P,deleteProperty:U,has:V,ownKeys:W},H={get:F,set(t,e){return!0},deleteProperty(t,e){return!0}},j=(0,r.l7)({},G,{get:M,set:z}),q=t=>t,K=t=>Reflect.getPrototypeOf(t);function X(t,e,n=!1,r=!1){t=t["__v_raw"];const s=Et(t),o=Et(e);n||(e!==o&&N(s,"get",e),N(s,"get",o));const{has:a}=K(s),i=r?q:n?At:Rt;return a.call(s,e)?i(t.get(e)):a.call(s,o)?i(t.get(o)):void(t!==s&&t.get(e))}function Y(t,e=!1){const n=this["__v_raw"],r=Et(n),s=Et(t);return e||(t!==s&&N(r,"has",t),N(r,"has",s)),t===s?n.has(t):n.has(t)||n.has(s)}function J(t,e=!1){return t=t["__v_raw"],!e&&N(Et(t),"iterate",y),Reflect.get(t,"size",t)}function Z(t){t=Et(t);const e=Et(this),n=K(e),r=n.has.call(e,t);return r||(e.add(t),C(e,"add",t,t)),this}function Q(t,e){e=Et(e);const n=Et(this),{has:s,get:o}=K(n);let a=s.call(n,t);a||(t=Et(t),a=s.call(n,t));const i=o.call(n,t);return n.set(t,e),a?(0,r.aU)(e,i)&&C(n,"set",t,e,i):C(n,"add",t,e),this}function tt(t){const e=Et(this),{has:n,get:r}=K(e);let s=n.call(e,t);s||(t=Et(t),s=n.call(e,t));const o=r?r.call(e,t):void 0,a=e.delete(t);return s&&C(e,"delete",t,void 0,o),a}function et(){const t=Et(this),e=0!==t.size,n=void 0,r=t.clear();return e&&C(t,"clear",void 0,void 0,n),r}function nt(t,e){return function(n,r){const s=this,o=s["__v_raw"],a=Et(o),i=e?q:t?At:Rt;return!t&&N(a,"iterate",y),o.forEach(((t,e)=>n.call(r,i(t),i(e),s)))}}function rt(t,e,n){return function(...s){const o=this["__v_raw"],a=Et(o),i=(0,r._N)(a),u="entries"===t||t===Symbol.iterator&&i,l="keys"===t&&i,c=o[t](...s),h=n?q:e?At:Rt;return!e&&N(a,"iterate",l?b:y),{next(){const{value:t,done:e}=c.next();return e?{value:t,done:e}:{value:u?[h(t[0]),h(t[1])]:h(t),done:e}},[Symbol.iterator](){return this}}}}function st(t){return function(...e){return"delete"!==t&&this}}function ot(){const t={get(t){return X(this,t)},get size(){return J(this)},has:Y,add:Z,set:Q,delete:tt,clear:et,forEach:nt(!1,!1)},e={get(t){return X(this,t,!1,!0)},get size(){return J(this)},has:Y,add:Z,set:Q,delete:tt,clear:et,forEach:nt(!1,!0)},n={get(t){return X(this,t,!0)},get size(){return J(this,!0)},has(t){return Y.call(this,t,!0)},add:st("add"),set:st("set"),delete:st("delete"),clear:st("clear"),forEach:nt(!0,!1)},r={get(t){return X(this,t,!0,!0)},get size(){return J(this,!0)},has(t){return Y.call(this,t,!0)},add:st("add"),set:st("set"),delete:st("delete"),clear:st("clear"),forEach:nt(!0,!0)},s=["keys","values","entries",Symbol.iterator];return s.forEach((s=>{t[s]=rt(s,!1,!1),n[s]=rt(s,!0,!1),e[s]=rt(s,!1,!0),r[s]=rt(s,!0,!0)})),[t,n,e,r]}const[at,it,ut,lt]=ot();function ct(t,e){const n=e?t?lt:ut:t?it:at;return(e,s,o)=>"__v_isReactive"===s?!t:"__v_isReadonly"===s?t:"__v_raw"===s?e:Reflect.get((0,r.RI)(n,s)&&s in e?n:e,s,o)}const ht={get:ct(!1,!1)},pt={get:ct(!1,!0)},dt={get:ct(!0,!1)};const ft=new WeakMap,mt=new WeakMap,gt=new WeakMap,yt=new WeakMap;function bt(t){switch(t){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function xt(t){return t["__v_skip"]||!Object.isExtensible(t)?0:bt((0,r.W7)(t))}function wt(t){return Nt(t)?t:It(t,!1,G,ht,ft)}function vt(t){return It(t,!1,j,pt,mt)}function kt(t){return It(t,!0,H,dt,gt)}function It(t,e,n,s,o){if(!(0,r.Kn)(t))return t;if(t["__v_raw"]&&(!e||!t["__v_isReactive"]))return t;const a=o.get(t);if(a)return a;const i=xt(t);if(0===i)return t;const u=new Proxy(t,2===i?s:n);return o.set(t,u),u}function St(t){return Nt(t)?St(t["__v_raw"]):!(!t||!t["__v_isReactive"])}function Nt(t){return!(!t||!t["__v_isReadonly"])}function Tt(t){return!(!t||!t["__v_isShallow"])}function Ct(t){return St(t)||Nt(t)}function Et(t){const e=t&&t["__v_raw"];return e?Et(e):t}function $t(t){return(0,r.Nj)(t,"__v_skip",!0),t}const Rt=t=>(0,r.Kn)(t)?wt(t):t,At=t=>(0,r.Kn)(t)?kt(t):t;function _t(t){v&&g&&(t=Et(t),T(t.dep||(t.dep=i())))}function Mt(t,e){t=Et(t),t.dep&&E(t.dep)}function Ft(t){return!(!t||!0!==t.__v_isRef)}function Dt(t){return Lt(t,!1)}function Ot(t){return Lt(t,!0)}function Lt(t,e){return Ft(t)?t:new Pt(t,e)}class Pt{constructor(t,e){this.__v_isShallow=e,this.dep=void 0,this.__v_isRef=!0,this._rawValue=e?t:Et(t),this._value=e?t:Rt(t)}get value(){return _t(this),this._value}set value(t){const e=this.__v_isShallow||Tt(t)||Nt(t);t=e?t:Et(t),(0,r.aU)(t,this._rawValue)&&(this._rawValue=t,this._value=e?t:Rt(t),Mt(this,t))}}function zt(t){return Ft(t)?t.value:t}const Bt={get:(t,e,n)=>zt(Reflect.get(t,e,n)),set:(t,e,n,r)=>{const s=t[e];return Ft(s)&&!Ft(n)?(s.value=n,!0):Reflect.set(t,e,n,r)}};function Ut(t){return St(t)?t:new Proxy(t,Bt)}var Vt;class Wt{constructor(t,e,n,r){this._setter=e,this.dep=void 0,this.__v_isRef=!0,this[Vt]=!1,this._dirty=!0,this.effect=new x(t,(()=>{this._dirty||(this._dirty=!0,Mt(this))})),this.effect.computed=this,this.effect.active=this._cacheable=!r,this["__v_isReadonly"]=n}get value(){const t=Et(this);return _t(t),!t._dirty&&t._cacheable||(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}function Gt(t,e,n=!1){let s,o;const a=(0,r.mf)(t);a?(s=t,o=r.dG):(s=t.get,o=t.set);const i=new Wt(s,o,a||!o,n);return i}Vt="__v_isReadonly"},3396:function(t,e,n){"use strict";n.d(e,{$d:function(){return a},FN:function(){return ln},Fl:function(){return Nn},HY:function(){return Ee},JJ:function(){return G},LL:function(){return Ft},P$:function(){return et},Q6:function(){return it},U2:function(){return rt},Us:function(){return ke},Wm:function(){return qe},Y3:function(){return b},Y8:function(){return Z},YP:function(){return q},_:function(){return je},aZ:function(){return ut},f3:function(){return H},h:function(){return Tn},iD:function(){return ze},ic:function(){return It},j4:function(){return Be},kq:function(){return Ze},nK:function(){return at},up:function(){return _t},wg:function(){return Fe}});n(7658),n(541);var r=n(4870),s=n(7139);function o(t,e,n,r){let s;try{s=r?t(...r):t()}catch(o){i(o,e,n)}return s}function a(t,e,n,r){if((0,s.mf)(t)){const a=o(t,e,n,r);return a&&(0,s.tI)(a)&&a.catch((t=>{i(t,e,n)})),a}const u=[];for(let s=0;s<t.length;s++)u.push(a(t[s],e,n,r));return u}function i(t,e,n,r=!0){const s=e?e.vnode:null;if(e){let r=e.parent;const s=e.proxy,a=n;while(r){const e=r.ec;if(e)for(let n=0;n<e.length;n++)if(!1===e[n](t,s,a))return;r=r.parent}const i=e.appContext.config.errorHandler;if(i)return void o(i,null,10,[t,s,a])}u(t,n,s,r)}function u(t,e,n,r=!0){console.error(t)}let l=!1,c=!1;const h=[];let p=0;const d=[];let f=null,m=0;const g=Promise.resolve();let y=null;function b(t){const e=y||g;return t?e.then(this?t.bind(this):t):e}function x(t){let e=p+1,n=h.length;while(e<n){const r=e+n>>>1,s=T(h[r]);s<t?e=r+1:n=r}return e}function w(t){h.length&&h.includes(t,l&&t.allowRecurse?p+1:p)||(null==t.id?h.push(t):h.splice(x(t.id),0,t),v())}function v(){l||c||(c=!0,y=g.then(E))}function k(t){const e=h.indexOf(t);e>p&&h.splice(e,1)}function I(t){(0,s.kJ)(t)?d.push(...t):f&&f.includes(t,t.allowRecurse?m+1:m)||d.push(t),v()}function S(t,e=(l?p+1:0)){for(0;e<h.length;e++){const t=h[e];t&&t.pre&&(h.splice(e,1),e--,t())}}function N(t){if(d.length){const t=[...new Set(d)];if(d.length=0,f)return void f.push(...t);for(f=t,f.sort(((t,e)=>T(t)-T(e))),m=0;m<f.length;m++)f[m]();f=null,m=0}}const T=t=>null==t.id?1/0:t.id,C=(t,e)=>{const n=T(t)-T(e);if(0===n){if(t.pre&&!e.pre)return-1;if(e.pre&&!t.pre)return 1}return n};function E(t){c=!1,l=!0,h.sort(C);s.dG;try{for(p=0;p<h.length;p++){const t=h[p];t&&!1!==t.active&&o(t,null,14)}}finally{p=0,h.length=0,N(t),l=!1,y=null,(h.length||d.length)&&E(t)}}new Set;new Map;function $(t,e,...n){if(t.isUnmounted)return;const r=t.vnode.props||s.kT;let o=n;const i=e.startsWith("update:"),u=i&&e.slice(7);if(u&&u in r){const t=`${"modelValue"===u?"model":u}Modifiers`,{number:e,trim:a}=r[t]||s.kT;a&&(o=n.map((t=>t.trim()))),e&&(o=n.map(s.He))}let l;let c=r[l=(0,s.hR)(e)]||r[l=(0,s.hR)((0,s._A)(e))];!c&&i&&(c=r[l=(0,s.hR)((0,s.rs)(e))]),c&&a(c,t,6,o);const h=r[l+"Once"];if(h){if(t.emitted){if(t.emitted[l])return}else t.emitted={};t.emitted[l]=!0,a(h,t,6,o)}}function R(t,e,n=!1){const r=e.emitsCache,o=r.get(t);if(void 0!==o)return o;const a=t.emits;let i={},u=!1;if(!(0,s.mf)(t)){const r=t=>{const n=R(t,e,!0);n&&(u=!0,(0,s.l7)(i,n))};!n&&e.mixins.length&&e.mixins.forEach(r),t.extends&&r(t.extends),t.mixins&&t.mixins.forEach(r)}return a||u?((0,s.kJ)(a)?a.forEach((t=>i[t]=null)):(0,s.l7)(i,a),(0,s.Kn)(t)&&r.set(t,i),i):((0,s.Kn)(t)&&r.set(t,null),null)}function A(t,e){return!(!t||!(0,s.F7)(e))&&(e=e.slice(2).replace(/Once$/,""),(0,s.RI)(t,e[0].toLowerCase()+e.slice(1))||(0,s.RI)(t,(0,s.rs)(e))||(0,s.RI)(t,e))}let _=null,M=null;function F(t){const e=_;return _=t,M=t&&t.type.__scopeId||null,e}function D(t,e=_,n){if(!e)return t;if(t._n)return t;const r=(...n)=>{r._d&&Le(-1);const s=F(e),o=t(...n);return F(s),r._d&&Le(1),o};return r._n=!0,r._c=!0,r._d=!0,r}function O(t){const{type:e,vnode:n,proxy:r,withProxy:o,props:a,propsOptions:[u],slots:l,attrs:c,emit:h,render:p,renderCache:d,data:f,setupState:m,ctx:g,inheritAttrs:y}=t;let b,x;const w=F(t);try{if(4&n.shapeFlag){const t=o||r;b=Qe(p.call(t,t,d,a,m,f,g)),x=c}else{const t=e;0,b=Qe(t.length>1?t(a,{attrs:c,slots:l,emit:h}):t(a,null)),x=e.props?c:L(c)}}catch(k){_e.length=0,i(k,t,1),b=qe(Re)}let v=b;if(x&&!1!==y){const t=Object.keys(x),{shapeFlag:e}=v;t.length&&7&e&&(u&&t.some(s.tR)&&(x=P(x,u)),v=Ye(v,x))}return n.dirs&&(v=Ye(v),v.dirs=v.dirs?v.dirs.concat(n.dirs):n.dirs),n.transition&&(v.transition=n.transition),b=v,F(w),b}const L=t=>{let e;for(const n in t)("class"===n||"style"===n||(0,s.F7)(n))&&((e||(e={}))[n]=t[n]);return e},P=(t,e)=>{const n={};for(const r in t)(0,s.tR)(r)&&r.slice(9)in e||(n[r]=t[r]);return n};function z(t,e,n){const{props:r,children:s,component:o}=t,{props:a,children:i,patchFlag:u}=e,l=o.emitsOptions;if(e.dirs||e.transition)return!0;if(!(n&&u>=0))return!(!s&&!i||i&&i.$stable)||r!==a&&(r?!a||B(r,a,l):!!a);if(1024&u)return!0;if(16&u)return r?B(r,a,l):!!a;if(8&u){const t=e.dynamicProps;for(let e=0;e<t.length;e++){const n=t[e];if(a[n]!==r[n]&&!A(l,n))return!0}}return!1}function B(t,e,n){const r=Object.keys(e);if(r.length!==Object.keys(t).length)return!0;for(let s=0;s<r.length;s++){const o=r[s];if(e[o]!==t[o]&&!A(n,o))return!0}return!1}function U({vnode:t,parent:e},n){while(e&&e.subTree===t)(t=e.vnode).el=n,e=e.parent}const V=t=>t.__isSuspense;function W(t,e){e&&e.pendingBranch?(0,s.kJ)(t)?e.effects.push(...t):e.effects.push(t):I(t)}function G(t,e){if(un){let n=un.provides;const r=un.parent&&un.parent.provides;r===n&&(n=un.provides=Object.create(r)),n[t]=e}else 0}function H(t,e,n=!1){const r=un||_;if(r){const o=null==r.parent?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(o&&t in o)return o[t];if(arguments.length>1)return n&&(0,s.mf)(e)?e.call(r.proxy):e}else 0}const j={};function q(t,e,n){return K(t,e,n)}function K(t,e,{immediate:n,deep:i,flush:u,onTrack:l,onTrigger:c}=s.kT){const h=un;let p,d,f=!1,m=!1;if((0,r.dq)(t)?(p=()=>t.value,f=(0,r.yT)(t)):(0,r.PG)(t)?(p=()=>t,i=!0):(0,s.kJ)(t)?(m=!0,f=t.some((t=>(0,r.PG)(t)||(0,r.yT)(t))),p=()=>t.map((t=>(0,r.dq)(t)?t.value:(0,r.PG)(t)?J(t):(0,s.mf)(t)?o(t,h,2):void 0))):p=(0,s.mf)(t)?e?()=>o(t,h,2):()=>{if(!h||!h.isUnmounted)return d&&d(),a(t,h,3,[g])}:s.dG,e&&i){const t=p;p=()=>J(t())}let g=t=>{d=v.onStop=()=>{o(t,h,4)}};if(mn)return g=s.dG,e?n&&a(e,h,3,[p(),m?[]:void 0,g]):p(),s.dG;let y=m?[]:j;const b=()=>{if(v.active)if(e){const t=v.run();(i||f||(m?t.some(((t,e)=>(0,s.aU)(t,y[e]))):(0,s.aU)(t,y)))&&(d&&d(),a(e,h,3,[t,y===j?void 0:y,g]),y=t)}else v.run()};let x;b.allowRecurse=!!e,"sync"===u?x=b:"post"===u?x=()=>ve(b,h&&h.suspense):(b.pre=!0,h&&(b.id=h.uid),x=()=>w(b));const v=new r.qq(p,x);return e?n?b():y=v.run():"post"===u?ve(v.run.bind(v),h&&h.suspense):v.run(),()=>{v.stop(),h&&h.scope&&(0,s.Od)(h.scope.effects,v)}}function X(t,e,n){const r=this.proxy,o=(0,s.HD)(t)?t.includes(".")?Y(r,t):()=>r[t]:t.bind(r,r);let a;(0,s.mf)(e)?a=e:(a=e.handler,n=e);const i=un;cn(this);const u=K(o,a.bind(r),n);return i?cn(i):hn(),u}function Y(t,e){const n=e.split(".");return()=>{let e=t;for(let t=0;t<n.length&&e;t++)e=e[n[t]];return e}}function J(t,e){if(!(0,s.Kn)(t)||t["__v_skip"])return t;if(e=e||new Set,e.has(t))return t;if(e.add(t),(0,r.dq)(t))J(t.value,e);else if((0,s.kJ)(t))for(let n=0;n<t.length;n++)J(t[n],e);else if((0,s.DM)(t)||(0,s._N)(t))t.forEach((t=>{J(t,e)}));else if((0,s.PO)(t))for(const n in t)J(t[n],e);return t}function Z(){const t={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return vt((()=>{t.isMounted=!0})),St((()=>{t.isUnmounting=!0})),t}const Q=[Function,Array],tt={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Q,onEnter:Q,onAfterEnter:Q,onEnterCancelled:Q,onBeforeLeave:Q,onLeave:Q,onAfterLeave:Q,onLeaveCancelled:Q,onBeforeAppear:Q,onAppear:Q,onAfterAppear:Q,onAppearCancelled:Q},setup(t,{slots:e}){const n=ln(),s=Z();let o;return()=>{const a=e.default&&it(e.default(),!0);if(!a||!a.length)return;let i=a[0];if(a.length>1){let t=!1;for(const e of a)if(e.type!==Re){0,i=e,t=!0;break}}const u=(0,r.IU)(t),{mode:l}=u;if(s.isLeaving)return st(i);const c=ot(i);if(!c)return st(i);const h=rt(c,u,s,n);at(c,h);const p=n.subTree,d=p&&ot(p);let f=!1;const{getTransitionKey:m}=c.type;if(m){const t=m();void 0===o?o=t:t!==o&&(o=t,f=!0)}if(d&&d.type!==Re&&(!Ve(c,d)||f)){const t=rt(d,u,s,n);if(at(d,t),"out-in"===l)return s.isLeaving=!0,t.afterLeave=()=>{s.isLeaving=!1,n.update()},st(i);"in-out"===l&&c.type!==Re&&(t.delayLeave=(t,e,n)=>{const r=nt(s,d);r[String(d.key)]=d,t._leaveCb=()=>{e(),t._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=n})}return i}}},et=tt;function nt(t,e){const{leavingVNodes:n}=t;let r=n.get(e.type);return r||(r=Object.create(null),n.set(e.type,r)),r}function rt(t,e,n,r){const{appear:o,mode:i,persisted:u=!1,onBeforeEnter:l,onEnter:c,onAfterEnter:h,onEnterCancelled:p,onBeforeLeave:d,onLeave:f,onAfterLeave:m,onLeaveCancelled:g,onBeforeAppear:y,onAppear:b,onAfterAppear:x,onAppearCancelled:w}=e,v=String(t.key),k=nt(n,t),I=(t,e)=>{t&&a(t,r,9,e)},S=(t,e)=>{const n=e[1];I(t,e),(0,s.kJ)(t)?t.every((t=>t.length<=1))&&n():t.length<=1&&n()},N={mode:i,persisted:u,beforeEnter(e){let r=l;if(!n.isMounted){if(!o)return;r=y||l}e._leaveCb&&e._leaveCb(!0);const s=k[v];s&&Ve(t,s)&&s.el._leaveCb&&s.el._leaveCb(),I(r,[e])},enter(t){let e=c,r=h,s=p;if(!n.isMounted){if(!o)return;e=b||c,r=x||h,s=w||p}let a=!1;const i=t._enterCb=e=>{a||(a=!0,I(e?s:r,[t]),N.delayedLeave&&N.delayedLeave(),t._enterCb=void 0)};e?S(e,[t,i]):i()},leave(e,r){const s=String(t.key);if(e._enterCb&&e._enterCb(!0),n.isUnmounting)return r();I(d,[e]);let o=!1;const a=e._leaveCb=n=>{o||(o=!0,r(),I(n?g:m,[e]),e._leaveCb=void 0,k[s]===t&&delete k[s])};k[s]=t,f?S(f,[e,a]):a()},clone(t){return rt(t,e,n,r)}};return N}function st(t){if(ct(t))return t=Ye(t),t.children=null,t}function ot(t){return ct(t)?t.children?t.children[0]:void 0:t}function at(t,e){6&t.shapeFlag&&t.component?at(t.component.subTree,e):128&t.shapeFlag?(t.ssContent.transition=e.clone(t.ssContent),t.ssFallback.transition=e.clone(t.ssFallback)):t.transition=e}function it(t,e=!1,n){let r=[],s=0;for(let o=0;o<t.length;o++){let a=t[o];const i=null==n?a.key:String(n)+String(null!=a.key?a.key:o);a.type===Ee?(128&a.patchFlag&&s++,r=r.concat(it(a.children,e,i))):(e||a.type!==Re)&&r.push(null!=i?Ye(a,{key:i}):a)}if(s>1)for(let o=0;o<r.length;o++)r[o].patchFlag=-2;return r}function ut(t){return(0,s.mf)(t)?{setup:t,name:t.name}:t}const lt=t=>!!t.type.__asyncLoader;const ct=t=>t.type.__isKeepAlive;RegExp,RegExp;function ht(t,e){return(0,s.kJ)(t)?t.some((t=>ht(t,e))):(0,s.HD)(t)?t.split(",").includes(e):!!t.test&&t.test(e)}function pt(t,e){ft(t,"a",e)}function dt(t,e){ft(t,"da",e)}function ft(t,e,n=un){const r=t.__wdc||(t.__wdc=()=>{let e=n;while(e){if(e.isDeactivated)return;e=e.parent}return t()});if(bt(e,r,n),n){let t=n.parent;while(t&&t.parent)ct(t.parent.vnode)&&mt(r,e,n,t),t=t.parent}}function mt(t,e,n,r){const o=bt(e,t,r,!0);Nt((()=>{(0,s.Od)(r[e],o)}),n)}function gt(t){let e=t.shapeFlag;256&e&&(e-=256),512&e&&(e-=512),t.shapeFlag=e}function yt(t){return 128&t.shapeFlag?t.ssContent:t}function bt(t,e,n=un,s=!1){if(n){const o=n[t]||(n[t]=[]),i=e.__weh||(e.__weh=(...s)=>{if(n.isUnmounted)return;(0,r.Jd)(),cn(n);const o=a(e,n,t,s);return hn(),(0,r.lk)(),o});return s?o.unshift(i):o.push(i),i}}const xt=t=>(e,n=un)=>(!mn||"sp"===t)&&bt(t,((...t)=>e(...t)),n),wt=xt("bm"),vt=xt("m"),kt=xt("bu"),It=xt("u"),St=xt("bum"),Nt=xt("um"),Tt=xt("sp"),Ct=xt("rtg"),Et=xt("rtc");function $t(t,e=un){bt("ec",t,e)}function Rt(t,e,n,s){const o=t.dirs,i=e&&e.dirs;for(let u=0;u<o.length;u++){const l=o[u];i&&(l.oldValue=i[u].value);let c=l.dir[s];c&&((0,r.Jd)(),a(c,n,8,[t.el,l,t,e]),(0,r.lk)())}}const At="components";function _t(t,e){return Dt(At,t,!0,e)||t}const Mt=Symbol();function Ft(t){return(0,s.HD)(t)?Dt(At,t,!1)||t:t||Mt}function Dt(t,e,n=!0,r=!1){const o=_||un;if(o){const n=o.type;if(t===At){const t=In(n,!1);if(t&&(t===e||t===(0,s._A)(e)||t===(0,s.kC)((0,s._A)(e))))return n}const a=Ot(o[t]||n[t],e)||Ot(o.appContext[t],e);return!a&&r?n:a}}function Ot(t,e){return t&&(t[e]||t[(0,s._A)(e)]||t[(0,s.kC)((0,s._A)(e))])}const Lt=t=>t?pn(t)?kn(t)||t.proxy:Lt(t.parent):null,Pt=(0,s.l7)(Object.create(null),{$:t=>t,$el:t=>t.vnode.el,$data:t=>t.data,$props:t=>t.props,$attrs:t=>t.attrs,$slots:t=>t.slots,$refs:t=>t.refs,$parent:t=>Lt(t.parent),$root:t=>Lt(t.root),$emit:t=>t.emit,$options:t=>Ht(t),$forceUpdate:t=>t.f||(t.f=()=>w(t.update)),$nextTick:t=>t.n||(t.n=b.bind(t.proxy)),$watch:t=>X.bind(t)}),zt={get({_:t},e){const{ctx:n,setupState:o,data:a,props:i,accessCache:u,type:l,appContext:c}=t;let h;if("$"!==e[0]){const r=u[e];if(void 0!==r)switch(r){case 1:return o[e];case 2:return a[e];case 4:return n[e];case 3:return i[e]}else{if(o!==s.kT&&(0,s.RI)(o,e))return u[e]=1,o[e];if(a!==s.kT&&(0,s.RI)(a,e))return u[e]=2,a[e];if((h=t.propsOptions[0])&&(0,s.RI)(h,e))return u[e]=3,i[e];if(n!==s.kT&&(0,s.RI)(n,e))return u[e]=4,n[e];Bt&&(u[e]=0)}}const p=Pt[e];let d,f;return p?("$attrs"===e&&(0,r.j)(t,"get",e),p(t)):(d=l.__cssModules)&&(d=d[e])?d:n!==s.kT&&(0,s.RI)(n,e)?(u[e]=4,n[e]):(f=c.config.globalProperties,(0,s.RI)(f,e)?f[e]:void 0)},set({_:t},e,n){const{data:r,setupState:o,ctx:a}=t;return o!==s.kT&&(0,s.RI)(o,e)?(o[e]=n,!0):r!==s.kT&&(0,s.RI)(r,e)?(r[e]=n,!0):!(0,s.RI)(t.props,e)&&(("$"!==e[0]||!(e.slice(1)in t))&&(a[e]=n,!0))},has({_:{data:t,setupState:e,accessCache:n,ctx:r,appContext:o,propsOptions:a}},i){let u;return!!n[i]||t!==s.kT&&(0,s.RI)(t,i)||e!==s.kT&&(0,s.RI)(e,i)||(u=a[0])&&(0,s.RI)(u,i)||(0,s.RI)(r,i)||(0,s.RI)(Pt,i)||(0,s.RI)(o.config.globalProperties,i)},defineProperty(t,e,n){return null!=n.get?t._.accessCache[e]=0:(0,s.RI)(n,"value")&&this.set(t,e,n.value,null),Reflect.defineProperty(t,e,n)}};let Bt=!0;function Ut(t){const e=Ht(t),n=t.proxy,o=t.ctx;Bt=!1,e.beforeCreate&&Wt(e.beforeCreate,t,"bc");const{data:a,computed:i,methods:u,watch:l,provide:c,inject:h,created:p,beforeMount:d,mounted:f,beforeUpdate:m,updated:g,activated:y,deactivated:b,beforeDestroy:x,beforeUnmount:w,destroyed:v,unmounted:k,render:I,renderTracked:S,renderTriggered:N,errorCaptured:T,serverPrefetch:C,expose:E,inheritAttrs:$,components:R,directives:A,filters:_}=e,M=null;if(h&&Vt(h,o,M,t.appContext.config.unwrapInjectedRef),u)for(const r in u){const t=u[r];(0,s.mf)(t)&&(o[r]=t.bind(n))}if(a){0;const e=a.call(n,n);0,(0,s.Kn)(e)&&(t.data=(0,r.qj)(e))}if(Bt=!0,i)for(const r in i){const t=i[r],e=(0,s.mf)(t)?t.bind(n,n):(0,s.mf)(t.get)?t.get.bind(n,n):s.dG;0;const a=!(0,s.mf)(t)&&(0,s.mf)(t.set)?t.set.bind(n):s.dG,u=Nn({get:e,set:a});Object.defineProperty(o,r,{enumerable:!0,configurable:!0,get:()=>u.value,set:t=>u.value=t})}if(l)for(const r in l)Gt(l[r],o,n,r);if(c){const t=(0,s.mf)(c)?c.call(n):c;Reflect.ownKeys(t).forEach((e=>{G(e,t[e])}))}function F(t,e){(0,s.kJ)(e)?e.forEach((e=>t(e.bind(n)))):e&&t(e.bind(n))}if(p&&Wt(p,t,"c"),F(wt,d),F(vt,f),F(kt,m),F(It,g),F(pt,y),F(dt,b),F($t,T),F(Et,S),F(Ct,N),F(St,w),F(Nt,k),F(Tt,C),(0,s.kJ)(E))if(E.length){const e=t.exposed||(t.exposed={});E.forEach((t=>{Object.defineProperty(e,t,{get:()=>n[t],set:e=>n[t]=e})}))}else t.exposed||(t.exposed={});I&&t.render===s.dG&&(t.render=I),null!=$&&(t.inheritAttrs=$),R&&(t.components=R),A&&(t.directives=A)}function Vt(t,e,n=s.dG,o=!1){(0,s.kJ)(t)&&(t=Yt(t));for(const a in t){const n=t[a];let i;i=(0,s.Kn)(n)?"default"in n?H(n.from||a,n.default,!0):H(n.from||a):H(n),(0,r.dq)(i)&&o?Object.defineProperty(e,a,{enumerable:!0,configurable:!0,get:()=>i.value,set:t=>i.value=t}):e[a]=i}}function Wt(t,e,n){a((0,s.kJ)(t)?t.map((t=>t.bind(e.proxy))):t.bind(e.proxy),e,n)}function Gt(t,e,n,r){const o=r.includes(".")?Y(n,r):()=>n[r];if((0,s.HD)(t)){const n=e[t];(0,s.mf)(n)&&q(o,n)}else if((0,s.mf)(t))q(o,t.bind(n));else if((0,s.Kn)(t))if((0,s.kJ)(t))t.forEach((t=>Gt(t,e,n,r)));else{const r=(0,s.mf)(t.handler)?t.handler.bind(n):e[t.handler];(0,s.mf)(r)&&q(o,r,t)}else 0}function Ht(t){const e=t.type,{mixins:n,extends:r}=e,{mixins:o,optionsCache:a,config:{optionMergeStrategies:i}}=t.appContext,u=a.get(e);let l;return u?l=u:o.length||n||r?(l={},o.length&&o.forEach((t=>jt(l,t,i,!0))),jt(l,e,i)):l=e,(0,s.Kn)(e)&&a.set(e,l),l}function jt(t,e,n,r=!1){const{mixins:s,extends:o}=e;o&&jt(t,o,n,!0),s&&s.forEach((e=>jt(t,e,n,!0)));for(const a in e)if(r&&"expose"===a);else{const r=qt[a]||n&&n[a];t[a]=r?r(t[a],e[a]):e[a]}return t}const qt={data:Kt,props:Zt,emits:Zt,methods:Zt,computed:Zt,beforeCreate:Jt,created:Jt,beforeMount:Jt,mounted:Jt,beforeUpdate:Jt,updated:Jt,beforeDestroy:Jt,beforeUnmount:Jt,destroyed:Jt,unmounted:Jt,activated:Jt,deactivated:Jt,errorCaptured:Jt,serverPrefetch:Jt,components:Zt,directives:Zt,watch:Qt,provide:Kt,inject:Xt};function Kt(t,e){return e?t?function(){return(0,s.l7)((0,s.mf)(t)?t.call(this,this):t,(0,s.mf)(e)?e.call(this,this):e)}:e:t}function Xt(t,e){return Zt(Yt(t),Yt(e))}function Yt(t){if((0,s.kJ)(t)){const e={};for(let n=0;n<t.length;n++)e[t[n]]=t[n];return e}return t}function Jt(t,e){return t?[...new Set([].concat(t,e))]:e}function Zt(t,e){return t?(0,s.l7)((0,s.l7)(Object.create(null),t),e):e}function Qt(t,e){if(!t)return e;if(!e)return t;const n=(0,s.l7)(Object.create(null),t);for(const r in e)n[r]=Jt(t[r],e[r]);return n}function te(t,e,n,o=!1){const a={},i={};(0,s.Nj)(i,We,1),t.propsDefaults=Object.create(null),ne(t,e,a,i);for(const r in t.propsOptions[0])r in a||(a[r]=void 0);n?t.props=o?a:(0,r.Um)(a):t.type.props?t.props=a:t.props=i,t.attrs=i}function ee(t,e,n,o){const{props:a,attrs:i,vnode:{patchFlag:u}}=t,l=(0,r.IU)(a),[c]=t.propsOptions;let h=!1;if(!(o||u>0)||16&u){let r;ne(t,e,a,i)&&(h=!0);for(const o in l)e&&((0,s.RI)(e,o)||(r=(0,s.rs)(o))!==o&&(0,s.RI)(e,r))||(c?!n||void 0===n[o]&&void 0===n[r]||(a[o]=re(c,l,o,void 0,t,!0)):delete a[o]);if(i!==l)for(const t in i)e&&(0,s.RI)(e,t)||(delete i[t],h=!0)}else if(8&u){const n=t.vnode.dynamicProps;for(let r=0;r<n.length;r++){let o=n[r];if(A(t.emitsOptions,o))continue;const u=e[o];if(c)if((0,s.RI)(i,o))u!==i[o]&&(i[o]=u,h=!0);else{const e=(0,s._A)(o);a[e]=re(c,l,e,u,t,!1)}else u!==i[o]&&(i[o]=u,h=!0)}}h&&(0,r.X$)(t,"set","$attrs")}function ne(t,e,n,o){const[a,i]=t.propsOptions;let u,l=!1;if(e)for(let r in e){if((0,s.Gg)(r))continue;const c=e[r];let h;a&&(0,s.RI)(a,h=(0,s._A)(r))?i&&i.includes(h)?(u||(u={}))[h]=c:n[h]=c:A(t.emitsOptions,r)||r in o&&c===o[r]||(o[r]=c,l=!0)}if(i){const e=(0,r.IU)(n),o=u||s.kT;for(let r=0;r<i.length;r++){const u=i[r];n[u]=re(a,e,u,o[u],t,!(0,s.RI)(o,u))}}return l}function re(t,e,n,r,o,a){const i=t[n];if(null!=i){const t=(0,s.RI)(i,"default");if(t&&void 0===r){const t=i.default;if(i.type!==Function&&(0,s.mf)(t)){const{propsDefaults:s}=o;n in s?r=s[n]:(cn(o),r=s[n]=t.call(null,e),hn())}else r=t}i[0]&&(a&&!t?r=!1:!i[1]||""!==r&&r!==(0,s.rs)(n)||(r=!0))}return r}function se(t,e,n=!1){const r=e.propsCache,o=r.get(t);if(o)return o;const a=t.props,i={},u=[];let l=!1;if(!(0,s.mf)(t)){const r=t=>{l=!0;const[n,r]=se(t,e,!0);(0,s.l7)(i,n),r&&u.push(...r)};!n&&e.mixins.length&&e.mixins.forEach(r),t.extends&&r(t.extends),t.mixins&&t.mixins.forEach(r)}if(!a&&!l)return(0,s.Kn)(t)&&r.set(t,s.Z6),s.Z6;if((0,s.kJ)(a))for(let h=0;h<a.length;h++){0;const t=(0,s._A)(a[h]);oe(t)&&(i[t]=s.kT)}else if(a){0;for(const t in a){const e=(0,s._A)(t);if(oe(e)){const n=a[t],r=i[e]=(0,s.kJ)(n)||(0,s.mf)(n)?{type:n}:n;if(r){const t=ue(Boolean,r.type),n=ue(String,r.type);r[0]=t>-1,r[1]=n<0||t<n,(t>-1||(0,s.RI)(r,"default"))&&u.push(e)}}}}const c=[i,u];return(0,s.Kn)(t)&&r.set(t,c),c}function oe(t){return"$"!==t[0]}function ae(t){const e=t&&t.toString().match(/^\s*function (\w+)/);return e?e[1]:null===t?"null":""}function ie(t,e){return ae(t)===ae(e)}function ue(t,e){return(0,s.kJ)(e)?e.findIndex((e=>ie(e,t))):(0,s.mf)(e)&&ie(e,t)?0:-1}const le=t=>"_"===t[0]||"$stable"===t,ce=t=>(0,s.kJ)(t)?t.map(Qe):[Qe(t)],he=(t,e,n)=>{if(e._n)return e;const r=D(((...t)=>ce(e(...t))),n);return r._c=!1,r},pe=(t,e,n)=>{const r=t._ctx;for(const o in t){if(le(o))continue;const n=t[o];if((0,s.mf)(n))e[o]=he(o,n,r);else if(null!=n){0;const t=ce(n);e[o]=()=>t}}},de=(t,e)=>{const n=ce(e);t.slots.default=()=>n},fe=(t,e)=>{if(32&t.vnode.shapeFlag){const n=e._;n?(t.slots=(0,r.IU)(e),(0,s.Nj)(e,"_",n)):pe(e,t.slots={})}else t.slots={},e&&de(t,e);(0,s.Nj)(t.slots,We,1)},me=(t,e,n)=>{const{vnode:r,slots:o}=t;let a=!0,i=s.kT;if(32&r.shapeFlag){const t=e._;t?n&&1===t?a=!1:((0,s.l7)(o,e),n||1!==t||delete o._):(a=!e.$stable,pe(e,o)),i=e}else e&&(de(t,e),i={default:1});if(a)for(const s in o)le(s)||s in i||delete o[s]};function ge(){return{app:null,config:{isNativeTag:s.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let ye=0;function be(t,e){return function(n,r=null){(0,s.mf)(n)||(n=Object.assign({},n)),null==r||(0,s.Kn)(r)||(r=null);const o=ge(),a=new Set;let i=!1;const u=o.app={_uid:ye++,_component:n,_props:r,_container:null,_context:o,_instance:null,version:Cn,get config(){return o.config},set config(t){0},use(t,...e){return a.has(t)||(t&&(0,s.mf)(t.install)?(a.add(t),t.install(u,...e)):(0,s.mf)(t)&&(a.add(t),t(u,...e))),u},mixin(t){return o.mixins.includes(t)||o.mixins.push(t),u},component(t,e){return e?(o.components[t]=e,u):o.components[t]},directive(t,e){return e?(o.directives[t]=e,u):o.directives[t]},mount(s,a,l){if(!i){0;const c=qe(n,r);return c.appContext=o,a&&e?e(c,s):t(c,s,l),i=!0,u._container=s,s.__vue_app__=u,kn(c.component)||c.component.proxy}},unmount(){i&&(t(null,u._container),delete u._container.__vue_app__)},provide(t,e){return o.provides[t]=e,u}};return u}}function xe(t,e,n,a,i=!1){if((0,s.kJ)(t))return void t.forEach(((t,r)=>xe(t,e&&((0,s.kJ)(e)?e[r]:e),n,a,i)));if(lt(a)&&!i)return;const u=4&a.shapeFlag?kn(a.component)||a.component.proxy:a.el,l=i?null:u,{i:c,r:h}=t;const p=e&&e.r,d=c.refs===s.kT?c.refs={}:c.refs,f=c.setupState;if(null!=p&&p!==h&&((0,s.HD)(p)?(d[p]=null,(0,s.RI)(f,p)&&(f[p]=null)):(0,r.dq)(p)&&(p.value=null)),(0,s.mf)(h))o(h,c,12,[l,d]);else{const e=(0,s.HD)(h),o=(0,r.dq)(h);if(e||o){const r=()=>{if(t.f){const n=e?d[h]:h.value;i?(0,s.kJ)(n)&&(0,s.Od)(n,u):(0,s.kJ)(n)?n.includes(u)||n.push(u):e?(d[h]=[u],(0,s.RI)(f,h)&&(f[h]=d[h])):(h.value=[u],t.k&&(d[t.k]=h.value))}else e?(d[h]=l,(0,s.RI)(f,h)&&(f[h]=l)):o&&(h.value=l,t.k&&(d[t.k]=l))};l?(r.id=-1,ve(r,n)):r()}else 0}}function we(){}const ve=W;function ke(t){return Ie(t)}function Ie(t,e){we();const n=(0,s.E9)();n.__VUE__=!0;const{insert:o,remove:a,patchProp:i,createElement:u,createText:l,createComment:c,setText:h,setElementText:p,parentNode:d,nextSibling:f,setScopeId:m=s.dG,insertStaticContent:g}=t,y=(t,e,n,r=null,s=null,o=null,a=!1,i=null,u=!!e.dynamicChildren)=>{if(t===e)return;t&&!Ve(t,e)&&(r=Z(t),q(t,s,o,!0),t=null),-2===e.patchFlag&&(u=!1,e.dynamicChildren=null);const{type:l,ref:c,shapeFlag:h}=e;switch(l){case $e:b(t,e,n,r);break;case Re:x(t,e,n,r);break;case Ae:null==t&&v(e,n,r,a);break;case Ee:F(t,e,n,r,s,o,a,i,u);break;default:1&h?C(t,e,n,r,s,o,a,i,u):6&h?D(t,e,n,r,s,o,a,i,u):(64&h||128&h)&&l.process(t,e,n,r,s,o,a,i,u,tt)}null!=c&&s&&xe(c,t&&t.ref,o,e||t,!e)},b=(t,e,n,r)=>{if(null==t)o(e.el=l(e.children),n,r);else{const n=e.el=t.el;e.children!==t.children&&h(n,e.children)}},x=(t,e,n,r)=>{null==t?o(e.el=c(e.children||""),n,r):e.el=t.el},v=(t,e,n,r)=>{[t.el,t.anchor]=g(t.children,e,n,r,t.el,t.anchor)},I=({el:t,anchor:e},n,r)=>{let s;while(t&&t!==e)s=f(t),o(t,n,r),t=s;o(e,n,r)},T=({el:t,anchor:e})=>{let n;while(t&&t!==e)n=f(t),a(t),t=n;a(e)},C=(t,e,n,r,s,o,a,i,u)=>{a=a||"svg"===e.type,null==t?E(e,n,r,s,o,a,i,u):A(t,e,s,o,a,i,u)},E=(t,e,n,r,a,l,c,h)=>{let d,f;const{type:m,props:g,shapeFlag:y,transition:b,dirs:x}=t;if(d=t.el=u(t.type,l,g&&g.is,g),8&y?p(d,t.children):16&y&&R(t.children,d,null,r,a,l&&"foreignObject"!==m,c,h),x&&Rt(t,null,r,"created"),g){for(const e in g)"value"===e||(0,s.Gg)(e)||i(d,e,null,g[e],l,t.children,r,a,J);"value"in g&&i(d,"value",null,g.value),(f=g.onVnodeBeforeMount)&&rn(f,r,t)}$(d,t,t.scopeId,c,r),x&&Rt(t,null,r,"beforeMount");const w=(!a||a&&!a.pendingBranch)&&b&&!b.persisted;w&&b.beforeEnter(d),o(d,e,n),((f=g&&g.onVnodeMounted)||w||x)&&ve((()=>{f&&rn(f,r,t),w&&b.enter(d),x&&Rt(t,null,r,"mounted")}),a)},$=(t,e,n,r,s)=>{if(n&&m(t,n),r)for(let o=0;o<r.length;o++)m(t,r[o]);if(s){let n=s.subTree;if(e===n){const e=s.vnode;$(t,e,e.scopeId,e.slotScopeIds,s.parent)}}},R=(t,e,n,r,s,o,a,i,u=0)=>{for(let l=u;l<t.length;l++){const u=t[l]=i?tn(t[l]):Qe(t[l]);y(null,u,e,n,r,s,o,a,i)}},A=(t,e,n,r,o,a,u)=>{const l=e.el=t.el;let{patchFlag:c,dynamicChildren:h,dirs:d}=e;c|=16&t.patchFlag;const f=t.props||s.kT,m=e.props||s.kT;let g;n&&Se(n,!1),(g=m.onVnodeBeforeUpdate)&&rn(g,n,e,t),d&&Rt(e,t,n,"beforeUpdate"),n&&Se(n,!0);const y=o&&"foreignObject"!==e.type;if(h?_(t.dynamicChildren,h,l,n,r,y,a):u||W(t,e,l,null,n,r,y,a,!1),c>0){if(16&c)M(l,e,f,m,n,r,o);else if(2&c&&f.class!==m.class&&i(l,"class",null,m.class,o),4&c&&i(l,"style",f.style,m.style,o),8&c){const s=e.dynamicProps;for(let e=0;e<s.length;e++){const a=s[e],u=f[a],c=m[a];c===u&&"value"!==a||i(l,a,u,c,o,t.children,n,r,J)}}1&c&&t.children!==e.children&&p(l,e.children)}else u||null!=h||M(l,e,f,m,n,r,o);((g=m.onVnodeUpdated)||d)&&ve((()=>{g&&rn(g,n,e,t),d&&Rt(e,t,n,"updated")}),r)},_=(t,e,n,r,s,o,a)=>{for(let i=0;i<e.length;i++){const u=t[i],l=e[i],c=u.el&&(u.type===Ee||!Ve(u,l)||70&u.shapeFlag)?d(u.el):n;y(u,l,c,null,r,s,o,a,!0)}},M=(t,e,n,r,o,a,u)=>{if(n!==r){if(n!==s.kT)for(const l in n)(0,s.Gg)(l)||l in r||i(t,l,n[l],null,u,e.children,o,a,J);for(const l in r){if((0,s.Gg)(l))continue;const c=r[l],h=n[l];c!==h&&"value"!==l&&i(t,l,h,c,u,e.children,o,a,J)}"value"in r&&i(t,"value",n.value,r.value)}},F=(t,e,n,r,s,a,i,u,c)=>{const h=e.el=t?t.el:l(""),p=e.anchor=t?t.anchor:l("");let{patchFlag:d,dynamicChildren:f,slotScopeIds:m}=e;m&&(u=u?u.concat(m):m),null==t?(o(h,n,r),o(p,n,r),R(e.children,n,p,s,a,i,u,c)):d>0&&64&d&&f&&t.dynamicChildren?(_(t.dynamicChildren,f,n,s,a,i,u),(null!=e.key||s&&e===s.subTree)&&Ne(t,e,!0)):W(t,e,n,p,s,a,i,u,c)},D=(t,e,n,r,s,o,a,i,u)=>{e.slotScopeIds=i,null==t?512&e.shapeFlag?s.ctx.activate(e,n,r,a,u):L(e,n,r,s,o,a,u):P(t,e,u)},L=(t,e,n,r,s,o,a)=>{const i=t.component=an(t,r,s);if(ct(t)&&(i.ctx.renderer=tt),gn(i),i.asyncDep){if(s&&s.registerDep(i,B),!t.el){const t=i.subTree=qe(Re);x(null,t,e,n)}}else B(i,t,e,n,s,o,a)},P=(t,e,n)=>{const r=e.component=t.component;if(z(t,e,n)){if(r.asyncDep&&!r.asyncResolved)return void V(r,e,n);r.next=e,k(r.update),r.update()}else e.el=t.el,r.vnode=e},B=(t,e,n,o,a,i,u)=>{const l=()=>{if(t.isMounted){let e,{next:n,bu:r,u:o,parent:l,vnode:c}=t,h=n;0,Se(t,!1),n?(n.el=c.el,V(t,n,u)):n=c,r&&(0,s.ir)(r),(e=n.props&&n.props.onVnodeBeforeUpdate)&&rn(e,l,n,c),Se(t,!0);const p=O(t);0;const f=t.subTree;t.subTree=p,y(f,p,d(f.el),Z(f),t,a,i),n.el=p.el,null===h&&U(t,p.el),o&&ve(o,a),(e=n.props&&n.props.onVnodeUpdated)&&ve((()=>rn(e,l,n,c)),a)}else{let r;const{el:u,props:l}=e,{bm:c,m:h,parent:p}=t,d=lt(e);if(Se(t,!1),c&&(0,s.ir)(c),!d&&(r=l&&l.onVnodeBeforeMount)&&rn(r,p,e),Se(t,!0),u&&nt){const n=()=>{t.subTree=O(t),nt(u,t.subTree,t,a,null)};d?e.type.__asyncLoader().then((()=>!t.isUnmounted&&n())):n()}else{0;const r=t.subTree=O(t);0,y(null,r,n,o,t,a,i),e.el=r.el}if(h&&ve(h,a),!d&&(r=l&&l.onVnodeMounted)){const t=e;ve((()=>rn(r,p,t)),a)}(256&e.shapeFlag||p&&lt(p.vnode)&&256&p.vnode.shapeFlag)&&t.a&&ve(t.a,a),t.isMounted=!0,e=n=o=null}},c=t.effect=new r.qq(l,(()=>w(h)),t.scope),h=t.update=()=>c.run();h.id=t.uid,Se(t,!0),h()},V=(t,e,n)=>{e.component=t;const s=t.vnode.props;t.vnode=e,t.next=null,ee(t,e.props,s,n),me(t,e.children,n),(0,r.Jd)(),S(),(0,r.lk)()},W=(t,e,n,r,s,o,a,i,u=!1)=>{const l=t&&t.children,c=t?t.shapeFlag:0,h=e.children,{patchFlag:d,shapeFlag:f}=e;if(d>0){if(128&d)return void H(l,h,n,r,s,o,a,i,u);if(256&d)return void G(l,h,n,r,s,o,a,i,u)}8&f?(16&c&&J(l,s,o),h!==l&&p(n,h)):16&c?16&f?H(l,h,n,r,s,o,a,i,u):J(l,s,o,!0):(8&c&&p(n,""),16&f&&R(h,n,r,s,o,a,i,u))},G=(t,e,n,r,o,a,i,u,l)=>{t=t||s.Z6,e=e||s.Z6;const c=t.length,h=e.length,p=Math.min(c,h);let d;for(d=0;d<p;d++){const r=e[d]=l?tn(e[d]):Qe(e[d]);y(t[d],r,n,null,o,a,i,u,l)}c>h?J(t,o,a,!0,!1,p):R(e,n,r,o,a,i,u,l,p)},H=(t,e,n,r,o,a,i,u,l)=>{let c=0;const h=e.length;let p=t.length-1,d=h-1;while(c<=p&&c<=d){const r=t[c],s=e[c]=l?tn(e[c]):Qe(e[c]);if(!Ve(r,s))break;y(r,s,n,null,o,a,i,u,l),c++}while(c<=p&&c<=d){const r=t[p],s=e[d]=l?tn(e[d]):Qe(e[d]);if(!Ve(r,s))break;y(r,s,n,null,o,a,i,u,l),p--,d--}if(c>p){if(c<=d){const t=d+1,s=t<h?e[t].el:r;while(c<=d)y(null,e[c]=l?tn(e[c]):Qe(e[c]),n,s,o,a,i,u,l),c++}}else if(c>d)while(c<=p)q(t[c],o,a,!0),c++;else{const f=c,m=c,g=new Map;for(c=m;c<=d;c++){const t=e[c]=l?tn(e[c]):Qe(e[c]);null!=t.key&&g.set(t.key,c)}let b,x=0;const w=d-m+1;let v=!1,k=0;const I=new Array(w);for(c=0;c<w;c++)I[c]=0;for(c=f;c<=p;c++){const r=t[c];if(x>=w){q(r,o,a,!0);continue}let s;if(null!=r.key)s=g.get(r.key);else for(b=m;b<=d;b++)if(0===I[b-m]&&Ve(r,e[b])){s=b;break}void 0===s?q(r,o,a,!0):(I[s-m]=c+1,s>=k?k=s:v=!0,y(r,e[s],n,null,o,a,i,u,l),x++)}const S=v?Te(I):s.Z6;for(b=S.length-1,c=w-1;c>=0;c--){const t=m+c,s=e[t],p=t+1<h?e[t+1].el:r;0===I[c]?y(null,s,n,p,o,a,i,u,l):v&&(b<0||c!==S[b]?j(s,n,p,2):b--)}}},j=(t,e,n,r,s=null)=>{const{el:a,type:i,transition:u,children:l,shapeFlag:c}=t;if(6&c)return void j(t.component.subTree,e,n,r);if(128&c)return void t.suspense.move(e,n,r);if(64&c)return void i.move(t,e,n,tt);if(i===Ee){o(a,e,n);for(let t=0;t<l.length;t++)j(l[t],e,n,r);return void o(t.anchor,e,n)}if(i===Ae)return void I(t,e,n);const h=2!==r&&1&c&&u;if(h)if(0===r)u.beforeEnter(a),o(a,e,n),ve((()=>u.enter(a)),s);else{const{leave:t,delayLeave:r,afterLeave:s}=u,i=()=>o(a,e,n),l=()=>{t(a,(()=>{i(),s&&s()}))};r?r(a,i,l):l()}else o(a,e,n)},q=(t,e,n,r=!1,s=!1)=>{const{type:o,props:a,ref:i,children:u,dynamicChildren:l,shapeFlag:c,patchFlag:h,dirs:p}=t;if(null!=i&&xe(i,null,n,t,!0),256&c)return void e.ctx.deactivate(t);const d=1&c&&p,f=!lt(t);let m;if(f&&(m=a&&a.onVnodeBeforeUnmount)&&rn(m,e,t),6&c)Y(t.component,n,r);else{if(128&c)return void t.suspense.unmount(n,r);d&&Rt(t,null,e,"beforeUnmount"),64&c?t.type.remove(t,e,n,s,tt,r):l&&(o!==Ee||h>0&&64&h)?J(l,e,n,!1,!0):(o===Ee&&384&h||!s&&16&c)&&J(u,e,n),r&&K(t)}(f&&(m=a&&a.onVnodeUnmounted)||d)&&ve((()=>{m&&rn(m,e,t),d&&Rt(t,null,e,"unmounted")}),n)},K=t=>{const{type:e,el:n,anchor:r,transition:s}=t;if(e===Ee)return void X(n,r);if(e===Ae)return void T(t);const o=()=>{a(n),s&&!s.persisted&&s.afterLeave&&s.afterLeave()};if(1&t.shapeFlag&&s&&!s.persisted){const{leave:e,delayLeave:r}=s,a=()=>e(n,o);r?r(t.el,o,a):a()}else o()},X=(t,e)=>{let n;while(t!==e)n=f(t),a(t),t=n;a(e)},Y=(t,e,n)=>{const{bum:r,scope:o,update:a,subTree:i,um:u}=t;r&&(0,s.ir)(r),o.stop(),a&&(a.active=!1,q(i,t,e,n)),u&&ve(u,e),ve((()=>{t.isUnmounted=!0}),e),e&&e.pendingBranch&&!e.isUnmounted&&t.asyncDep&&!t.asyncResolved&&t.suspenseId===e.pendingId&&(e.deps--,0===e.deps&&e.resolve())},J=(t,e,n,r=!1,s=!1,o=0)=>{for(let a=o;a<t.length;a++)q(t[a],e,n,r,s)},Z=t=>6&t.shapeFlag?Z(t.component.subTree):128&t.shapeFlag?t.suspense.next():f(t.anchor||t.el),Q=(t,e,n)=>{null==t?e._vnode&&q(e._vnode,null,null,!0):y(e._vnode||null,t,e,null,null,null,n),S(),N(),e._vnode=t},tt={p:y,um:q,m:j,r:K,mt:L,mc:R,pc:W,pbc:_,n:Z,o:t};let et,nt;return e&&([et,nt]=e(tt)),{render:Q,hydrate:et,createApp:be(Q,et)}}function Se({effect:t,update:e},n){t.allowRecurse=e.allowRecurse=n}function Ne(t,e,n=!1){const r=t.children,o=e.children;if((0,s.kJ)(r)&&(0,s.kJ)(o))for(let s=0;s<r.length;s++){const t=r[s];let e=o[s];1&e.shapeFlag&&!e.dynamicChildren&&((e.patchFlag<=0||32===e.patchFlag)&&(e=o[s]=tn(o[s]),e.el=t.el),n||Ne(t,e))}}function Te(t){const e=t.slice(),n=[0];let r,s,o,a,i;const u=t.length;for(r=0;r<u;r++){const u=t[r];if(0!==u){if(s=n[n.length-1],t[s]<u){e[r]=s,n.push(r);continue}o=0,a=n.length-1;while(o<a)i=o+a>>1,t[n[i]]<u?o=i+1:a=i;u<t[n[o]]&&(o>0&&(e[r]=n[o-1]),n[o]=r)}}o=n.length,a=n[o-1];while(o-- >0)n[o]=a,a=e[a];return n}const Ce=t=>t.__isTeleport;const Ee=Symbol(void 0),$e=Symbol(void 0),Re=Symbol(void 0),Ae=Symbol(void 0),_e=[];let Me=null;function Fe(t=!1){_e.push(Me=t?null:[])}function De(){_e.pop(),Me=_e[_e.length-1]||null}let Oe=1;function Le(t){Oe+=t}function Pe(t){return t.dynamicChildren=Oe>0?Me||s.Z6:null,De(),Oe>0&&Me&&Me.push(t),t}function ze(t,e,n,r,s,o){return Pe(je(t,e,n,r,s,o,!0))}function Be(t,e,n,r,s){return Pe(qe(t,e,n,r,s,!0))}function Ue(t){return!!t&&!0===t.__v_isVNode}function Ve(t,e){return t.type===e.type&&t.key===e.key}const We="__vInternal",Ge=({key:t})=>null!=t?t:null,He=({ref:t,ref_key:e,ref_for:n})=>null!=t?(0,s.HD)(t)||(0,r.dq)(t)||(0,s.mf)(t)?{i:_,r:t,k:e,f:!!n}:t:null;function je(t,e=null,n=null,r=0,o=null,a=(t===Ee?0:1),i=!1,u=!1){const l={__v_isVNode:!0,__v_skip:!0,type:t,props:e,key:e&&Ge(e),ref:e&&He(e),scopeId:M,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:r,dynamicProps:o,dynamicChildren:null,appContext:null};return u?(en(l,n),128&a&&t.normalize(l)):n&&(l.shapeFlag|=(0,s.HD)(n)?8:16),Oe>0&&!i&&Me&&(l.patchFlag>0||6&a)&&32!==l.patchFlag&&Me.push(l),l}const qe=Ke;function Ke(t,e=null,n=null,o=0,a=null,i=!1){if(t&&t!==Mt||(t=Re),Ue(t)){const r=Ye(t,e,!0);return n&&en(r,n),Oe>0&&!i&&Me&&(6&r.shapeFlag?Me[Me.indexOf(t)]=r:Me.push(r)),r.patchFlag|=-2,r}if(Sn(t)&&(t=t.__vccOpts),e){e=Xe(e);let{class:t,style:n}=e;t&&!(0,s.HD)(t)&&(e.class=(0,s.C_)(t)),(0,s.Kn)(n)&&((0,r.X3)(n)&&!(0,s.kJ)(n)&&(n=(0,s.l7)({},n)),e.style=(0,s.j5)(n))}const u=(0,s.HD)(t)?1:V(t)?128:Ce(t)?64:(0,s.Kn)(t)?4:(0,s.mf)(t)?2:0;return je(t,e,n,o,a,u,i,!0)}function Xe(t){return t?(0,r.X3)(t)||We in t?(0,s.l7)({},t):t:null}function Ye(t,e,n=!1){const{props:r,ref:o,patchFlag:a,children:i}=t,u=e?nn(r||{},e):r,l={__v_isVNode:!0,__v_skip:!0,type:t.type,props:u,key:u&&Ge(u),ref:e&&e.ref?n&&o?(0,s.kJ)(o)?o.concat(He(e)):[o,He(e)]:He(e):o,scopeId:t.scopeId,slotScopeIds:t.slotScopeIds,children:i,target:t.target,targetAnchor:t.targetAnchor,staticCount:t.staticCount,shapeFlag:t.shapeFlag,patchFlag:e&&t.type!==Ee?-1===a?16:16|a:a,dynamicProps:t.dynamicProps,dynamicChildren:t.dynamicChildren,appContext:t.appContext,dirs:t.dirs,transition:t.transition,component:t.component,suspense:t.suspense,ssContent:t.ssContent&&Ye(t.ssContent),ssFallback:t.ssFallback&&Ye(t.ssFallback),el:t.el,anchor:t.anchor};return l}function Je(t=" ",e=0){return qe($e,null,t,e)}function Ze(t="",e=!1){return e?(Fe(),Be(Re,null,t)):qe(Re,null,t)}function Qe(t){return null==t||"boolean"===typeof t?qe(Re):(0,s.kJ)(t)?qe(Ee,null,t.slice()):"object"===typeof t?tn(t):qe($e,null,String(t))}function tn(t){return null===t.el&&-1!==t.patchFlag||t.memo?t:Ye(t)}function en(t,e){let n=0;const{shapeFlag:r}=t;if(null==e)e=null;else if((0,s.kJ)(e))n=16;else if("object"===typeof e){if(65&r){const n=e.default;return void(n&&(n._c&&(n._d=!1),en(t,n()),n._c&&(n._d=!0)))}{n=32;const r=e._;r||We in e?3===r&&_&&(1===_.slots._?e._=1:(e._=2,t.patchFlag|=1024)):e._ctx=_}}else(0,s.mf)(e)?(e={default:e,_ctx:_},n=32):(e=String(e),64&r?(n=16,e=[Je(e)]):n=8);t.children=e,t.shapeFlag|=n}function nn(...t){const e={};for(let n=0;n<t.length;n++){const r=t[n];for(const t in r)if("class"===t)e.class!==r.class&&(e.class=(0,s.C_)([e.class,r.class]));else if("style"===t)e.style=(0,s.j5)([e.style,r.style]);else if((0,s.F7)(t)){const n=e[t],o=r[t];!o||n===o||(0,s.kJ)(n)&&n.includes(o)||(e[t]=n?[].concat(n,o):o)}else""!==t&&(e[t]=r[t])}return e}function rn(t,e,n,r=null){a(t,e,7,[n,r])}const sn=ge();let on=0;function an(t,e,n){const o=t.type,a=(e?e.appContext:t.appContext)||sn,i={uid:on++,vnode:t,type:o,parent:e,appContext:a,root:null,next:null,subTree:null,effect:null,update:null,scope:new r.Bj(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(a.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:se(o,a),emitsOptions:R(o,a),emit:null,emitted:null,propsDefaults:s.kT,inheritAttrs:o.inheritAttrs,ctx:s.kT,data:s.kT,props:s.kT,attrs:s.kT,slots:s.kT,refs:s.kT,setupState:s.kT,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return i.ctx={_:i},i.root=e?e.root:i,i.emit=$.bind(null,i),t.ce&&t.ce(i),i}let un=null;const ln=()=>un||_,cn=t=>{un=t,t.scope.on()},hn=()=>{un&&un.scope.off(),un=null};function pn(t){return 4&t.vnode.shapeFlag}let dn,fn,mn=!1;function gn(t,e=!1){mn=e;const{props:n,children:r}=t.vnode,s=pn(t);te(t,n,s,e),fe(t,r);const o=s?yn(t,e):void 0;return mn=!1,o}function yn(t,e){const n=t.type;t.accessCache=Object.create(null),t.proxy=(0,r.Xl)(new Proxy(t.ctx,zt));const{setup:a}=n;if(a){const n=t.setupContext=a.length>1?vn(t):null;cn(t),(0,r.Jd)();const u=o(a,t,0,[t.props,n]);if((0,r.lk)(),hn(),(0,s.tI)(u)){if(u.then(hn,hn),e)return u.then((n=>{bn(t,n,e)})).catch((e=>{i(e,t,0)}));t.asyncDep=u}else bn(t,u,e)}else xn(t,e)}function bn(t,e,n){(0,s.mf)(e)?t.type.__ssrInlineRender?t.ssrRender=e:t.render=e:(0,s.Kn)(e)&&(t.setupState=(0,r.WL)(e)),xn(t,n)}function xn(t,e,n){const o=t.type;if(!t.render){if(!e&&dn&&!o.render){const e=o.template||Ht(t).template;if(e){0;const{isCustomElement:n,compilerOptions:r}=t.appContext.config,{delimiters:a,compilerOptions:i}=o,u=(0,s.l7)((0,s.l7)({isCustomElement:n,delimiters:a},r),i);o.render=dn(e,u)}}t.render=o.render||s.dG,fn&&fn(t)}cn(t),(0,r.Jd)(),Ut(t),(0,r.lk)(),hn()}function wn(t){return new Proxy(t.attrs,{get(e,n){return(0,r.j)(t,"get","$attrs"),e[n]}})}function vn(t){const e=e=>{t.exposed=e||{}};let n;return{get attrs(){return n||(n=wn(t))},slots:t.slots,emit:t.emit,expose:e}}function kn(t){if(t.exposed)return t.exposeProxy||(t.exposeProxy=new Proxy((0,r.WL)((0,r.Xl)(t.exposed)),{get(e,n){return n in e?e[n]:n in Pt?Pt[n](t):void 0}}))}function In(t,e=!0){return(0,s.mf)(t)?t.displayName||t.name:t.name||e&&t.__name}function Sn(t){return(0,s.mf)(t)&&"__vccOpts"in t}const Nn=(t,e)=>(0,r.Fl)(t,e,mn);function Tn(t,e,n){const r=arguments.length;return 2===r?(0,s.Kn)(e)&&!(0,s.kJ)(e)?Ue(e)?qe(t,null,[e]):qe(t,e):qe(t,null,e):(r>3?n=Array.prototype.slice.call(arguments,2):3===r&&Ue(n)&&(n=[n]),qe(t,e,n))}Symbol("");const Cn="3.2.40"},9242:function(t,e,n){"use strict";n.d(e,{ri:function(){return nt}});n(7658);var r=n(7139),s=n(3396);n(4870);const o="http://www.w3.org/2000/svg",a="undefined"!==typeof document?document:null,i=a&&a.createElement("template"),u={insert:(t,e,n)=>{e.insertBefore(t,n||null)},remove:t=>{const e=t.parentNode;e&&e.removeChild(t)},createElement:(t,e,n,r)=>{const s=e?a.createElementNS(o,t):a.createElement(t,n?{is:n}:void 0);return"select"===t&&r&&null!=r.multiple&&s.setAttribute("multiple",r.multiple),s},createText:t=>a.createTextNode(t),createComment:t=>a.createComment(t),setText:(t,e)=>{t.nodeValue=e},setElementText:(t,e)=>{t.textContent=e},parentNode:t=>t.parentNode,nextSibling:t=>t.nextSibling,querySelector:t=>a.querySelector(t),setScopeId(t,e){t.setAttribute(e,"")},insertStaticContent(t,e,n,r,s,o){const a=n?n.previousSibling:e.lastChild;if(s&&(s===o||s.nextSibling)){while(1)if(e.insertBefore(s.cloneNode(!0),n),s===o||!(s=s.nextSibling))break}else{i.innerHTML=r?`<svg>${t}</svg>`:t;const s=i.content;if(r){const t=s.firstChild;while(t.firstChild)s.appendChild(t.firstChild);s.removeChild(t)}e.insertBefore(s,n)}return[a?a.nextSibling:e.firstChild,n?n.previousSibling:e.lastChild]}};function l(t,e,n){const r=t._vtc;r&&(e=(e?[e,...r]:[...r]).join(" ")),null==e?t.removeAttribute("class"):n?t.setAttribute("class",e):t.className=e}function c(t,e,n){const s=t.style,o=(0,r.HD)(n);if(n&&!o){for(const t in n)p(s,t,n[t]);if(e&&!(0,r.HD)(e))for(const t in e)null==n[t]&&p(s,t,"")}else{const r=s.display;o?e!==n&&(s.cssText=n):e&&t.removeAttribute("style"),"_vod"in t&&(s.display=r)}}const h=/\s*!important$/;function p(t,e,n){if((0,r.kJ)(n))n.forEach((n=>p(t,e,n)));else if(null==n&&(n=""),e.startsWith("--"))t.setProperty(e,n);else{const s=m(t,e);h.test(n)?t.setProperty((0,r.rs)(s),n.replace(h,""),"important"):t[s]=n}}const d=["Webkit","Moz","ms"],f={};function m(t,e){const n=f[e];if(n)return n;let s=(0,r._A)(e);if("filter"!==s&&s in t)return f[e]=s;s=(0,r.kC)(s);for(let r=0;r<d.length;r++){const n=d[r]+s;if(n in t)return f[e]=n}return e}const g="http://www.w3.org/1999/xlink";function y(t,e,n,s,o){if(s&&e.startsWith("xlink:"))null==n?t.removeAttributeNS(g,e.slice(6,e.length)):t.setAttributeNS(g,e,n);else{const s=(0,r.Pq)(e);null==n||s&&!(0,r.yA)(n)?t.removeAttribute(e):t.setAttribute(e,s?"":n)}}function b(t,e,n,s,o,a,i){if("innerHTML"===e||"textContent"===e)return s&&i(s,o,a),void(t[e]=null==n?"":n);if("value"===e&&"PROGRESS"!==t.tagName&&!t.tagName.includes("-")){t._value=n;const r=null==n?"":n;return t.value===r&&"OPTION"!==t.tagName||(t.value=r),void(null==n&&t.removeAttribute(e))}let u=!1;if(""===n||null==n){const s=typeof t[e];"boolean"===s?n=(0,r.yA)(n):null==n&&"string"===s?(n="",u=!0):"number"===s&&(n=0,u=!0)}try{t[e]=n}catch(l){0}u&&t.removeAttribute(e)}const[x,w]=(()=>{let t=Date.now,e=!1;if("undefined"!==typeof window){Date.now()>document.createEvent("Event").timeStamp&&(t=performance.now.bind(performance));const n=navigator.userAgent.match(/firefox\/(\d+)/i);e=!!(n&&Number(n[1])<=53)}return[t,e]})();let v=0;const k=Promise.resolve(),I=()=>{v=0},S=()=>v||(k.then(I),v=x());function N(t,e,n,r){t.addEventListener(e,n,r)}function T(t,e,n,r){t.removeEventListener(e,n,r)}function C(t,e,n,r,s=null){const o=t._vei||(t._vei={}),a=o[e];if(r&&a)a.value=r;else{const[n,i]=$(e);if(r){const a=o[e]=R(r,s);N(t,n,a,i)}else a&&(T(t,n,a,i),o[e]=void 0)}}const E=/(?:Once|Passive|Capture)$/;function $(t){let e;if(E.test(t)){let n;e={};while(n=t.match(E))t=t.slice(0,t.length-n[0].length),e[n[0].toLowerCase()]=!0}const n=":"===t[2]?t.slice(3):(0,r.rs)(t.slice(2));return[n,e]}function R(t,e){const n=t=>{const r=t.timeStamp||x();(w||r>=n.attached-1)&&(0,s.$d)(A(t,n.value),e,5,[t])};return n.value=t,n.attached=S(),n}function A(t,e){if((0,r.kJ)(e)){const n=t.stopImmediatePropagation;return t.stopImmediatePropagation=()=>{n.call(t),t._stopped=!0},e.map((t=>e=>!e._stopped&&t&&t(e)))}return e}const _=/^on[a-z]/,M=(t,e,n,s,o=!1,a,i,u,h)=>{"class"===e?l(t,s,o):"style"===e?c(t,n,s):(0,r.F7)(e)?(0,r.tR)(e)||C(t,e,n,s,i):("."===e[0]?(e=e.slice(1),1):"^"===e[0]?(e=e.slice(1),0):F(t,e,s,o))?b(t,e,s,a,i,u,h):("true-value"===e?t._trueValue=s:"false-value"===e&&(t._falseValue=s),y(t,e,s,o))};function F(t,e,n,s){return s?"innerHTML"===e||"textContent"===e||!!(e in t&&_.test(e)&&(0,r.mf)(n)):"spellcheck"!==e&&"draggable"!==e&&"translate"!==e&&("form"!==e&&(("list"!==e||"INPUT"!==t.tagName)&&(("type"!==e||"TEXTAREA"!==t.tagName)&&((!_.test(e)||!(0,r.HD)(n))&&e in t))))}"undefined"!==typeof HTMLElement&&HTMLElement;const D="transition",O="animation",L=(t,{slots:e})=>(0,s.h)(s.P$,U(t),e);L.displayName="Transition";const P={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},z=(L.props=(0,r.l7)({},s.P$.props,P),(t,e=[])=>{(0,r.kJ)(t)?t.forEach((t=>t(...e))):t&&t(...e)}),B=t=>!!t&&((0,r.kJ)(t)?t.some((t=>t.length>1)):t.length>1);function U(t){const e={};for(const r in t)r in P||(e[r]=t[r]);if(!1===t.css)return e;const{name:n="v",type:s,duration:o,enterFromClass:a=`${n}-enter-from`,enterActiveClass:i=`${n}-enter-active`,enterToClass:u=`${n}-enter-to`,appearFromClass:l=a,appearActiveClass:c=i,appearToClass:h=u,leaveFromClass:p=`${n}-leave-from`,leaveActiveClass:d=`${n}-leave-active`,leaveToClass:f=`${n}-leave-to`}=t,m=V(o),g=m&&m[0],y=m&&m[1],{onBeforeEnter:b,onEnter:x,onEnterCancelled:w,onLeave:v,onLeaveCancelled:k,onBeforeAppear:I=b,onAppear:S=x,onAppearCancelled:N=w}=e,T=(t,e,n)=>{H(t,e?h:u),H(t,e?c:i),n&&n()},C=(t,e)=>{t._isLeaving=!1,H(t,p),H(t,f),H(t,d),e&&e()},E=t=>(e,n)=>{const r=t?S:x,o=()=>T(e,t,n);z(r,[e,o]),j((()=>{H(e,t?l:a),G(e,t?h:u),B(r)||K(e,s,g,o)}))};return(0,r.l7)(e,{onBeforeEnter(t){z(b,[t]),G(t,a),G(t,i)},onBeforeAppear(t){z(I,[t]),G(t,l),G(t,c)},onEnter:E(!1),onAppear:E(!0),onLeave(t,e){t._isLeaving=!0;const n=()=>C(t,e);G(t,p),Z(),G(t,d),j((()=>{t._isLeaving&&(H(t,p),G(t,f),B(v)||K(t,s,y,n))})),z(v,[t,n])},onEnterCancelled(t){T(t,!1),z(w,[t])},onAppearCancelled(t){T(t,!0),z(N,[t])},onLeaveCancelled(t){C(t),z(k,[t])}})}function V(t){if(null==t)return null;if((0,r.Kn)(t))return[W(t.enter),W(t.leave)];{const e=W(t);return[e,e]}}function W(t){const e=(0,r.He)(t);return e}function G(t,e){e.split(/\s+/).forEach((e=>e&&t.classList.add(e))),(t._vtc||(t._vtc=new Set)).add(e)}function H(t,e){e.split(/\s+/).forEach((e=>e&&t.classList.remove(e)));const{_vtc:n}=t;n&&(n.delete(e),n.size||(t._vtc=void 0))}function j(t){requestAnimationFrame((()=>{requestAnimationFrame(t)}))}let q=0;function K(t,e,n,r){const s=t._endId=++q,o=()=>{s===t._endId&&r()};if(n)return setTimeout(o,n);const{type:a,timeout:i,propCount:u}=X(t,e);if(!a)return r();const l=a+"end";let c=0;const h=()=>{t.removeEventListener(l,p),o()},p=e=>{e.target===t&&++c>=u&&h()};setTimeout((()=>{c<u&&h()}),i+1),t.addEventListener(l,p)}function X(t,e){const n=window.getComputedStyle(t),r=t=>(n[t]||"").split(", "),s=r(D+"Delay"),o=r(D+"Duration"),a=Y(s,o),i=r(O+"Delay"),u=r(O+"Duration"),l=Y(i,u);let c=null,h=0,p=0;e===D?a>0&&(c=D,h=a,p=o.length):e===O?l>0&&(c=O,h=l,p=u.length):(h=Math.max(a,l),c=h>0?a>l?D:O:null,p=c?c===D?o.length:u.length:0);const d=c===D&&/\b(transform|all)(,|$)/.test(n[D+"Property"]);return{type:c,timeout:h,propCount:p,hasTransform:d}}function Y(t,e){while(t.length<e.length)t=t.concat(t);return Math.max(...e.map(((e,n)=>J(e)+J(t[n]))))}function J(t){return 1e3*Number(t.slice(0,-1).replace(",","."))}function Z(){return document.body.offsetHeight}new WeakMap,new WeakMap;const Q=(0,r.l7)({patchProp:M},u);let tt;function et(){return tt||(tt=(0,s.Us)(Q))}const nt=(...t)=>{const e=et().createApp(...t);const{mount:n}=e;return e.mount=t=>{const s=rt(t);if(!s)return;const o=e._component;(0,r.mf)(o)||o.render||o.template||(o.template=s.innerHTML),s.innerHTML="";const a=n(s,!1,s instanceof SVGElement);return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),a},e};function rt(t){if((0,r.HD)(t)){const e=document.querySelector(t);return e}return t}},7139:function(t,e,n){"use strict";n.d(e,{C_:function(){return d},DM:function(){return R},E9:function(){return et},F7:function(){return k},Gg:function(){return V},HD:function(){return M},He:function(){return Q},Kn:function(){return D},NO:function(){return w},Nj:function(){return Z},Od:function(){return N},PO:function(){return B},Pq:function(){return i},RI:function(){return C},S0:function(){return U},W7:function(){return z},WV:function(){return m},Z6:function(){return b},_A:function(){return H},_N:function(){return $},aU:function(){return Y},dG:function(){return x},e1:function(){return o},fY:function(){return r},hR:function(){return X},hq:function(){return g},ir:function(){return J},j5:function(){return l},kC:function(){return K},kJ:function(){return E},kT:function(){return y},l7:function(){return S},mf:function(){return _},rs:function(){return q},tI:function(){return O},tR:function(){return I},yA:function(){return u},yk:function(){return F}});n(7658);function r(t,e){const n=Object.create(null),r=t.split(",");for(let s=0;s<r.length;s++)n[r[s]]=!0;return e?t=>!!n[t.toLowerCase()]:t=>!!n[t]}const s="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",o=r(s);const a="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",i=r(a);function u(t){return!!t||""===t}function l(t){if(E(t)){const e={};for(let n=0;n<t.length;n++){const r=t[n],s=M(r)?p(r):l(r);if(s)for(const t in s)e[t]=s[t]}return e}return M(t)||D(t)?t:void 0}const c=/;(?![^(]*\))/g,h=/:(.+)/;function p(t){const e={};return t.split(c).forEach((t=>{if(t){const n=t.split(h);n.length>1&&(e[n[0].trim()]=n[1].trim())}})),e}function d(t){let e="";if(M(t))e=t;else if(E(t))for(let n=0;n<t.length;n++){const r=d(t[n]);r&&(e+=r+" ")}else if(D(t))for(const n in t)t[n]&&(e+=n+" ");return e.trim()}function f(t,e){if(t.length!==e.length)return!1;let n=!0;for(let r=0;n&&r<t.length;r++)n=m(t[r],e[r]);return n}function m(t,e){if(t===e)return!0;let n=A(t),r=A(e);if(n||r)return!(!n||!r)&&t.getTime()===e.getTime();if(n=F(t),r=F(e),n||r)return t===e;if(n=E(t),r=E(e),n||r)return!(!n||!r)&&f(t,e);if(n=D(t),r=D(e),n||r){if(!n||!r)return!1;const s=Object.keys(t).length,o=Object.keys(e).length;if(s!==o)return!1;for(const n in t){const r=t.hasOwnProperty(n),s=e.hasOwnProperty(n);if(r&&!s||!r&&s||!m(t[n],e[n]))return!1}}return String(t)===String(e)}function g(t,e){return t.findIndex((t=>m(t,e)))}const y={},b=[],x=()=>{},w=()=>!1,v=/^on[^a-z]/,k=t=>v.test(t),I=t=>t.startsWith("onUpdate:"),S=Object.assign,N=(t,e)=>{const n=t.indexOf(e);n>-1&&t.splice(n,1)},T=Object.prototype.hasOwnProperty,C=(t,e)=>T.call(t,e),E=Array.isArray,$=t=>"[object Map]"===P(t),R=t=>"[object Set]"===P(t),A=t=>"[object Date]"===P(t),_=t=>"function"===typeof t,M=t=>"string"===typeof t,F=t=>"symbol"===typeof t,D=t=>null!==t&&"object"===typeof t,O=t=>D(t)&&_(t.then)&&_(t.catch),L=Object.prototype.toString,P=t=>L.call(t),z=t=>P(t).slice(8,-1),B=t=>"[object Object]"===P(t),U=t=>M(t)&&"NaN"!==t&&"-"!==t[0]&&""+parseInt(t,10)===t,V=r(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),W=t=>{const e=Object.create(null);return n=>{const r=e[n];return r||(e[n]=t(n))}},G=/-(\w)/g,H=W((t=>t.replace(G,((t,e)=>e?e.toUpperCase():"")))),j=/\B([A-Z])/g,q=W((t=>t.replace(j,"-$1").toLowerCase())),K=W((t=>t.charAt(0).toUpperCase()+t.slice(1))),X=W((t=>t?`on${K(t)}`:"")),Y=(t,e)=>!Object.is(t,e),J=(t,e)=>{for(let n=0;n<t.length;n++)t[n](e)},Z=(t,e,n)=>{Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:n})},Q=t=>{const e=parseFloat(t);return isNaN(e)?t:e};let tt;const et=()=>tt||(tt="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{})},89:function(t,e){"use strict";e.Z=(t,e)=>{const n=t.__vccOpts||t;for(const[r,s]of e)n[r]=s;return n}},4200:function(t,e,n){n(7658),n(3408),n(4590),n(2087),n(2801),n(541),n(4633),function(){var t={1113:function(t){t.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e),n.d(e,"encode",(function(){return E})),n.d(e,"decode",(function(){return V})),n.d(e,"decodeAsync",(function(){return K})),n.d(e,"decodeArrayStream",(function(){return X})),n.d(e,"decodeStream",(function(){return Y})),n.d(e,"Decoder",(function(){return B})),n.d(e,"Encoder",(function(){return T})),n.d(e,"ExtensionCodec",(function(){return I})),n.d(e,"ExtData",(function(){return d})),n.d(e,"EXT_TIMESTAMP",(function(){return g})),n.d(e,"encodeDateToTimeSpec",(function(){return b})),n.d(e,"encodeTimeSpecToTimestamp",(function(){return y})),n.d(e,"decodeTimestampToTimeSpec",(function(){return w})),n.d(e,"encodeTimestampExtension",(function(){return x})),n.d(e,"decodeTimestampExtension",(function(){return v}));var r=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,s,o=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(t){s={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(s)throw s.error}}return a},s=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(r(arguments[e]));return t},o="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function a(t){for(var e=t.length,n=0,r=0;r<e;){var s=t.charCodeAt(r++);if(0!=(4294967168&s))if(0==(4294965248&s))n+=2;else{if(s>=55296&&s<=56319&&r<e){var o=t.charCodeAt(r);56320==(64512&o)&&(++r,s=((1023&s)<<10)+(1023&o)+65536)}n+=0==(4294901760&s)?3:4}else n++}return n}var i=o?new TextEncoder:void 0,u="undefined"!=typeof process?200:0,l=(null==i?void 0:i.encodeInto)?function(t,e,n){i.encodeInto(t,e.subarray(n))}:function(t,e,n){e.set(i.encode(t),n)};function c(t,e,n){for(var r=e,o=r+n,a=[],i="";r<o;){var u=t[r++];if(0==(128&u))a.push(u);else if(192==(224&u)){var l=63&t[r++];a.push((31&u)<<6|l)}else if(224==(240&u)){l=63&t[r++];var c=63&t[r++];a.push((31&u)<<12|l<<6|c)}else if(240==(248&u)){var h=(7&u)<<18|(l=63&t[r++])<<12|(c=63&t[r++])<<6|63&t[r++];h>65535&&(h-=65536,a.push(h>>>10&1023|55296),h=56320|1023&h),a.push(h)}else a.push(u);a.length>=4096&&(i+=String.fromCharCode.apply(String,s(a)),a.length=0)}return a.length>0&&(i+=String.fromCharCode.apply(String,s(a))),i}var h=o?new TextDecoder:null,p="undefined"!=typeof process?200:0,d=function(t,e){this.type=t,this.data=e};function f(t,e,n){var r=Math.floor(n/4294967296),s=n;t.setUint32(e,r),t.setUint32(e+4,s)}function m(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}var g=-1;function y(t){var e,n=t.sec,r=t.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(e=new DataView(s.buffer)).setUint32(0,n),s}var o=n/4294967296,a=4294967295&n;return s=new Uint8Array(8),(e=new DataView(s.buffer)).setUint32(0,r<<2|3&o),e.setUint32(4,a),s}return s=new Uint8Array(12),(e=new DataView(s.buffer)).setUint32(0,r),f(e,4,n),s}function b(t){var e=t.getTime(),n=Math.floor(e/1e3),r=1e6*(e-1e3*n),s=Math.floor(r/1e9);return{sec:n+s,nsec:r-1e9*s}}function x(t){return t instanceof Date?y(b(t)):null}function w(t){var e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:var n=e.getUint32(0);return{sec:4294967296*(3&n)+e.getUint32(4),nsec:n>>>2};case 12:return{sec:m(e,4),nsec:e.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+t.length)}}function v(t){var e=w(t);return new Date(1e3*e.sec+e.nsec/1e6)}var k={type:g,encode:x,decode:v},I=function(){function t(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return t.prototype.register=function(t){var e=t.type,n=t.encode,r=t.decode;if(e>=0)this.encoders[e]=n,this.decoders[e]=r;else{var s=1+e;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},t.prototype.tryToEncode=function(t,e){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(t,e)))return new d(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(t,e)))return new d(n,s)}return t instanceof d?t:null},t.prototype.decode=function(t,e,n){var r=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return r?r(t,e,n):new d(e,t)},t.defaultCodec=new t,t}();function S(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Uint8Array.from(t)}var N=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},T=function(){function t(t,e,n,r,s,o,a){void 0===t&&(t=I.defaultCodec),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===o&&(o=!1),void 0===a&&(a=!1),this.extensionCodec=t,this.context=e,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=o,this.ignoreUndefined=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return t.prototype.encode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth "+e);null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.encodeObject(t,e)},t.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},t.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)},t.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),n=new Uint8Array(e),r=new DataView(e);n.set(this.bytes),this.view=r,this.bytes=n},t.prototype.encodeNil=function(){this.writeU8(192)},t.prototype.encodeBoolean=function(t){!1===t?this.writeU8(194):this.writeU8(195)},t.prototype.encodeNumber=function(t){Number.isSafeInteger(t)?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},t.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too long string: "+t+" bytes in UTF-8");this.writeU8(219),this.writeU32(t)}},t.prototype.encodeString=function(t){var e=t.length;if(o&&e>u){var n=a(t);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),l(t,this.bytes,this.pos),this.pos+=n}else n=a(t),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(t,e,n){for(var r=t.length,s=n,o=0;o<r;){var a=t.charCodeAt(o++);if(0!=(4294967168&a)){if(0==(4294965248&a))e[s++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&o<r){var i=t.charCodeAt(o);56320==(64512&i)&&(++o,a=((1023&a)<<10)+(1023&i)+65536)}0==(4294901760&a)?(e[s++]=a>>12&15|224,e[s++]=a>>6&63|128):(e[s++]=a>>18&7|240,e[s++]=a>>12&63|128,e[s++]=a>>6&63|128)}e[s++]=63&a|128}else e[s++]=a}}(t,this.bytes,this.pos),this.pos+=n},t.prototype.encodeObject=function(t,e){var n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(t));this.encodeMap(t,e)}},t.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large binary: "+e);this.writeU8(198),this.writeU32(e)}var n=S(t);this.writeU8a(n)},t.prototype.encodeArray=function(t,e){var n,r,s=t.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large array: "+s);this.writeU8(221),this.writeU32(s)}try{for(var o=N(t),a=o.next();!a.done;a=o.next()){var i=a.value;this.encode(i,e+1)}}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}},t.prototype.countWithoutUndefined=function(t,e){var n,r,s=0;try{for(var o=N(e),a=o.next();!a.done;a=o.next())void 0!==t[a.value]&&s++}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return s},t.prototype.encodeMap=function(t,e){var n,r,s=Object.keys(t);this.sortKeys&&s.sort();var o=this.ignoreUndefined?this.countWithoutUndefined(t,s):s.length;if(o<16)this.writeU8(128+o);else if(o<65536)this.writeU8(222),this.writeU16(o);else{if(!(o<4294967296))throw new Error("Too large map object: "+o);this.writeU8(223),this.writeU32(o)}try{for(var a=N(s),i=a.next();!i.done;i=a.next()){var u=i.value,l=t[u];this.ignoreUndefined&&void 0===l||(this.encodeString(u),this.encode(l,e+1))}}catch(t){n={error:t}}finally{try{i&&!i.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}},t.prototype.encodeExtension=function(t){var e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large extension object: "+e);this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)},t.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},t.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},t.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},t.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},t.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},t.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},t.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},t.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},t.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},t.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),function(t,e,n){var r=n/4294967296,s=n;t.setUint32(e,r),t.setUint32(e+4,s)}(this.view,this.pos,t),this.pos+=8},t.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,t),this.pos+=8},t}(),C={};function E(t,e){void 0===e&&(e=C);var n=new T(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined);return n.encode(t,1),n.getUint8Array()}function $(t){return(t<0?"-":"")+"0x"+Math.abs(t).toString(16).padStart(2,"0")}var R=function(){function t(t,e){void 0===t&&(t=16),void 0===e&&(e=16),this.maxKeyLength=t,this.maxLengthPerKey=e,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return t.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},t.prototype.get=function(t,e,n){var r=this.caches[n-1],s=r.length;t:for(var o=0;o<s;o++){for(var a=r[o],i=a.bytes,u=0;u<n;u++)if(i[u]!==t[e+u])continue t;return a.value}return null},t.prototype.store=function(t,e){var n=this.caches[t.length-1],r={bytes:t,value:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},t.prototype.decode=function(t,e,n){var r=this.get(t,e,n);if(null!=r)return r;var s=c(t,e,n),o=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(o,s),s},t}(),A=function(t,e){var n,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}},_=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},r("next"),r("throw"),r("return"),e[Symbol.asyncIterator]=function(){return this},e);function r(n){e[n]=t[n]&&function(e){return new Promise((function(r,s){!function(t,e,n,r){Promise.resolve(r).then((function(e){t({value:e,done:n})}),e)}(r,s,(e=t[n](e)).done,e.value)}))}}},M=function(t){return this instanceof M?(this.v=t,this):new M(t)},F=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(t,e||[]),o=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){s[t]&&(r[t]=function(e){return new Promise((function(n,r){o.push([t,e,n,r])>1||i(t,e)}))})}function i(t,e){try{(n=s[t](e)).value instanceof M?Promise.resolve(n.value.v).then(u,l):c(o[0][2],n)}catch(t){c(o[0][3],t)}var n}function u(t){i("next",t)}function l(t){i("throw",t)}function c(t,e){t(e),o.shift(),o.length&&i(o[0][0],o[0][1])}},D=new DataView(new ArrayBuffer(0)),O=new Uint8Array(D.buffer),L=function(){try{D.getInt8(0)}catch(t){return t.constructor}throw new Error("never reached")}(),P=new L("Insufficient data"),z=new R,B=function(){function t(t,e,n,r,s,o,a,i){void 0===t&&(t=I.defaultCodec),void 0===n&&(n=4294967295),void 0===r&&(r=4294967295),void 0===s&&(s=4294967295),void 0===o&&(o=4294967295),void 0===a&&(a=4294967295),void 0===i&&(i=z),this.extensionCodec=t,this.context=e,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=o,this.maxExtLength=a,this.cachedKeyDecoder=i,this.totalPos=0,this.pos=0,this.view=D,this.bytes=O,this.headByte=-1,this.stack=[]}return t.prototype.setBuffer=function(t){this.bytes=S(t),this.view=function(t){if(t instanceof ArrayBuffer)return new DataView(t);var e=S(t);return new DataView(e.buffer,e.byteOffset,e.byteLength)}(this.bytes),this.pos=0},t.prototype.appendBuffer=function(t){if(-1!==this.headByte||this.hasRemaining()){var e=this.bytes.subarray(this.pos),n=S(t),r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),this.setBuffer(r)}else this.setBuffer(t)},t.prototype.hasRemaining=function(t){return void 0===t&&(t=1),this.view.byteLength-this.pos>=t},t.prototype.createNoExtraBytesError=function(t){var e=this.view,n=this.pos;return new RangeError("Extra "+(e.byteLength-n)+" byte(s) found at buffer["+t+"]")},t.prototype.decodeSingleSync=function(){var t=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return t},t.prototype.decodeSingleAsync=function(t){var e,n,r,s;return function(t,e,n,r){return new(n||(n=Promise))((function(s,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function i(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,i)}u((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var o,a,i,u,l,c,h,p;return A(this,(function(d){switch(d.label){case 0:o=!1,d.label=1;case 1:d.trys.push([1,6,7,12]),e=_(t),d.label=2;case 2:return[4,e.next()];case 3:if((n=d.sent()).done)return[3,5];if(i=n.value,o)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(i);try{a=this.decodeSync(),o=!0}catch(t){if(!(t instanceof L))throw t}this.totalPos+=this.pos,d.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return u=d.sent(),r={error:u},[3,12];case 7:return d.trys.push([7,,10,11]),n&&!n.done&&(s=e.return)?[4,s.call(e)]:[3,9];case 8:d.sent(),d.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(o){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,a]}throw c=(l=this).headByte,h=l.pos,p=l.totalPos,new RangeError("Insufficient data in parcing "+$(c)+" at "+p+" ("+h+" in the current buffer)")}}))}))},t.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},t.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},t.prototype.decodeMultiAsync=function(t,e){return F(this,arguments,(function(){var n,r,s,o,a,i,u,l,c;return A(this,(function(h){switch(h.label){case 0:n=e,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),s=_(t),h.label=2;case 2:return[4,M(s.next())];case 3:if((o=h.sent()).done)return[3,12];if(a=o.value,e&&0===r)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,M(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((i=h.sent())instanceof L))throw i;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return u=h.sent(),l={error:u},[3,19];case 14:return h.trys.push([14,,17,18]),o&&!o.done&&(c=s.return)?[4,M(c.call(s))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(l)throw l.error;return[7];case 18:return[7];case 19:return[2]}}))}))},t.prototype.decodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){if(0!=(r=t-128)){this.pushMapState(r),this.complete();continue t}e={}}else if(t<160){if(0!=(r=t-144)){this.pushArrayState(r),this.complete();continue t}e=[]}else{var n=t-160;e=this.decodeUtf8String(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.readI64();else if(217===t)n=this.lookU8(),e=this.decodeUtf8String(n,1);else if(218===t)n=this.lookU16(),e=this.decodeUtf8String(n,2);else if(219===t)n=this.lookU32(),e=this.decodeUtf8String(n,4);else if(220===t){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(221===t){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(222===t){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue t}e={}}else if(223===t){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue t}e={}}else if(196===t){var r=this.lookU8();e=this.decodeBinary(r,1)}else if(197===t)r=this.lookU16(),e=this.decodeBinary(r,2);else if(198===t)r=this.lookU32(),e=this.decodeBinary(r,4);else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t)r=this.lookU8(),e=this.decodeExtension(r,1);else if(200===t)r=this.lookU16(),e=this.decodeExtension(r,2);else{if(201!==t)throw new Error("Unrecognized type byte: "+$(t));r=this.lookU32(),e=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var o=s[s.length-1];if(0===o.type){if(o.array[o.position]=e,o.position++,o.position!==o.size)continue t;s.pop(),e=o.array}else{if(1===o.type){if("string"!=(a=typeof e)&&"number"!==a)throw new Error("The type of key must be string or number but "+typeof e);o.key=e,o.type=2;continue t}if(o.map[o.key]=e,o.readCount++,o.readCount!==o.size){o.key=null,o.type=1;continue t}s.pop(),e=o.map}}return e}var a},t.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},t.prototype.complete=function(){this.headByte=-1},t.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new Error("Unrecognized array type byte: "+$(t))}},t.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new Error("Max length exceeded: map length ("+t+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},t.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+t+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:t,array:new Array(t),position:0})},t.prototype.decodeUtf8String=function(t,e){var n;if(t>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+t+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+e+t)throw P;var r,s=this.pos+e;return r=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(t))?this.cachedKeyDecoder.decode(this.bytes,s,t):o&&t>p?function(t,e,n){var r=t.subarray(e,e+n);return h.decode(r)}(this.bytes,s,t):c(this.bytes,s,t),this.pos+=e+t,r},t.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},t.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+t+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(t+e))throw P;var n=this.pos+e,r=this.bytes.subarray(n,n+t);return this.pos+=e+t,r},t.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+t+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+e),r=this.decodeBinary(t,e+1);return this.extensionCodec.decode(r,n,this.context)},t.prototype.lookU8=function(){return this.view.getUint8(this.pos)},t.prototype.lookU16=function(){return this.view.getUint16(this.pos)},t.prototype.lookU32=function(){return this.view.getUint32(this.pos)},t.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},t.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},t.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},t.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},t.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},t.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},t.prototype.readU64=function(){var t,e,n=(t=this.view,e=this.pos,4294967296*t.getUint32(e)+t.getUint32(e+4));return this.pos+=8,n},t.prototype.readI64=function(){var t=m(this.view,this.pos);return this.pos+=8,t},t.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},t.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},t}(),U={};function V(t,e){void 0===e&&(e=U);var n=new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength);return n.setBuffer(t),n.decodeSingleSync()}var W=function(t,e){var n,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}},G=function(t){return this instanceof G?(this.v=t,this):new G(t)},H=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(t,e||[]),o=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){s[t]&&(r[t]=function(e){return new Promise((function(n,r){o.push([t,e,n,r])>1||i(t,e)}))})}function i(t,e){try{(n=s[t](e)).value instanceof G?Promise.resolve(n.value.v).then(u,l):c(o[0][2],n)}catch(t){c(o[0][3],t)}var n}function u(t){i("next",t)}function l(t){i("throw",t)}function c(t,e){t(e),o.shift(),o.length&&i(o[0][0],o[0][1])}};function j(t){if(null==t)throw new Error("Assertion Failure: value must not be null nor undefined")}function q(t){return null!=t[Symbol.asyncIterator]?t:function(t){return H(this,arguments,(function(){var e,n,r,s;return W(this,(function(o){switch(o.label){case 0:e=t.getReader(),o.label=1;case 1:o.trys.push([1,,9,10]),o.label=2;case 2:return[4,G(e.read())];case 3:return n=o.sent(),r=n.done,s=n.value,r?[4,G(void 0)]:[3,5];case 4:return[2,o.sent()];case 5:return j(s),[4,G(s)];case 6:return[4,o.sent()];case 7:return o.sent(),[3,2];case 8:return[3,10];case 9:return e.releaseLock(),[7];case 10:return[2]}}))}))}(t)}function K(t,e){return void 0===e&&(e=U),function(t,e,n,r){return new(n||(n=Promise))((function(s,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function i(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,i)}u((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var n;return function(t,e){var n,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}(this,(function(r){return n=q(t),[2,new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeSingleAsync(n)]}))}))}function X(t,e){void 0===e&&(e=U);var n=q(t);return new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeArrayStream(n)}function Y(t,e){void 0===e&&(e=U);var n=q(t);return new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeStream(n)}}])},5512:function(t,e,n){"use strict";n.r(e),n.d(e,{Abs:function(){return Jt},Acos:function(){return Zt},Acosh:function(){return Qt},AdadeltaOptimizer:function(){return Vu},AdagradOptimizer:function(){return Gu},AdamOptimizer:function(){return qu},AdamaxOptimizer:function(){return Yu},Add:function(){return te},AddN:function(){return ee},All:function(){return ne},Any:function(){return re},ArgMax:function(){return se},ArgMin:function(){return oe},Asin:function(){return ae},Asinh:function(){return ie},Atan:function(){return ue},Atan2:function(){return ce},Atanh:function(){return le},AvgPool:function(){return he},AvgPool3D:function(){return de},AvgPool3DGrad:function(){return fe},AvgPoolGrad:function(){return pe},BatchMatMul:function(){return me},BatchToSpaceND:function(){return ge},Bincount:function(){return ye},BroadcastArgs:function(){return xe},BroadcastTo:function(){return be},Callback:function(){return eS},CallbackList:function(){return ax},Cast:function(){return we},Ceil:function(){return ve},ClipByValue:function(){return ke},Complex:function(){return Ie},ComplexAbs:function(){return Se},Concat:function(){return Ne},Conv2D:function(){return Te},Conv2DBackpropFilter:function(){return Ce},Conv2DBackpropInput:function(){return Ee},Conv3D:function(){return $e},Conv3DBackpropFilterV2:function(){return Re},Conv3DBackpropInputV2:function(){return Ae},Cos:function(){return _e},Cosh:function(){return Me},CropAndResize:function(){return Oe},Cumprod:function(){return Fe},Cumsum:function(){return De},CustomCallback:function(){return lx},DataStorage:function(){return q},DenseBincount:function(){return Le},DepthToSpace:function(){return Pe},DepthwiseConv2dNative:function(){return ze},DepthwiseConv2dNativeBackpropFilter:function(){return Be},DepthwiseConv2dNativeBackpropInput:function(){return Ue},Diag:function(){return Ve},Dilation2D:function(){return We},Dilation2DBackpropFilter:function(){return He},Dilation2DBackpropInput:function(){return Ge},ENV:function(){return Kt},EarlyStopping:function(){return sS},Einsum:function(){return qe},Elu:function(){return Ke},EluGrad:function(){return Xe},Environment:function(){return Gt},Equal:function(){return Je},Erf:function(){return Ye},Exp:function(){return Ze},ExpandDims:function(){return Qe},Expm1:function(){return tn},FFT:function(){return en},Fill:function(){return nn},FlipLeftRight:function(){return rn},Floor:function(){return sn},FloorDiv:function(){return on},FromPixels:function(){return os},FusedBatchNorm:function(){return an},FusedConv2D:function(){return us},FusedDepthwiseConv2D:function(){return ls},GatherNd:function(){return ln},GatherV2:function(){return un},GraphModel:function(){return wN},Greater:function(){return cn},GreaterEqual:function(){return hn},History:function(){return ux},IFFT:function(){return dn},Identity:function(){return pn},Imag:function(){return fn},InputSpec:function(){return hb},IsFinite:function(){return mn},IsInf:function(){return gn},IsNan:function(){return yn},KernelBackend:function(){return K},LRN:function(){return Rn},LRNGrad:function(){return An},LayerVariable:function(){return ub},LayersModel:function(){return iw},LeakyRelu:function(){return bn},Less:function(){return xn},LessEqual:function(){return wn},LinSpace:function(){return vn},Log:function(){return kn},Log1p:function(){return In},LogSoftmax:function(){return En},LogicalAnd:function(){return Sn},LogicalNot:function(){return Nn},LogicalOr:function(){return Tn},LogicalXor:function(){return Cn},LowerBound:function(){return $n},Max:function(){return _n},MaxPool:function(){return Fn},MaxPool3D:function(){return On},MaxPool3DGrad:function(){return Ln},MaxPoolGrad:function(){return Dn},MaxPoolWithArgmax:function(){return Pn},Maximum:function(){return Mn},Mean:function(){return zn},Min:function(){return Bn},Minimum:function(){return Un},MirrorPad:function(){return Vn},Mod:function(){return Wn},MomentumOptimizer:function(){return Zu},Multinomial:function(){return Gn},Multiply:function(){return Hn},Neg:function(){return jn},NonMaxSuppressionV3:function(){return Kn},NonMaxSuppressionV4:function(){return Xn},NonMaxSuppressionV5:function(){return Yn},NotEqual:function(){return qn},OP_SCOPE_SUFFIX:function(){return Fo},OneHot:function(){return Zn},OnesLike:function(){return Jn},Optimizer:function(){return Uu},OptimizerConstructors:function(){return tl},Pack:function(){return Qn},PadV2:function(){return tr},Pool:function(){return er},Pow:function(){return nr},Prelu:function(){return rr},Prod:function(){return sr},RMSPropOptimizer:function(){return Qu},RNN:function(){return dv},RaggedGather:function(){return or},RaggedTensorToTensor:function(){return ar},Range:function(){return ir},Rank:function(){return so},Real:function(){return ur},RealDiv:function(){return je},Reciprocal:function(){return lr},Reduction:function(){return Ad},Relu:function(){return cr},Relu6:function(){return gr},Reshape:function(){return hr},ResizeBilinear:function(){return fr},ResizeBilinearGrad:function(){return mr},ResizeNearestNeighbor:function(){return pr},ResizeNearestNeighborGrad:function(){return dr},Reverse:function(){return yr},RotateWithOffset:function(){return as},Round:function(){return br},Rsqrt:function(){return xr},SGDOptimizer:function(){return Ju},ScatterNd:function(){return wr},SearchSorted:function(){return vr},Select:function(){return kr},Selu:function(){return Ir},Sequential:function(){return cw},Sigmoid:function(){return Er},Sign:function(){return Cr},Sin:function(){return Nr},Sinh:function(){return Tr},Slice:function(){return Sr},Softmax:function(){return Fr},Softplus:function(){return $r},SpaceToBatchND:function(){return _r},SparseFillEmptyRows:function(){return Dr},SparseReshape:function(){return Or},SparseSegmentMean:function(){return Lr},SparseSegmentSum:function(){return Pr},SparseToDense:function(){return zr},SplitV:function(){return Mr},Sqrt:function(){return Rr},Square:function(){return Ur},SquaredDifference:function(){return Br},Step:function(){return ss},StridedSlice:function(){return Vr},StringNGrams:function(){return Wr},StringSplit:function(){return Gr},StringToHashBucketFast:function(){return Hr},Sub:function(){return jr},Sum:function(){return Ar},SymbolicTensor:function(){return pb},Tan:function(){return qr},Tanh:function(){return Kr},Tensor:function(){return eo},TensorBuffer:function(){return Js},Tile:function(){return Xr},TopK:function(){return Yr},Transform:function(){return Jr},Transpose:function(){return Zr},Unique:function(){return Qr},Unpack:function(){return ts},UnsortedSegmentSum:function(){return es},UpperBound:function(){return ns},Variable:function(){return ro},ZerosLike:function(){return rs},_FusedMatMul:function(){return is},abs:function(){return Ku},acos:function(){return el},acosh:function(){return nl},add:function(){return Tu},addN:function(){return rl},all:function(){return sl},any:function(){return ol},argMax:function(){return al},argMin:function(){return il},asin:function(){return ul},asinh:function(){return ll},atan:function(){return cl},atan2:function(){return hl},atanh:function(){return pl},avgPool:function(){return El},avgPool3d:function(){return $l},backend:function(){return Ti},backend_util:function(){return y},basicLSTMCell:function(){return Fl},batchNorm:function(){return Ol},batchNorm2d:function(){return Ll},batchNorm3d:function(){return Pl},batchNorm4d:function(){return zl},batchToSpaceND:function(){return Dl},bincount:function(){return Bl},booleanMaskAsync:function(){return Lp},broadcastArgs:function(){return Ul},broadcastTo:function(){return Vl},broadcast_util:function(){return u},browser:function(){return l},buffer:function(){return Da},callbacks:function(){return oS},cast:function(){return Oa},ceil:function(){return Wl},clipByValue:function(){return Gl},clone:function(){return La},complex:function(){return Oo},concat:function(){return Rl},concat1d:function(){return Hl},concat2d:function(){return jl},concat3d:function(){return ql},concat4d:function(){return Kl},constraints:function(){return x},conv1d:function(){return Yl},conv2d:function(){return Xl},conv2dTranspose:function(){return Zl},conv3d:function(){return Ql},conv3dTranspose:function(){return ec},copyRegisteredKernels:function(){return vs},cos:function(){return nc},cosh:function(){return rc},cosineWindow:function(){return Gp},cumprod:function(){return sc},cumsum:function(){return oc},customGrad:function(){return Pu},data:function(){return H},denseBincount:function(){return ac},deprecationWarn:function(){return ci},depthToSpace:function(){return ic},depthwiseConv2d:function(){return uc},deregisterOp:function(){return hS},device_util:function(){return o},diag:function(){return lc},dilation2d:function(){return cc},disableDeprecationWarnings:function(){return li},dispose:function(){return gi},disposeVariables:function(){return hi},div:function(){return Eu},divNoNan:function(){return dc},dot:function(){return fc},dropout:function(){return Vp},einsum:function(){return mc},elu:function(){return gc},enableDebugMode:function(){return ui},enableProdMode:function(){return ii},enclosingPowerOfTwo:function(){return Wp},engine:function(){return pi},env:function(){return jt},equal:function(){return hc},erf:function(){return yc},euclideanNorm:function(){return Ac},exp:function(){return _c},expandDims:function(){return Mc},expm1:function(){return Fc},eye:function(){return Oc},fft:function(){return pp},fill:function(){return Wu},findBackend:function(){return Ii},findBackendFactory:function(){return Si},floor:function(){return Lc},floorDiv:function(){return Cu},fused:function(){return m},gather:function(){return Pc},gatherND:function(){return Up},gather_util:function(){return c},getBackend:function(){return vi},getGradient:function(){return ms},getKernel:function(){return fs},getKernelsForBackend:function(){return gs},grad:function(){return Mu},grads:function(){return Fu},greater:function(){return zc},greaterEqual:function(){return Bc},ifft:function(){return dp},imag:function(){return Ei},image:function(){return Yd},inTopKAsync:function(){return Hp},initializers:function(){return w},input:function(){return fw},io:function(){return a},irfft:function(){return fp},isFinite:function(){return Uc},isInf:function(){return Vc},isNaN:function(){return Wc},keep:function(){return yi},kernel_impls:function(){return b},layers:function(){return v},leakyRelu:function(){return Gc},less:function(){return Hc},lessEqual:function(){return jc},linalg:function(){return Jd},linspace:function(){return qc},loadGraphModel:function(){return vN},loadGraphModelSync:function(){return kN},loadLayersModel:function(){return dw},localResponseNormalization:function(){return Kc},log:function(){return Xc},log1p:function(){return Yc},logSigmoid:function(){return Zc},logSoftmax:function(){return Qc},logSumExp:function(){return th},logicalAnd:function(){return eh},logicalNot:function(){return nh},logicalOr:function(){return rh},logicalXor:function(){return sh},losses:function(){return Zd},lowerBound:function(){return ih},matMul:function(){return oi},math:function(){return i},max:function(){return Tc},maxPool:function(){return uh},maxPool3d:function(){return lh},maxPoolWithArgmax:function(){return ch},maximum:function(){return Xu},mean:function(){return hh},memory:function(){return di},meshgrid:function(){return fh},metrics:function(){return k},min:function(){return Cc},minimum:function(){return mh},mirrorPad:function(){return gh},mod:function(){return yh},model:function(){return hw},models:function(){return I},moments:function(){return bh},movingAverage:function(){return Pp},mul:function(){return $u},multiRNNCell:function(){return xh},multinomial:function(){return wh},neg:function(){return $i},nextFrame:function(){return rf},norm:function(){return Rc},notEqual:function(){return vh},oneHot:function(){return ai},ones:function(){return dh},onesLike:function(){return kh},op:function(){return Do},outerProduct:function(){return Ih},pad:function(){return Sh},pad1d:function(){return Nh},pad2d:function(){return Th},pad3d:function(){return Ch},pad4d:function(){return Eh},pool:function(){return Rh},pow:function(){return Hu},prelu:function(){return Ah},print:function(){return Pa},prod:function(){return _h},profile:function(){return fi},raggedGather:function(){return Mh},raggedTensorToTensor:function(){return Fh},rand:function(){return Dh},randomGamma:function(){return Bh},randomNormal:function(){return Uh},randomStandardNormal:function(){return Vh},randomUniform:function(){return Wh},range:function(){return Gh},ready:function(){return wi},real:function(){return Ri},reciprocal:function(){return Hh},registerBackend:function(){return Ni},registerCallbackConstructor:function(){return mw},registerGradient:function(){return bs},registerKernel:function(){return ys},registerOp:function(){return lS},regularizers:function(){return S},relu:function(){return jh},relu6:function(){return qh},removeBackend:function(){return ki},reshape:function(){return Cl},reverse:function(){return Kh},reverse1d:function(){return Xh},reverse2d:function(){return Yh},reverse3d:function(){return Jh},reverse4d:function(){return Zh},rfft:function(){return gp},round:function(){return Qh},rsqrt:function(){return tp},scalar:function(){return Bu},scatterND:function(){return zp},scatter_util:function(){return h},searchSorted:function(){return ah},selu:function(){return ep},separableConv2d:function(){return np},sequential:function(){return pw},serialization:function(){return d},setBackend:function(){return xi},setPlatform:function(){return Ci},setdiff1dAsync:function(){return rp},sigmoid:function(){return Al},sign:function(){return sp},signal:function(){return Xd},sin:function(){return op},sinh:function(){return ap},slice:function(){return _l},slice1d:function(){return ip},slice2d:function(){return up},slice3d:function(){return lp},slice4d:function(){return cp},slice_util:function(){return p},softmax:function(){return hp},softplus:function(){return Jc},spaceToBatchND:function(){return $h},sparse:function(){return Qd},sparseToDense:function(){return Bp},spectral:function(){return Kd},split:function(){return mp},sqrt:function(){return Ru},square:function(){return Au},squaredDifference:function(){return yp},squeeze:function(){return bp},stack:function(){return xp},step:function(){return wp},stridedSlice:function(){return vp},string:function(){return tf},sub:function(){return ju},sum:function(){return Ec},sumOutType:function(){return ho},tan:function(){return kp},tanh:function(){return Ml},tensor:function(){return Po},tensor1d:function(){return Ip},tensor2d:function(){return Sp},tensor3d:function(){return Oi},tensor4d:function(){return Np},tensor5d:function(){return Tp},tensor6d:function(){return Cp},tensor_util:function(){return s},test_util:function(){return f},tidy:function(){return mi},tile:function(){return Dc},time:function(){return bi},topk:function(){return Ep},train:function(){return ef},transpose:function(){return Ai},truncatedNormal:function(){return $p},unique:function(){return Rp},unregisterGradient:function(){return ws},unregisterKernel:function(){return xs},unsortedSegmentSum:function(){return Ap},unstack:function(){return _p},upcastType:function(){return co},upperBound:function(){return Mp},util:function(){return r},valueAndGrad:function(){return Du},valueAndGrads:function(){return Ou},variable:function(){return Fp},variableGrads:function(){return Lu},version:function(){return nV},version_converter:function(){return IN},version_core:function(){return Nu},version_layers:function(){return Wx},where:function(){return pc},whereAsync:function(){return Op},zeros:function(){return ph},zerosLike:function(){return _u}});var r={};n.r(r),n.d(r,{arraysEqual:function(){return ct},assert:function(){return st},assertNonNegativeIntegerDimensions:function(){return Bt},assertNonNull:function(){return at},assertShapesMatch:function(){return ot},bytesFromStringArray:function(){return Ct},bytesPerElement:function(){return Tt},checkConversionForErrors:function(){return kt},clamp:function(){return Z},computeStrides:function(){return Ft},createScalarValue:function(){return Ls},createShuffledIndices:function(){return ft},decodeString:function(){return Vs},distSquared:function(){return rt},encodeString:function(){return Us},fetch:function(){return Bs},fingerPrint64:function(){return Os},flatten:function(){return it},getArrayFromDType:function(){return vt},getTypedArrayFromDType:function(){return wt},hasEncodingLoss:function(){return St},hexToLong:function(){return Ns},indexToLoc:function(){return Vt},inferDtype:function(){return At},inferFromImplicitShape:function(){return yt},isBoolean:function(){return $t},isFunction:function(){return _t},isInt:function(){return ht},isNumber:function(){return Rt},isPromise:function(){return Wt},isScalarShape:function(){return lt},isString:function(){return Et},isTypedArray:function(){return Nt},isValidDtype:function(){return It},locToIndex:function(){return Ut},makeOnesTypedArray:function(){return Lt},makeZerosNestedTypedArray:function(){return zt},makeZerosTypedArray:function(){return Pt},nearestDivisor:function(){return Mt},nearestLargerEven:function(){return Q},now:function(){return zs},parseAxisParam:function(){return bt},randUniform:function(){return nt},repeatedTry:function(){return gt},rightPad:function(){return mt},shuffle:function(){return Y},shuffleCombo:function(){return J},sizeFromShape:function(){return ut},sizeToSquarishShape:function(){return dt},squeezeShape:function(){return xt},sum:function(){return et},swap:function(){return tt},tanh:function(){return pt},toNestedArray:function(){return Ot},toTypedArray:function(){return Ps}});var s={};n.r(s),n.d(s,{assertTypesMatch:function(){return fo},getTensorsInContainer:function(){return go},isTensorInList:function(){return mo},makeTypesMatch:function(){return po}});var o={};n.r(o),n.d(o,{isBrowser:function(){return Co},isMobile:function(){return To},mockIsMobile:function(){return No}});var a={};n.r(a),n.d(a,{browserFiles:function(){return Va},browserHTTPRequest:function(){return Ja},concatenateArrayBuffers:function(){return Ho},copyModel:function(){return Aa},decodeWeights:function(){return Uo},encodeWeights:function(){return Bo},fromMemory:function(){return ei},fromMemorySync:function(){return ni},getLoadHandlers:function(){return ra},getModelArtifactsForJSON:function(){return Xo},getModelArtifactsForJSONSync:function(){return Ko},getModelArtifactsInfoForJSON:function(){return Yo},getSaveHandlers:function(){return na},getWeightSpecs:function(){return Jo},http:function(){return Ya},isHTTPScheme:function(){return Ka},listModels:function(){return $a},loadWeights:function(){return Ha},moveModel:function(){return _a},registerLoadRouter:function(){return ea},registerSaveRouter:function(){return ta},removeModel:function(){return Ra},weightsLoaderFactory:function(){return ja},withSaveHandler:function(){return ri},withSaveHandlerSync:function(){return si}});var i={};n.r(i),n.d(i,{confusionMatrix:function(){return _i}});var u={};n.r(u),n.d(u,{assertAndGetBroadcastShape:function(){return Di},getBroadcastDims:function(){return Mi},getReductionAxes:function(){return Fi}});var l={};n.r(l),n.d(l,{fromPixels:function(){return Ui},fromPixelsAsync:function(){return zi},toPixels:function(){return Bi}});var c={};n.r(c),n.d(c,{prepareAndValidate:function(){return Vi}});var h={};n.r(h),n.d(h,{calculateShapes:function(){return Hi},validateInput:function(){return Gi},validateUpdateShape:function(){return Wi}});var p={};n.r(p),n.d(p,{assertParamsValid:function(){return ji},computeFlatOffset:function(){return ou},computeOutShape:function(){return Ki},getNormalizedAxes:function(){return Zi},isSliceContinous:function(){return su},maskToAxes:function(){return qi},parseSliceParams:function(){return au},sliceInfo:function(){return iu},startForAxis:function(){return nu},startIndicesWithElidedDims:function(){return Qi},stopForAxis:function(){return ru},stopIndicesWithElidedDims:function(){return tu},stridesForAxis:function(){return eu},stridesWithElidedDims:function(){return Xi}});var d={};n.r(d),n.d(d,{Serializable:function(){return lu},SerializationMap:function(){return cu},registerClass:function(){return hu}});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:function(){return pu},createVideoElement:function(){return Iu},encodeStrings:function(){return ku},expectArrayBuffersEqual:function(){return vu},expectArraysClose:function(){return du},expectArraysEqual:function(){return yu},expectNumbersClose:function(){return bu},expectPromiseToFail:function(){return gu},expectValuesInRange:function(){return wu},play:function(){return Su},testEpsilon:function(){return fu}});var m={};n.r(m),n.d(m,{conv2d:function(){return Jp},depthwiseConv2d:function(){return td},matMul:function(){return ed}});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:function(){return sm},computeOutShape:function(){return rm},segOpComputeOptimalWindowSize:function(){return nm}});var y={};n.r(y),n.d(y,{ERF_A1:function(){return If},ERF_A2:function(){return Sf},ERF_A3:function(){return Nf},ERF_A4:function(){return Tf},ERF_A5:function(){return Cf},ERF_P:function(){return kf},PARALLELIZE_THRESHOLD:function(){return pf},RowPartitionType:function(){return af},SELU_SCALE:function(){return vf},SELU_SCALEALPHA:function(){return wf},applyActivation:function(){return Xp},assertAndGetBroadcastShape:function(){return Di},assertAxesAreInnerMostDims:function(){return kc},assertParamsConsistent:function(){return sf},assignToTypedArray:function(){return Mf},axesAreInnerMostDims:function(){return bc},calculateShapes:function(){return Hi},checkEinsumDimSizes:function(){return zf},checkPadOnDimRoundingMode:function(){return Tl},combineLocations:function(){return xc},combineRaggedTensorToTensorShapes:function(){return uf},complexWithEvenIndex:function(){return Rf},complexWithOddIndex:function(){return Af},computeConv2DInfo:function(){return gl},computeConv3DInfo:function(){return yl},computeDefaultPad:function(){return bl},computeDilation2DInfo:function(){return dl},computeOptimalWindowSize:function(){return df},computeOutAndReduceShapes:function(){return wc},computeOutShape:function(){return of},computePool2DInfo:function(){return fl},computePool3DInfo:function(){return ml},convertConv2DDataFormat:function(){return Nl},decodeEinsumEquation:function(){return Lf},eitherStridesOrDilationsAreOne:function(){return Sl},expandShapeToKeepDim:function(){return vc},exponent:function(){return Df},exponents:function(){return Ff},fromStringArrayToUint8:function(){return am},fromUint8ToStringArray:function(){return om},getAxesPermutation:function(){return Ic},getBroadcastDims:function(){return Mi},getComplexWithIndex:function(){return _f},getEinsumComputePath:function(){return Bf},getEinsumPermutation:function(){return Pf},getFusedBiasGradient:function(){return Kp},getFusedDyActivation:function(){return qp},getImageCenter:function(){return ff},getInnerMostAxes:function(){return Nc},getPermuted:function(){return gf},getRaggedRank:function(){return cf},getReductionAxes:function(){return Fi},getReshaped:function(){return mf},getReshapedPermuted:function(){return yf},getRowPartitionTypesHelper:function(){return lf},getSliceBeginCoords:function(){return bf},getSliceSize:function(){return xf},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return Gf},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return Hf},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return jf},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return Xf},getSparseReshapeInputOutputMismatchErrorMessage:function(){return Jf},getSparseReshapeInputOutputMultipleErrorMessage:function(){return Yf},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return qf},getSparseReshapeNegativeOutputDimErrorMessage:function(){return Kf},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return em},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return Zf},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return Qf},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return tm},getUndoAxesPermutation:function(){return Sc},isIdentityPermutation:function(){return Uf},log:function(){return hs},mergeRealAndImagArrays:function(){return Ef},prepareAndValidate:function(){return Vi},prepareSplitSize:function(){return Wf},segment_util:function(){return g},shouldFuse:function(){return Yp},slice_util:function(){return p},splitRealAndImagArrays:function(){return $f},tupleValuesAreOne:function(){return Il},upcastType:function(){return co},validateDefaultValueShape:function(){return hf},validateInput:function(){return Gi},validateUpdateShape:function(){return Wi},warn:function(){return cs}});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:function(){return fd},nonMaxSuppressionV4Impl:function(){return md},nonMaxSuppressionV5Impl:function(){return gd},whereImpl:function(){return Dp}});var x={};n.r(x),n.d(x,{maxNorm:function(){return Lb},minMaxNorm:function(){return Bb},nonNeg:function(){return zb},unitNorm:function(){return Pb}});var w={};n.r(w),n.d(w,{constant:function(){return Wb},glorotNormal:function(){return Yb},glorotUniform:function(){return Xb},heNormal:function(){return Jb},heUniform:function(){return Zb},identity:function(){return qb},leCunNormal:function(){return Qb},leCunUniform:function(){return tx},ones:function(){return Vb},orthogonal:function(){return ex},randomNormal:function(){return Hb},randomUniform:function(){return Gb},truncatedNormal:function(){return jb},varianceScaling:function(){return Kb},zeros:function(){return Ub}});var v={};n.r(v),n.d(v,{Layer:function(){return gb},RNN:function(){return dv},RNNCell:function(){return fv},activation:function(){return Dk},add:function(){return Gk},alphaDropout:function(){return FI},average:function(){return Hk},averagePooling1d:function(){return tI},averagePooling2d:function(){return rI},averagePooling3d:function(){return aI},avgPool1d:function(){return eI},avgPool2d:function(){return sI},avgPool3d:function(){return iI},avgPooling1d:function(){return nI},avgPooling2d:function(){return oI},avgPooling3d:function(){return uI},batchNormalization:function(){return Jk},bidirectional:function(){return TI},concatenate:function(){return jk},conv1d:function(){return Tk},conv2d:function(){return Ck},conv2dTranspose:function(){return Ek},conv3d:function(){return $k},conv3dTranspose:function(){return Rk},convLstm2d:function(){return kI},convLstm2dCell:function(){return II},cropping2D:function(){return _k},dense:function(){return Ok},depthwiseConv2d:function(){return Fk},dot:function(){return Yk},dropout:function(){return Lk},elu:function(){return wk},embedding:function(){return Wk},flatten:function(){return zk},gaussianDropout:function(){return MI},gaussianNoise:function(){return _I},globalAveragePooling1d:function(){return lI},globalAveragePooling2d:function(){return cI},globalMaxPool1d:function(){return EI},globalMaxPool2d:function(){return $I},globalMaxPooling1d:function(){return hI},globalMaxPooling2d:function(){return pI},gru:function(){return gI},gruCell:function(){return yI},input:function(){return fw},inputLayer:function(){return xk},layerNormalization:function(){return Zk},leakyReLU:function(){return kk},lstm:function(){return bI},lstmCell:function(){return xI},masking:function(){return DI},maxPool1d:function(){return RI},maxPool2d:function(){return AI},maxPooling1d:function(){return dI},maxPooling2d:function(){return fI},maxPooling3d:function(){return mI},maximum:function(){return qk},minimum:function(){return Kk},multiply:function(){return Xk},permute:function(){return Vk},prelu:function(){return Ik},reLU:function(){return vk},repeatVector:function(){return Bk},rescaling:function(){return OI},reshape:function(){return Uk},rnn:function(){return SI},separableConv2d:function(){return Ak},simpleRNN:function(){return wI},simpleRNNCell:function(){return vI},softmax:function(){return Sk},spatialDropout1d:function(){return Pk},stackedRNNCells:function(){return NI},thresholdedReLU:function(){return Nk},timeDistributed:function(){return CI},upSampling2d:function(){return Mk},zeroPadding2d:function(){return Qk}});var k={};n.r(k),n.d(k,{MAPE:function(){return qI},MSE:function(){return YI},binaryAccuracy:function(){return LI},binaryCrossentropy:function(){return PI},categoricalAccuracy:function(){return BI},categoricalCrossentropy:function(){return UI},cosineProximity:function(){return GI},mape:function(){return KI},meanAbsoluteError:function(){return HI},meanAbsolutePercentageError:function(){return jI},meanSquaredError:function(){return XI},mse:function(){return JI},precision:function(){return VI},recall:function(){return WI},sparseCategoricalAccuracy:function(){return zI}});var I={};n.r(I),n.d(I,{modelFromJSON:function(){return lw}});var S={};n.r(S),n.d(S,{l1:function(){return QI},l1l2:function(){return ZI},l2:function(){return tS}});var N={};n.r(N),n.d(N,{json:function(){return xS}});var T={};n.r(T),n.d(T,{json:function(){return wS}});var C={};n.r(C),n.d(C,{json:function(){return vS}});var E={};n.r(E),n.d(E,{json:function(){return kS}});var $={};n.r($),n.d($,{json:function(){return IS}});var R={};n.r(R),n.d(R,{json:function(){return SS}});var A={};n.r(A),n.d(A,{json:function(){return NS}});var _={};n.r(_),n.d(_,{json:function(){return TS}});var M={};n.r(M),n.d(M,{json:function(){return CS}});var F={};n.r(F),n.d(F,{json:function(){return ES}});var D={};n.r(D),n.d(D,{json:function(){return $S}});var O={};n.r(O),n.d(O,{json:function(){return RS}});var L={};n.r(L),n.d(L,{json:function(){return AS}});var P={};n.r(P),n.d(P,{json:function(){return _S}});var z={};n.r(z),n.d(z,{json:function(){return MS}});var B={};n.r(B),n.d(B,{json:function(){return FS}});var U={};n.r(U),n.d(U,{json:function(){return DS}});var V={};n.r(V),n.d(V,{json:function(){return OS}});var W={};n.r(W),n.d(W,{json:function(){return LS}});var G={};n.r(G),n.d(G,{OP_SCOPE_SUFFIX:function(){return Fo},abs:function(){return Ku},acos:function(){return el},acosh:function(){return nl},add:function(){return Tu},addN:function(){return rl},all:function(){return sl},any:function(){return ol},argMax:function(){return al},argMin:function(){return il},asin:function(){return ul},asinh:function(){return ll},atan:function(){return cl},atan2:function(){return hl},atanh:function(){return pl},avgPool:function(){return El},avgPool3d:function(){return $l},basicLSTMCell:function(){return Fl},batchNorm:function(){return Ol},batchNorm2d:function(){return Ll},batchNorm3d:function(){return Pl},batchNorm4d:function(){return zl},batchToSpaceND:function(){return Dl},bincount:function(){return Bl},booleanMaskAsync:function(){return Lp},broadcastArgs:function(){return Ul},broadcastTo:function(){return Vl},buffer:function(){return Da},cast:function(){return Oa},ceil:function(){return Wl},clipByValue:function(){return Gl},clone:function(){return La},complex:function(){return Oo},concat:function(){return Rl},concat1d:function(){return Hl},concat2d:function(){return jl},concat3d:function(){return ql},concat4d:function(){return Kl},conv1d:function(){return Yl},conv2d:function(){return Xl},conv2dTranspose:function(){return Zl},conv3d:function(){return Ql},conv3dTranspose:function(){return ec},cos:function(){return nc},cosh:function(){return rc},cosineWindow:function(){return Gp},cumprod:function(){return sc},cumsum:function(){return oc},denseBincount:function(){return ac},depthToSpace:function(){return ic},depthwiseConv2d:function(){return uc},diag:function(){return lc},dilation2d:function(){return cc},div:function(){return Eu},divNoNan:function(){return dc},dot:function(){return fc},dropout:function(){return Vp},einsum:function(){return mc},elu:function(){return gc},enclosingPowerOfTwo:function(){return Wp},equal:function(){return hc},erf:function(){return yc},euclideanNorm:function(){return Ac},exp:function(){return _c},expandDims:function(){return Mc},expm1:function(){return Fc},eye:function(){return Oc},fft:function(){return pp},fill:function(){return Wu},floor:function(){return Lc},floorDiv:function(){return Cu},fused:function(){return m},gather:function(){return Pc},gatherND:function(){return Up},greater:function(){return zc},greaterEqual:function(){return Bc},ifft:function(){return dp},imag:function(){return Ei},image:function(){return Yd},inTopKAsync:function(){return Hp},irfft:function(){return fp},isFinite:function(){return Uc},isInf:function(){return Vc},isNaN:function(){return Wc},leakyRelu:function(){return Gc},less:function(){return Hc},lessEqual:function(){return jc},linalg:function(){return Jd},linspace:function(){return qc},localResponseNormalization:function(){return Kc},log:function(){return Xc},log1p:function(){return Yc},logSigmoid:function(){return Zc},logSoftmax:function(){return Qc},logSumExp:function(){return th},logicalAnd:function(){return eh},logicalNot:function(){return nh},logicalOr:function(){return rh},logicalXor:function(){return sh},losses:function(){return Zd},lowerBound:function(){return ih},matMul:function(){return oi},max:function(){return Tc},maxPool:function(){return uh},maxPool3d:function(){return lh},maxPoolWithArgmax:function(){return ch},maximum:function(){return Xu},mean:function(){return hh},meshgrid:function(){return fh},min:function(){return Cc},minimum:function(){return mh},mirrorPad:function(){return gh},mod:function(){return yh},moments:function(){return bh},movingAverage:function(){return Pp},mul:function(){return $u},multiRNNCell:function(){return xh},multinomial:function(){return wh},neg:function(){return $i},norm:function(){return Rc},notEqual:function(){return vh},oneHot:function(){return ai},ones:function(){return dh},onesLike:function(){return kh},op:function(){return Do},outerProduct:function(){return Ih},pad:function(){return Sh},pad1d:function(){return Nh},pad2d:function(){return Th},pad3d:function(){return Ch},pad4d:function(){return Eh},pool:function(){return Rh},pow:function(){return Hu},prelu:function(){return Ah},print:function(){return Pa},prod:function(){return _h},raggedGather:function(){return Mh},raggedTensorToTensor:function(){return Fh},rand:function(){return Dh},randomGamma:function(){return Bh},randomNormal:function(){return Uh},randomStandardNormal:function(){return Vh},randomUniform:function(){return Wh},range:function(){return Gh},real:function(){return Ri},reciprocal:function(){return Hh},relu:function(){return jh},relu6:function(){return qh},reshape:function(){return Cl},reverse:function(){return Kh},reverse1d:function(){return Xh},reverse2d:function(){return Yh},reverse3d:function(){return Jh},reverse4d:function(){return Zh},rfft:function(){return gp},round:function(){return Qh},rsqrt:function(){return tp},scalar:function(){return Bu},scatterND:function(){return zp},searchSorted:function(){return ah},selu:function(){return ep},separableConv2d:function(){return np},setdiff1dAsync:function(){return rp},sigmoid:function(){return Al},sign:function(){return sp},signal:function(){return Xd},sin:function(){return op},sinh:function(){return ap},slice:function(){return _l},slice1d:function(){return ip},slice2d:function(){return up},slice3d:function(){return lp},slice4d:function(){return cp},softmax:function(){return hp},softplus:function(){return Jc},spaceToBatchND:function(){return $h},sparse:function(){return Qd},sparseToDense:function(){return Bp},spectral:function(){return Kd},split:function(){return mp},sqrt:function(){return Ru},square:function(){return Au},squaredDifference:function(){return yp},squeeze:function(){return bp},stack:function(){return xp},step:function(){return wp},stridedSlice:function(){return vp},string:function(){return tf},sub:function(){return ju},sum:function(){return Ec},tan:function(){return kp},tanh:function(){return Ml},tensor:function(){return Po},tensor1d:function(){return Ip},tensor2d:function(){return Sp},tensor3d:function(){return Oi},tensor4d:function(){return Np},tensor5d:function(){return Tp},tensor6d:function(){return Cp},tile:function(){return Dc},topk:function(){return Ep},transpose:function(){return Ai},truncatedNormal:function(){return $p},unique:function(){return Rp},unsortedSegmentSum:function(){return Ap},unstack:function(){return _p},upperBound:function(){return Mp},variable:function(){return Fp},where:function(){return pc},whereAsync:function(){return Op},zeros:function(){return ph},zerosLike:function(){return _u}});var H={};n.r(H),n.d(H,{CSVDataset:function(){return hT},Dataset:function(){return QN},FileDataSource:function(){return IT},TextLineDataset:function(){return sT},URLDataSource:function(){return ST},array:function(){return eT},csv:function(){return NT},func:function(){return TT},generator:function(){return CT},microphone:function(){return $T},version_data:function(){return RT},webcam:function(){return ET},zip:function(){return nT}});var j={};n.r(j),n.d(j,{addImpl:function(){return hC},bincountImpl:function(){return rE},bincountReduceImpl:function(){return sE},castImpl:function(){return aC},ceilImpl:function(){return iE},concatImpl:function(){return dE},equalImpl:function(){return YE},expImpl:function(){return i$},expm1Impl:function(){return p$},floorImpl:function(){return $$},gatherNdImpl:function(){return L$},gatherV2Impl:function(){return z$},greaterEqualImpl:function(){return G$},greaterImpl:function(){return U$},lessEqualImpl:function(){return rR},lessImpl:function(){return tR},linSpaceImpl:function(){return aR},logImpl:function(){return uR},maxImpl:function(){return IR},maximumImpl:function(){return TR},minimumImpl:function(){return OR},multiplyImpl:function(){return VE},negImpl:function(){return jR},notEqualImpl:function(){return tA},prodImpl:function(){return dA},raggedGatherImpl:function(){return gA},raggedTensorToTensorImpl:function(){return kA},rangeImpl:function(){return SA},rsqrtImpl:function(){return OA},scatterImpl:function(){return zA},sigmoidImpl:function(){return JT},simpleAbsImpl:function(){return wC},sliceImpl:function(){return QC},sparseFillEmptyRowsImpl:function(){return o_},sparseReshapeImpl:function(){return i_},sparseSegmentReductionImpl:function(){return l_},sqrtImpl:function(){return f_},squaredDifferenceImpl:function(){return b_},stridedSliceImpl:function(){return I_},stringNGramsImpl:function(){return T_},stringSplitImpl:function(){return $_},stringToHashBucketFastImpl:function(){return A_},subImpl:function(){return b$},tileImpl:function(){return O_},topKImpl:function(){return B_},transposeImpl:function(){return CC},uniqueImpl:function(){return q_}});class q{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class K{refCount(t){return X("refCount")}incRef(t){return X("incRef")}timerAvailable(){return!0}time(t){return X("time")}read(t){return X("read")}readSync(t){return X("readSync")}readToGPU(t,e){return X("readToGPU")}numDataIds(){return X("numDataIds")}disposeData(t,e){return X("disposeData")}write(t,e,n){return X("write")}move(t,e,n,r,s){return X("move")}memory(){return X("memory")}floatPrecision(){return X("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return X("dispose")}}function X(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Y(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,tt(t,e,n)}function J(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n=t.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,tt(t,n,r),tt(e,n,r)}function Z(t,e,n){return Math.max(t,Math.min(e,n))}function Q(t){return t%2==0?t:t+1}function tt(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function et(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function nt(t,e){const n=Math.random();return e*n+(1-n)*t}function rt(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n}function st(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function ot(t,e,n=""){st(ct(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function at(t){st(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function it(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||Nt(t)&&!n)for(let r=0;r<t.length;++r)it(t[r],e,n);else e.push(t);return e}function ut(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function lt(t){return 0===t.length}function ct(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function ht(t){return t%1==0}function pt(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function dt(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function ft(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return Y(e),e}function mt(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function gt(t,e=(t=>0),n,r=setTimeout){return new Promise(((s,o)=>{let a=0;const i=()=>{if(t())return void s();a++;const u=e(a);null!=n&&a>=n?o():r(i,u)};i()}))}function yt(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(t[o]<0)throw Error(`Shapes can not be < 0. Found ${t[o]} at dim ${o}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function bt(t,e){const n=e.length;return st((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),st(t.every((t=>ht(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function xt(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||s?null:bt(e,t).sort();let a=0;for(let i=0;i<t.length;++i){if(null!=o){if(o[a]===i&&1!==t[i])throw new Error(`Can't squeeze axis ${i} since its dim '${t[i]}' is not 1`);(null==o[a]||o[a]>i)&&1===t[i]&&(n.push(t[i]),r.push(i)),o[a]<=i&&a++}1!==t[i]&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function wt(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function vt(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function kt(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function It(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function St(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function Nt(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function Tt(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function Ct(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function Et(t){return"string"==typeof t||t instanceof String}function $t(t){return"boolean"==typeof t}function Rt(t){return"number"==typeof t}function At(t){return Array.isArray(t)?At(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":Rt(t)?"float32":Et(t)?"string":$t(t)?"bool":"float32"}function _t(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Mt(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Ft(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function Dt(t,e,n,r=!1){const s=new Array;if(1===e.length){const o=e[0]*(r?2:1);for(let e=0;e<o;e++)s[e]=n[t+e]}else{const o=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e))*(r?2:1);for(let e=0;e<o;e++)s[e]=Dt(t+e*i,a,n,r)}return s}function Ot(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return Dt(0,t,e,n)}function Lt(t,e){const n=Pt(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function Pt(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function zt(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Ot(t,new Float32Array(n));if("int32"===e)return Ot(t,new Int32Array(n));if("bool"===e)return Ot(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function Bt(t){t.forEach((e=>{st(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function Ut(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function Vt(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}function Wt(t){return t&&t.then&&"function"==typeof t.then}class Gt{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ht,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(jt().getBool("IS_TEST")||jt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];jt().getBool("IS_TEST")||jt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Wt(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function Ht(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function jt(){return Kt}let qt,Kt=null;function Xt(){if(null==qt){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}qt=t}return qt}function Yt(t,e){const n=function(){const t=Xt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Jt="Abs",Zt="Acos",Qt="Acosh",te="Add",ee="AddN",ne="All",re="Any",se="ArgMax",oe="ArgMin",ae="Asin",ie="Asinh",ue="Atan",le="Atanh",ce="Atan2",he="AvgPool",pe="AvgPoolGrad",de="AvgPool3D",fe="AvgPool3DGrad",me="BatchMatMul",ge="BatchToSpaceND",ye="Bincount",be="BroadcastTo",xe="BroadcastArgs",we="Cast",ve="Ceil",ke="ClipByValue",Ie="Complex",Se="ComplexAbs",Ne="Concat",Te="Conv2D",Ce="Conv2DBackpropFilter",Ee="Conv2DBackpropInput",$e="Conv3D",Re="Conv3DBackpropFilterV2",Ae="Conv3DBackpropInputV2",_e="Cos",Me="Cosh",Fe="Cumprod",De="Cumsum",Oe="CropAndResize",Le="DenseBincount",Pe="DepthToSpace",ze="DepthwiseConv2dNative",Be="DepthwiseConv2dNativeBackpropFilter",Ue="DepthwiseConv2dNativeBackpropInput",Ve="Diag",We="Dilation2D",Ge="Dilation2DBackpropInput",He="Dilation2DBackpropFilter",je="RealDiv",qe="Einsum",Ke="Elu",Xe="EluGrad",Ye="Erf",Je="Equal",Ze="Exp",Qe="ExpandDims",tn="Expm1",en="FFT",nn="Fill",rn="FlipLeftRight",sn="Floor",on="FloorDiv",an="FusedBatchNorm",un="GatherV2",ln="GatherNd",cn="Greater",hn="GreaterEqual",pn="Identity",dn="IFFT",fn="Imag",mn="IsFinite",gn="IsInf",yn="IsNan",bn="LeakyRelu",xn="Less",wn="LessEqual",vn="LinSpace",kn="Log",In="Log1p",Sn="LogicalAnd",Nn="LogicalNot",Tn="LogicalOr",Cn="LogicalXor",En="LogSoftmax",$n="LowerBound",Rn="LRN",An="LRNGrad",_n="Max",Mn="Maximum",Fn="MaxPool",Dn="MaxPoolGrad",On="MaxPool3D",Ln="MaxPool3DGrad",Pn="MaxPoolWithArgmax",zn="Mean",Bn="Min",Un="Minimum",Vn="MirrorPad",Wn="Mod",Gn="Multinomial",Hn="Multiply",jn="Neg",qn="NotEqual",Kn="NonMaxSuppressionV3",Xn="NonMaxSuppressionV4",Yn="NonMaxSuppressionV5",Jn="OnesLike",Zn="OneHot",Qn="Pack",tr="PadV2",er="Pool",nr="Pow",rr="Prelu",sr="Prod",or="RaggedGather",ar="RaggedTensorToTensor",ir="Range",ur="Real",lr="Reciprocal",cr="Relu",hr="Reshape",pr="ResizeNearestNeighbor",dr="ResizeNearestNeighborGrad",fr="ResizeBilinear",mr="ResizeBilinearGrad",gr="Relu6",yr="Reverse",br="Round",xr="Rsqrt",wr="ScatterNd",vr="SearchSorted",kr="Select",Ir="Selu",Sr="Slice",Nr="Sin",Tr="Sinh",Cr="Sign",Er="Sigmoid",$r="Softplus",Rr="Sqrt",Ar="Sum",_r="SpaceToBatchND",Mr="SplitV",Fr="Softmax",Dr="SparseFillEmptyRows",Or="SparseReshape",Lr="SparseSegmentMean",Pr="SparseSegmentSum",zr="SparseToDense",Br="SquaredDifference",Ur="Square",Vr="StridedSlice",Wr="StringNGrams",Gr="StringSplit",Hr="StringToHashBucketFast",jr="Sub",qr="Tan",Kr="Tanh",Xr="Tile",Yr="TopK",Jr="Transform",Zr="Transpose",Qr="Unique",ts="Unpack",es="UnsortedSegmentSum",ns="UpperBound",rs="ZerosLike",ss="Step",os="FromPixels",as="RotateWithOffset",is="_FusedMatMul",us="FusedConv2D",ls="FusedDepthwiseConv2D";function cs(...t){jt().getBool("IS_TEST")||jt().getBool("PROD")||console.warn(...t)}function hs(...t){jt().getBool("IS_TEST")||jt().getBool("PROD")||console.log(...t)}const ps=Yt("kernelRegistry",(()=>new Map)),ds=Yt("gradRegistry",(()=>new Map));function fs(t,e){const n=ks(t,e);return ps.get(n)}function ms(t){return ds.get(t)}function gs(t){const e=ps.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===t&&n.push(a)}return n}function ys(t){const{kernelName:e,backendName:n}=t,r=ks(e,n);ps.has(r)&&cs(`The kernel '${e}' for backend '${n}' is already registered`),ps.set(r,t)}function bs(t){const{kernelName:e}=t;ds.has(e)&&jt().getBool("DEBUG")&&cs(`Overriding the gradient for '${e}'`),ds.set(e,t)}function xs(t,e){const n=ks(t,e);if(!ps.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);ps.delete(n)}function ws(t){if(!ds.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);ds.delete(t)}function vs(t,e){gs(t).forEach((t=>{ys(Object.assign({},t,{backendName:e}))}))}function ks(t,e){return`${e}_${t}`}var Is=n(3720);const Ss=n.n(Is)()||Is;function Ns(t){return Ss.fromString(t,!0,16)}const Ts=Ns("c3a5c85c97cb3127"),Cs=Ns("b492b66fbe98f273"),Es=Ns("9ae16a3b2f90404f");function $s(t){return t.xor(t.shru(47))}function Rs(t,e,n){const r=t.slice(e,e+n);return Ss.fromBytes(Array.from(r),!0,!0)}function As(t,e){return Rs(t,e,8)}function _s(t,e){return Rs(t,e,4)}function Ms(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function Fs(t,e,n=Ns("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Ds(t,e,n,r){return function(t,e,n,r,s,o){s=s.add(t),o=Ms(o.add(s).add(r),21);const a=s;return s=(s=s.add(e)).add(n),o=o.add(Ms(s,44)),[s.add(r),o.add(a)]}(As(t,e),As(t,e+8),As(t,e+16),As(t,e+24),n,r)}function Os(t,e=t.length){const n=Ss.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=Es.add(2*e),r=As(t,0).add(Es),s=As(t,e-8);return Fs(Ms(s,37).mul(n).add(r),Ms(r,25).add(s).mul(n),n)}if(e>=4){const n=Es.add(2*e);return Fs(_s(t,0).shl(3).add(e),_s(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return $s(Es.mul(n).xor(Ts.mul(r))).mul(Es)}return Es}(t,e):function(t,e=t.length){const n=Es.add(2*e),r=As(t,0).mul(Cs),s=As(t,8),o=As(t,e-8).mul(n),a=As(t,e-16).mul(Es);return Fs(Ms(r.add(s),43).add(Ms(o,30)).add(a),r.add(Ms(s.add(Es),18)).add(o),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=Es.add(2*e),r=As(t,0).mul(Es),s=As(t,8),o=As(t,e-8).mul(n),a=As(t,e-16).mul(Es),i=Ms(r.add(s),43).add(Ms(o,30)).add(a),u=Fs(i,r.add(Ms(s.add(Es),18)).add(o),n),l=As(t,16).mul(n),c=As(t,24),h=i.add(As(t,e-32)).mul(n),p=u.add(As(t,e-24)).mul(n);return Fs(Ms(l.add(c),43).add(Ms(h,30)).add(p),l.add(Ms(c.add(r),18)).add(h),n)}(t,e);let r=n,s=n.mul(Cs).add(113),o=$s(s.mul(Es).add(113)).mul(Es),a=[Ss.UZERO,Ss.UZERO],i=[Ss.UZERO,Ss.UZERO];r=r.mul(Es).add(As(t,0));let u=0;const l=64*(e-1>>6),c=l+(e-1&63)-63;do{r=Ms(r.add(s).add(a[0]).add(As(t,u+8)),37).mul(Cs),s=Ms(s.add(a[1]).add(As(t,u+48)),42).mul(Cs),r=r.xor(i[1]),s=s.add(a[0]).add(As(t,u+40)),o=Ms(o.add(i[0]),33).mul(Cs),a=Ds(t,u,a[1].mul(Cs),r.add(i[0])),i=Ds(t,u+32,o.add(i[1]),s.add(As(t,u+16))),[o,r]=[r,o],u+=64}while(u!==l);const h=Cs.add(o.and(255).shl(1));return u=c,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=Ms(r.add(s).add(a[0]).add(As(t,u+8)),37).mul(h),s=Ms(s.add(a[1]).add(As(t,u+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(As(t,u+40))),o=Ms(o.add(i[0]),33).mul(h),a=Ds(t,u,a[1].mul(h),r.add(i[0])),i=Ds(t,u+32,o.add(i[1]),s.add(As(t,u+16))),[o,r]=[r,o],Fs(Fs(a[0],i[0],h).add($s(s).mul(Ts)).add(o),Fs(a[1],i[1],h).add(r),h)}function Ls(t,e){return"string"===e?Us(t):Ps([t],e)}function Ps(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=it(t)),jt().getBool("DEBUG")&&kt(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function zs(){return jt().platform.now()}function Bs(t,e){return jt().platform.fetch(t,e)}function Us(t,e="utf-8"){return e=e||"utf-8",jt().platform.encode(t,e)}function Vs(t,e="utf-8"){return e=e||"utf-8",jt().platform.decode(t,e)}class Ws{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Hs)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let o;const a=zs();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();o=Promise.resolve({kernelMs:zs()-a})}if(jt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<r.length;i++){const e=r[i];e.data().then((n=>{Gs(n,e.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:o.then((t=>t.kernelMs)),extraInfo:o.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:o}=t;n.forEach((t=>{Promise.all([t.data(),r,o]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function Gs(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class Hs{logKernelProfile(t,e,n,r,s,o){const a="number"==typeof r?mt(`${r}ms`,9):r.error,i=mt(t,25),u=e.rank,l=e.size,c=mt(e.shape.toString(),14);let h="";for(const p in s){const t=s[p];if(null!=t){const n=t.shape||e.shape,r=n.length;h+=`${p}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${a}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function js(t,e,n,r){const s=Ft(e),o=function(t,e,n,r){const s=ut(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u="complex64"===n?Ys(t):t;if(i>1)for(let l=0;l<s/o;l++){const t=l*o;for(let e=0;e<o;e++)a[e]=Math.max(a[e],qs(u[t+e],0,n).length)}return a}(t,e,n,s),a=e.length,i=Xs(t,e,n,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map((t=>"    "+t)).join("\n")),u.join("\n")}function qs(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:Et(t)?`'${t}'`:"bool"===n?Ks(t):parseFloat(t.toFixed(7)).toString(),mt(r,e)}function Ks(t){return 0===t?"false":"true"}function Xs(t,e,n,r,s,o=!0){const a="complex64"===n?2:1,i=e[0],u=e.length;if(0===u)return"complex64"===n?[qs(Ys(t)[0],0,n)]:"bool"===n?[Ks(t[0])]:[t[0].toString()];if(1===u){if(i>20){const e=3*a;let r=Array.from(t.slice(0,e)),o=Array.from(t.slice((i-3)*a,i*a));return"complex64"===n&&(r=Ys(r),o=Ys(o)),["["+r.map(((t,e)=>qs(t,s[e],n))).join(", ")+", ..., "+o.map(((t,e)=>qs(t,s[i-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Ys(t):Array.from(t)).map(((t,e)=>qs(t,s[e],n))).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*a,p=[];if(i>20){for(let e=0;e<3;e++){const r=e*h,o=r+h;p.push(...Xs(t.slice(r,o),l,n,c,s,!1))}p.push("...");for(let e=i-3;e<i;e++){const r=e*h,o=r+h;p.push(...Xs(t.slice(r,o),l,n,c,s,e===i-1))}}else for(let m=0;m<i;m++){const e=m*h,r=e+h;p.push(...Xs(t.slice(e,r),l,n,c,s,m===i-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+d;let f=",\n";for(let m=2;m<u;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(o?"":f),p}function Ys(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Js{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=ut(t),null!=n){const t=n.length;st(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||vt(e,this.size),this.strides=Ft(t)}set(t,...e){0===e.length&&(e=[0]),st(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Zs().makeTensor(this.values,this.shape,this.dtype)}}let Zs=null,Qs=null,to=null;class eo{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ut(t),this.strides=Ft(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Qs.buffer(this.shape,this.dtype,t)}bufferSync(){return Qs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Ot(this.shape,t,"complex64"===this.dtype)}arraySync(){return Ot(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Zs().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Vs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Zs().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Zs().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Vs(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Zs().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Zs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Qs.print(this,t)}clone(){return this.throwIfDisposed(),Qs.clone(this)}toString(t=!1){return js(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Qs.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Zs().makeVariable(this,t,e,n)}}function no(){return Yt("Tensor",(()=>eo))}Object.defineProperty(eo,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),no();class ro extends eo{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!ct(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Zs().disposeTensor(this),this.dataId=t.dataId,Zs().incRef(this,null)}dispose(){Zs().disposeVariable(this),this.isDisposedInternal=!0}}var so,oo,ao,io,uo;Object.defineProperty(ro,Symbol.hasInstance,{value:t=>t instanceof eo&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(so||(so={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(oo||(oo={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(ao||(ao={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(io||(io={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(uo||(uo={}));const lo={float32:io,int32:oo,bool:ao,complex64:uo};function co(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return lo[t][e]}function ho(t){return co(t,"int32")}function po(t,e){if(t.dtype===e.dtype)return[t,e];const n=co(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function fo(t,e){st(t.dtype===e.dtype,(()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`))}function mo(t,e){return e.some((e=>e.id===t.id))}function go(t){const e=[];return yo(t,e,new Set),e}function yo(t,e,n){if(null==t)return;if(t instanceof eo)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const o in s){const t=s[o];n.has(t)||(n.add(t),yo(t,e,n))}}function bo(t){return null!=t.kernelName}class xo{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class wo{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new xo}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(cs(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Ws(this.backendInstance),!0}setupRegisteredKernels(){gs(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){gs(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof K||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,cs(`Initialization of backend ${t} failed`),cs(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return cs(`Initialization of backend ${t} failed`),cs(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),o=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return wo.nextTensorId++}nextVariableId(){return wo.nextVariableId++}clone(t){const e=ko.runKernel(pn,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return ko.runKernel(we,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==fs(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-s-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,o=this.state.numTensors;let a,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=bo(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(bo(t)){const{kernelName:e,inputs:s,attrs:o}=t;null==this.backendName&&this.backend;const u=fs(e,this.backendName);st(null!=u,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();i=u.kernelFunc({inputs:s,attrs:o,backend:this.backend});const a=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const l=a.map((t=>null!=t.rank?t:this.makeTensorFromTensorInfo(t)));if(r){const t=this.getTensorsForGradient(e,s,l);n=this.saveTensorsForBackwardMode(t)}return l}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();i=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,t,n),n}}const{inputs:l,attrs:c}=t,h=bo(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=a()})),r&&this.addTapeNode(u,l,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((t=>null!=l[t]?l[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?e:e[0]}saveTensorsForBackwardMode(t){const e=t.map((t=>this.keep(this.clone(t))));return e}getTensorsForGradient(t,e,n){const r=ms(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let o;r.saveAllInputs?(st(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(e).map((t=>e[t]))):o=t.map((t=>e[t]));const a=n.filter(((t,e)=>s[e]));return o.concat(a)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&Et(t[0])&&(s=t.map((t=>Us(t))));const o=r.write(s,e,n),a=new eo(e,n,o,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const t=this.state.tensorInfo.get(o),e=Ct(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s={dataId:t,shape:e,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:r,dtype:s}=t,o=new eo(r,s,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new ro(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Tt(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof ro||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*Tt(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},i=ms(t);null!=i&&(r=i.gradFunc),null!=r&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=Pt(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=go(t),n=new Set(e.map((t=>t.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(st(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));st(s instanceof eo,(()=>"The result y returned by f() must be a tensor."));const o=function(t,e,n){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],o=n.inputs;for(const t in o){const a=o[t];let i=!1;for(let t=0;t<e.length;t++)if(r[a.id]){n.outputs.forEach((t=>r[t.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const a={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(o[e.outputs[t].id]){for(const t in n)o[n[t].id]=!0,a[e.id]=!0;break}}const i=[];for(let u=0;u<t.length;u++){const e=t[u];if(s[e.id]&&a[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];r[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,s);if(!r&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=Lt(ut(t),"float32");return ko.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const e in o.inputs){if(!(e in i))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const a=o.inputs[e];if(!ct(s.shape,a.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=s;else{const e=t[a.id];t[a.id]=r(e,s),e.dispose()}}}}(t,o,(t=>this.tidy(t)),Io);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return st(_t(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;st(e.every((t=>t instanceof eo)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc({forwardFunc:(r,s)=>(n=t(...e,s),st(n.value instanceof eo,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),st(_t(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const s=n.gradFunc(t,r),o=Array.isArray(s)?s:[s];st(o.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),st(o.every((t=>t instanceof eo)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return o.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=zs(),n=await this.backend.time(t);return n.wallMs=zs()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new xo;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function vo(){const t=Xt();if(null==t._tfengine){const e=new Gt(t);t._tfengine=new wo(e)}var e;return e=t._tfengine.ENV,Kt=e,Zs=()=>t._tfengine,t._tfengine}wo.nextTensorId=0,wo.nextVariableId=0;const ko=vo();function Io(t,e){const n={a:t,b:e};return ko.runKernel(te,n)}let So;function No(t){So=t}function To(t){if(void 0!==So)return So;if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Co(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Eo=jt();function $o(t,e){let n=t;if(Nt(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Nt(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&jt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ro(t,r,[]),r}function Ro(t,e,n){if(n=n||[],!Array.isArray(t)&&!Nt(t))return void st(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));st(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),st(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let s=0;s<t.length;++s)Ro(t[s],r,n.concat(s))}function Ao(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function _o(t,e,n,r="numeric"){if(t instanceof eo)return Ao(r,t.dtype,e,n),t;let s=At(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ao(r,s,e,n),null==t||!Nt(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const o=$o(t,s);Nt(t)||Array.isArray(t)||(t=[t]);const a="string"!==s?Ps(t,s):it(t,[],!0);return ko.makeTensor(a,o,s)}function Mo(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>_o(t,`${e}[${s}]`,n,r)))}Eo.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Eo.registerFlag("IS_BROWSER",(()=>Co())),Eo.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Eo.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Eo.registerFlag("PROD",(()=>!1)),Eo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Eo.getBool("DEBUG"))),Eo.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Eo.registerFlag("IS_TEST",(()=>!1)),Eo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Eo.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Eo.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),Eo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Eo.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Fo="__op";function Do(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Fo;const s=(...t)=>{ko.startScope(n);try{const e=r(...t);return Wt(e)&&console.error("Cannot return a Promise inside of tidy."),ko.endScope(e),e}catch(t){throw ko.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Oo=Do({complex_:function(t,e){const n=_o(t,"real","complex"),r=_o(e,"imag","complex");ot(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ko.runKernel(Ie,s)}});function Lo(t,e,n,r){if(null==r&&(r=At(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Nt(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Bt(e);const t=ut(e),r=ut(n);st(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==ut(e.slice(s));st(n[s]===e[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return Nt(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Ps(t,r):it(t,[],!0),ko.makeTensor(t,e,r)}function Po(t,e,n){return Lo(t,e,$o(t,n),n)}const zo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Bo(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let o=0;o<s.length;++o){const a=s[o],i=Array.isArray(t)?t[o].tensor:t[a];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${i.dtype}`);const u={name:a,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise((async t=>{const e=await i.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let o=0;o<e.length;o++){const t=e[o],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,s),s+=4,r.set(t,s),s+=t.length}t(r)}));r.push(t)}else r.push(i.data());null!=e&&(u.group=e),n.push(u)}return{data:Vo(await Promise.all(r)),specs:n}}function Uo(t,e){const n={};let r,s=0;for(const o of e){const e=o.name,a=o.dtype,i=o.shape,u=ut(i);let l;if("quantization"in o){const n=o.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${o.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${o.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const i=zo[n.dtype],c=t.slice(s,s+u*i),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Zo()),l=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}s+=u*i}else if("string"===a){const e=ut(o.shape);l=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));l.push(n),s+=e}}else{const r=zo[a],o=t.slice(s,s+u*r);if("float32"===a)l=new Float32Array(o);else if("int32"===a)l=new Int32Array(o);else if("bool"===a)l=new Uint8Array(o);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${e}': ${a}`);{l=new Float32Array(o);const t=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],r[e]=l[2*e+1];const s=Po(t,i,"float32"),a=Po(r,i,"float32");n[e]=Oo(s,a),s.dispose(),a.dispose()}}s+=u*r}"complex64"!==a&&(n[e]=Po(l,i,a))}return n}function Vo(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const Wo="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Go(t){return Wo?Buffer.byteLength(t):new Blob([t]).size}function Ho(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function jo(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function qo(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function Ko(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(r.trainingConfig=t.trainingConfig),null!=t.weightsManifest){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),r}async function Xo(t,e){let n,r;return null!=t.weightsManifest&&([n,r]=await e(t.weightsManifest)),Ko(t,n,r)}function Yo(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Go(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Go(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Jo(t){const e=[];for(const n of t)e.push(...n.weights);return e}function Zo(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let a=0;a<r.length;a++){const s=r[a],i=t[n[s>>10]+(1023&s)]+e[s>>10];o[a]=i}return new Float32Array(s)}}class Qo{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Qo.instance&&(Qo.instance=new Qo),Qo.instance}static registerSaveRouter(t){Qo.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Qo.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Qo.getHandlers(t,"save")}static getLoadHandlers(t,e){return Qo.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Qo.getInstance().loadRouters:Qo.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const ta=t=>Qo.registerSaveRouter(t),ea=t=>Qo.registerLoadRouter(t),na=t=>Qo.getSaveHandlers(t),ra=(t,e)=>Qo.getLoadHandlers(t,e),sa="tensorflowjs",oa="models_store",aa="model_info_store";function ia(){if(!jt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ua(t){const e=t.result;e.createObjectStore(oa,{keyPath:"modelPath"}),e.createObjectStore(aa,{keyPath:"modelPath"})}class la{constructor(t){if(this.indexedDB=ia(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(sa,1);r.onupgradeneeded=()=>ua(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(oa,"readonly"),r=e.objectStore(oa).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Yo(e),o=s.transaction(aa,"readwrite");let a=o.objectStore(aa);const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=s.transaction(oa,"readwrite");const i=u.objectStore(oa).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});i.onsuccess=()=>t({modelArtifactsInfo:r}),i.onerror=t=>{a=o.objectStore(aa);const e=a.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(i.error)),e.onerror=t=>(s.close(),n(i.error))}},i.onerror=t=>(s.close(),n(i.error)),o.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}la.URL_SCHEME="indexeddb://";const ca=t=>{return jt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(la.URL_SCHEME)?(e=t.slice(la.URL_SCHEME.length),new la(e)):null;var e};Qo.registerSaveRouter(ca),Qo.registerLoadRouter(ca);class ha{constructor(){this.indexedDB=ia()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(sa,1);n.onupgradeneeded=()=>ua(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(aa,"readonly"),o=s.objectStore(aa).getAll();o.onsuccess=()=>{const e={};for(const t of o.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},o.onerror=t=>(r.close(),e(o.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(la.URL_SCHEME)?e.slice(la.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(sa,1);r.onupgradeneeded=()=>ua(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(aa,"readwrite"),a=o.objectStore(aa),i=a.get(t);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),o=()=>{u=s.transaction(oa,"readwrite");const r=u.objectStore(oa).delete(t);r.onsuccess=()=>e(i.result.modelArtifactsInfo),r.onerror=t=>n(i.error)};r.onsuccess=o,r.onerror=t=>(o(),s.close(),n(i.error))}},i.onerror=t=>(s.close(),n(i.error)),o.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const pa="/",da="tensorflowjs_models",fa="info",ma="model_topology",ga="weight_specs",ya="weight_data",ba="model_metadata";function xa(t){return{info:[da,t,fa].join(pa),topology:[da,t,ma].join(pa),weightSpecs:[da,t,ga].join(pa),weightData:[da,t,ya].join(pa),modelMetadata:[da,t,ba].join(pa)}}function wa(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function va(t){const e=t.split(pa);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(pa)}class ka{constructor(t){if(!jt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=xa(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Yo(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Wo)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,s=e.length;r<s;r++)n+=String.fromCharCode(e[r]);return btoa(n)}(t.weightData));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(t){throw wa(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Wo){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer}(o),e}}ka.URL_SCHEME="localstorage://";const Ia=t=>{return jt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ka.URL_SCHEME)?(e=t.slice(ka.URL_SCHEME.length),new ka(e)):null;var e};Qo.registerSaveRouter(Ia),Qo.registerLoadRouter(Ia);class Sa{constructor(){st(jt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),st("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=da+pa,n=pa+fa;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[va(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=xa(t=(e=t).startsWith(ka.URL_SCHEME)?e.slice(ka.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return wa(n),r}}const Na="://";class Ta{constructor(){this.managers={}}static getInstance(){return null==Ta.instance&&(Ta.instance=new Ta),Ta.instance}static registerManager(t,e){st(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(Na)&&(t=t.slice(0,t.indexOf(Na))),st(t.length>0,(()=>"scheme must not be an empty string."));const n=Ta.getInstance();st(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=Ta.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Ta.getInstance().managers)}}function Ca(t){if(-1===t.indexOf(Na))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ta.getSchemes().join(",")}`);return{scheme:t.split(Na)[0],path:t.split(Na)[1]}}async function Ea(t,e,n=!1){st(t!==e,(()=>`Old path and new path are the same: '${t}'`));const r=Qo.getLoadHandlers(t);st(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${t}.`)),st(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`));const s=r[0],o=Qo.getSaveHandlers(e);st(o.length>0,(()=>`Copying failed because no save handler is found for destination URL ${e}.`)),st(o.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`));const a=o[0],i=Ca(t).scheme,u=Ca(t).path,l=i===Ca(t).scheme,c=await s.load();n&&l&&await Ta.getManager(i).removeModel(u);const h=await a.save(c);return n&&!l&&await Ta.getManager(i).removeModel(u),h.modelArtifactsInfo}async function $a(){const t=Ta.getSchemes(),e={};for(const n of t){const t=await Ta.getManager(n).listModels();for(const r in t)e[n+Na+r]=t[r]}return e}async function Ra(t){const e=Ca(t);return Ta.getManager(e.scheme).removeModel(e.path)}async function Aa(t,e){return Ea(t,e,!1)}async function _a(t,e){return Ea(t,e,!0)}class Ma{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&jt().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(t=>{t.source===window&&t.data.name===this.messageName&&(t.stopPropagation(),(0,this.functionRefs[t.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(t,e)}}if(jt().get("IS_BROWSER")){jt().setPlatform("browser",new Ma);try{Ta.registerManager(ka.URL_SCHEME,new Sa)}catch(t){}try{Ta.registerManager(la.URL_SCHEME,new ha)}catch(t){}}let Fa;function Da(t,e="float32",n){return e=e||"float32",Bt(t),new Js(t,e,n)}jt().get("IS_NODE")&&!jt().get("IS_BROWSER")&&jt().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=jt().global.fetch?jt().global.fetch(t,e):(null==Fa&&(Fa=n(5410)),Fa(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Oa=Do({cast_:function(t,e){const n=_o(t,"x","cast");if(!It(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return ko.runKernel(we,r,s)}}),La=Do({clone_:function(t){const e={x:_o(t,"x","clone","string_or_numeric")};return ko.runKernel(pn,e)}});function Pa(t,e=!1){console.log(t.toString(e))}function za(t){return new Promise((t=>setTimeout(t))).then(t)}vo(),Qs={buffer:Da,cast:Oa,clone:La,print:Pa};class Ba{constructor(t){if(!jt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ba.URL_SCHEME)&&(t=t.slice(Ba.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=qo(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await za((()=>s.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await za((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Yo(t)}}}}Ba.URL_SCHEME="downloads://";class Ua{constructor(t){if(null==t||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise(((t,e)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void t({modelTopology:s});const o=Xo(r,(t=>this.loadWeights(t)));t(o)},n.onerror=t=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(t){const e=[],n=[];for(const o of t)e.push(...o.weights),n.push(...o.paths);const r=this.checkManifestAndWeightFiles(t),s=n.map((t=>this.loadWeightsFile(t,r[t])));return Promise.all(s).then((t=>[e,Ho(t)]))}loadWeightsFile(t,e){return new Promise(((n,r)=>{const s=new FileReader;s.onload=t=>{const e=t.target.result;n(e)},s.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)}))}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map((t=>jo(t.name))),r={};for(const s of t)s.paths.forEach((t=>{const s=jo(t);if(-1!==e.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(e.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[t]=this.weightsFiles[n.indexOf(s)]}));if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Va(t){return new Ua(t)}function Wa(t,e,n,r){!function(t){st(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){st(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),st(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),st(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((o=>(o.then((o=>{const a=n+ ++s/t.length*(r-n);return e(a),o})),o))))}async function Ga(t,e){null==e&&(e={});const n=null==e.fetchFunc?jt().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await Wa(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Wa(s,e.onProgress,.5,1)}async function Ha(t,e="",n,r){return ja((t=>Ga(t,{requestInit:r})))(t,e,n)}function ja(t){return async(e,n="",r)=>{const s=e.map((()=>!1)),o={},a=null!=r?r.map((()=>!1)):[],i=[];if(e.forEach(((t,e)=>{let n=0;t.weights.forEach((t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,l=zo[u]*ut(t.shape),c=()=>{s[e]=!0,null==o[e]&&(o[e]=[]),o[e].push({manifestEntry:t,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((e,n)=>{e===t.name&&(c(),a[n]=!0)})):c(),i.push(t.name),n+=l}))})),!a.every((t=>t))){const t=r.filter(((t,e)=>!a[e]));throw new Error(`Could not find weights in manifest with names: ${t.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce(((t,e,n)=>(e&&t.push(n),t)),[]),l=[];u.forEach((t=>{e[t].paths.forEach((t=>{const e=n+(n.endsWith("/")?"":"/")+t;l.push(e)}))}));const c=await t(l),h={};let p=0;return u.forEach((t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const s=new ArrayBuffer(r),a=new Uint8Array(s);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);a.set(t,i),i+=t.byteLength}o[t].forEach((t=>{const e=Uo(s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const n in e)h[n]=e[n]})),p+=n})),h}}Qo.registerSaveRouter((t=>jt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ba.URL_SCHEME)?function(t="model"){return new Ba(t)}(t.slice(Ba.URL_SCHEME.length)):null));class qa{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(st("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=jt().platform.fetch,st(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&st(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=qo(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Yo(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Xo(e,(t=>this.loadWeights(t)))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,o=Jo(t),a=[],i=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):a.push(s+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),[o,Ho(await Ga(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ka(t){return null!=t.match(qa.URL_SCHEME_REGEX)}qa.URL_SCHEME_REGEX=/^https?:\/\//;const Xa=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Ka(t))):Ka(t),n)return Ya(t,e)}return null};function Ya(t,e){return new qa(t,e)}function Ja(t,e){return Ya(t,e)}Qo.registerSaveRouter(Xa),Qo.registerLoadRouter(Xa);class Za{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class Qa{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class ti{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function ei(t,e,n,r){const s=arguments;return new ti(ni(...s))}function ni(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new Za(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Za({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Za({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function ri(t){return new Qa(t)}function si(t){return new Qa(t)}const oi=Do({matMul_:function(t,e,n=!1,r=!1){let s=_o(t,"a","matMul"),o=_o(e,"b","matMul");[s,o]=po(s,o);const a={a:s,b:o},i={transposeA:n,transposeB:r};return ko.runKernel(me,a,i)}}),ai=Do({oneHot_:function(t,e,n=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:_o(t,"indices","oneHot","int32")},a={dtype:s,depth:e,onValue:n,offValue:r};return ko.runKernel(Zn,o,a)}});function ii(){jt().set("PROD",!0)}function ui(){jt().set("DEBUG",!0)}function li(){jt().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ci(t){jt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function hi(){ko.disposeVariables()}function pi(){return ko}function di(){return ko.memory()}function fi(t){return ko.profile(t)}function mi(t,e){return ko.tidy(t,e)}function gi(t){go(t).forEach((t=>t.dispose()))}function yi(t){return ko.keep(t)}function bi(t){return ko.time(t)}function xi(t){return ko.setBackend(t)}function wi(){return ko.ready()}function vi(){return ko.backendName}function ki(t){ko.removeBackend(t)}function Ii(t){return ko.findBackend(t)}function Si(t){return ko.findBackendFactory(t)}function Ni(t,e,n=1){return ko.registerBackend(t,e,n)}function Ti(){return ko.backend}function Ci(t,e){jt().setPlatform(t,e)}to=ci;const Ei=Do({imag_:function(t){const e={input:_o(t,"input","imag")};return ko.runKernel(fn,e)}}),$i=Do({neg_:function(t){const e={x:_o(t,"x","neg")};return ko.runKernel(jn,e)}}),Ri=Do({real_:function(t){const e={input:_o(t,"input","real")};return ko.runKernel(ur,e)}}),Ai=Do({transpose_:function(t,e,n){const r=_o(t,"x","transpose");if(null==e&&(e=r.shape.map(((t,e)=>e)).reverse()),st(r.rank===e.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`)),e.forEach((t=>{st(t>=0&&t<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${e}`))})),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return"complex64"===r.dtype?mi((()=>{let t=Ri(r),e=Ei(r);return t=ko.runKernel(Zr,{x:t},o),e=ko.runKernel(Zr,{x:e},o),n&&(e=$i(e)),Oo(t,e)})):ko.runKernel(Zr,s,o)}}),_i=Do({confusionMatrix_:function(t,e,n){const r=_o(t,"labels","confusionMatrix"),s=_o(e,"predictions","confusionMatrix");st(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),st(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),st(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),st(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),st(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const o=ai(Oa(r,"int32"),n),a=ai(Oa(s,"int32"),n),i=Ai(o),u=oi(i,a);return Oa(u,"int32")}});function Mi(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,a=t[o]||1;(e[e.length-1-s]||1)>1&&1===a&&r.unshift(o)}return r}function Fi(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],o=e.length-r-1,a=e[o];(null==s||1===s&&a>1)&&n.unshift(o)}return n}function Di(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let o=e[e.length-s-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}function Oi(t,e,n){if(at(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=$o(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Lo(t,e,r,n)}let Li;function Pi(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else if(null!=t.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);i=!0}if(null!=fs(os,ko.backendName)){const n={pixels:t},r={numChannels:e};return ko.runKernel(os,n,r)}const[u,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(a)c=t.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=t.data;else if(o||s||i){if(null==Li)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Li=new OffscreenCanvas(1,1).getContext("2d")}else Li=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Li.canvas.width=u,Li.canvas.height=l,Li.drawImage(t,0,0,u,l),c=Li.getImageData(0,0,u,l).data}if(4===e)h=new Int32Array(c);else{const t=u*l;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=c[4*n+t]}return Oi(h,[l,u,e],"int32")}async function zi(t,e=3){let n=null;if(jt().getBool("WRAP_TO_IMAGEBITMAP")&&function(t){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(t){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return Pi(n,e)}async function Bi(t,e){let n=_o(t,"img","toPixels");if(!(t instanceof eo)){const t=n;n=Oa(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${o}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const t=[0,0,0,255];for(let r=0;r<o;r++){const e=a[l*o+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===n.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===o?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[r]=e*i}const e=4*l;u[e+0]=Math.round(t[0]),u[e+1]=Math.round(t[1]),u[e+2]=Math.round(t[2]),u[e+3]=Math.round(t[3])}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const Ui=Do({fromPixels_:Pi});function Vi(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===ut(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const i=t.shape,u=s.slice();u.pop();let l=1;for(let h=o;h<n;++h)l*=i[h],u.push(i[h]);const c=[...Ft(t.shape).map((t=>t/l)),1].slice(0,o);return[u,a,l,c]}function Wi(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(o+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(o+" update.rank != "+(s+t.length-r));for(let a=0;a<s;++a)if(n.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<n.rank-s;++a)if(n.shape[a+s]!==t[a+r])throw new Error(o+` updates.shape[${a+s}] (${n.shape[a+s]}) != shape[${a+s}] (${t[a+s]})`)}function Gi(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Wi(n,e,t)}function Hi(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=n.length;let a=1;for(let u=s;u<o;++u)a*=n[u];const i=s<1?1:s;return{sliceRank:s,numUpdates:ut(e.shape)/i,sliceSize:a,strides:[...Ft(n.slice(0,s)),1],outputSize:ut(n)}}function ji(t,e,n){const r=t.shape.length;st(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),st(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)st(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function qi(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Ki(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Xi(t,e,n,r){const s=[...t];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<n;o++)0===o?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Yi(t,e,n){return n<=t?n:n-(e-1)}function Ji(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Zi(t,e,n,r,s,o,a,i,u){const l=t.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(e.length&&n>0){const u=e[0],l=n+1;c=Qi(a,u,l,r,t),h=tu(i,u,l,s,t),p=Xi(o,u,l,t)}else for(let d=0;d<l;d++)c[d]=nu(a,r,o,t,d,u),h[d]=ru(i,s,o,t,d,u),p[d]=eu(o,d,u);return{begin:c,end:h,strides:p}}function Qi(t,e,n,r,s){const o=[...s],a=Ji(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const s=Yi(e,n,i);let a=r[s];t&1<<s&&(a=0),o[i]=a}return o}function tu(t,e,n,r,s){const o=[...s],a=Ji(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const s=Yi(e,n,i);let a=r[s];t&1<<s&&(a=Number.MAX_SAFE_INTEGER),o[i]=a}for(let i=0;i<o.length;i++){const t=s[i];o[i]<0&&(o[i]+=t),o[i]=Z(0,o[i],s[i])}return o}function eu(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function nu(t,e,n,r,s,o){let a=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=Z(0,a,u-1),a}function ru(t,e,n,r,s,o){let a=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=i>0?Z(0,a,u):Z(-1,a,u-1),a}function su(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function ou(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function au(t,e,n){let r;const s=t.shape.length;let o;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{st(-1!==t,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((e,n)=>e>=0?e:(st(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,o]}function iu(t,e,n,r,s,o,a,i,u){let l;if(null==r?(l=new Array(e.length),l.fill(1)):l=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)c&&0!=(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<t.length;++b){if(0===p.strides[b])throw Error(`strides[${b}] must be non-zero`);const e=!!(p.shrinkAxisMask&1<<b),n=t[b];if(-1===n){g.push(e?1:-1);continue}const r=[p.beginMask&1<<b,p.endMask&1<<b],s=[p.strides[b]>0?0:-1,p.strides[b]>0?n:n-1];if(e&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[b];const o=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(e){const t=p.begin[b]<0?n+p.begin[b]:p.begin[b];if(p.begin[b]=t,p.end[b]=p.begin[b]+1,t<0||t>=n)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=uu(p.begin[b],0,p.strides[b],n,r,s),p.end[b]=uu(p.end[b],1,p.strides[b],n,r,s);const t=1===p.strides[b]&&0===p.begin[b]&&p.end[b]===n;d=d&&t,f=f&&(0===b&&1===p.strides[b]||t)}else d=d&&1===p.strides[b]&&o,f=f&&(0===b&&1===p.strides[b]||o);let a,i=!1;if(p.beginValid&&p.endValid?(a=p.end[b]-p.begin[b],i=!0):e?(a=1,i=!0):o&&n>=0&&(a=p.strides[b]<0?-n:n,i=!0),i){let t;t=0===a||a<0!=p.strides[b]<0?0:Math.trunc(a/p.strides[b])+(a%p.strides[b]!=0?1:0),g.push(t)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){const t=p.finalShapeGatherIndices[b];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((t,e)=>-2!==p.finalShapeGatherIndices[e])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function uu(t,e,n,r,s,o){if(s[e])return n>0?o[e]:o[e+1&1];{const e=t<0?r+t:t;return e<o[0]?o[0]:e>o[1]?o[1]:e}}class lu{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class cu{constructor(){this.classNameMap={}}static getMap(){return null==cu.instance&&(cu.instance=new cu),cu.instance}static register(t){cu.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function hu(t){st(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),st("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),st(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),cu.register(t)}const pu=.1;function du(t,e,n){return null==n&&(n=fu()),mu(t,e,((t,e)=>xu(t,e,n)))}function fu(){return 32===ko.backend.floatPrecision()?.001:pu}function mu(t,e,n){let r=!0;if((Nt(t)||Nt(e))&&(r=!1),Nt(t)&&Nt(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(t)&&Array.isArray(e)){const n=$o(t),r=$o(e);if(!ct(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Nt(t)?t:it(t),o=Nt(e)?e:it(e);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.\nActual:   ${s}.\nExpected: ${o}.`);for(let a=0;a<o.length;++a){const t=s[a],e=o[a];if(!n(t,e))throw new Error(`Arrays differ: actual[${a}] = ${t}, expected[${a}] = ${e}.\nActual:   ${s}.\nExpected: ${o}.`)}"undefined"!=typeof expect&&expect().nothing()}function gu(t,e){t().then((()=>e.fail()),(()=>e())),"undefined"!=typeof expect&&expect().nothing()}function yu(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return Et(t)||Et(t[0])||Et(e)||Et(e[0])?mu(t,n,((t,e)=>t==e)):mu(t,e,((t,e)=>xu(t,e,0)))}function bu(t,e,n){if(null==n&&(n=fu()),!xu(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`);"undefined"!=typeof expect&&expect().nothing()}function xu(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function wu(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function vu(t,e){const n=new Float32Array(t),r=new Float32Array(e);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)}function ku(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?ku(n):t[e]=Us(n)}return t}function Iu(t){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(t),new Promise((t=>{e.addEventListener("loadeddata",(n=>t(e))),e.load()}))}async function Su(t){await t.play(),"requestVideoFrameCallback"in t&&await new Promise((e=>{t.requestVideoFrameCallback(e)}))}const Nu="3.21.0",Tu=Do({add_:function(t,e){let n=_o(t,"a","add"),r=_o(e,"b","add");[n,r]=po(n,r);const s={a:n,b:r};return ko.runKernel(te,s)}}),Cu=Do({floorDiv_:function(t,e){let n=_o(t,"a","floorDiv"),r=_o(e,"b","floorDiv");[n,r]=po(n,r);const s={a:n,b:r};return ko.runKernel(on,s)}}),Eu=Do({div_:function(t,e){let n=_o(t,"a","div"),r=_o(e,"b","div");if([n,r]=po(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Cu(n,r);const s={a:n,b:r};return ko.runKernel(je,s,{})}}),$u=Do({mul_:function(t,e){let n=_o(t,"a","mul"),r=_o(e,"b","mul");[n,r]=po(n,r);const s={a:n,b:r};return ko.runKernel(Hn,s)}}),Ru=Do({sqrt_:function(t){const e={x:_o(t,"x","sqrt","float32")};return ko.runKernel(Rr,e)}}),Au=Do({square_:function(t){const e=_o(t,"x","square");return ko.runKernel("Square",{x:e},{})}}),_u=Do({zerosLike_:function(t){const e={x:_o(t,"x","zerosLike")};return ko.runKernel(rs,e)}});function Mu(t){return st(_t(t),(()=>"The f passed in grad(f) must be a function")),(e,n)=>{const r=_o(e,"x","tf.grad","string_or_numeric"),s=null!=n?_o(n,"dy","tf.grad"):null;return ko.tidy((()=>{const{value:e,grads:n}=ko.gradients((()=>t(r)),[r],s);return null!=s&&ot(e.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),zu(n),n[0]}))}}function Fu(t){return st(_t(t),(()=>"The f passed in grads(f) must be a function")),(e,n)=>{st(Array.isArray(e),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Mo(e,"args","tf.grads","string_or_numeric"),s=null!=n?_o(n,"dy","tf.grads"):null;return ko.tidy((()=>{const{value:e,grads:n}=ko.gradients((()=>t(...r)),r,s);return null!=s&&ot(e.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),zu(n),n}))}}function Du(t){return st(_t(t),(()=>"The f passed in valueAndGrad(f) must be a function")),(e,n)=>{st(e instanceof eo,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),st(null==n||n instanceof eo,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=ko.gradients((()=>t(e)),[e],n);return zu(r),{grad:r[0],value:s}}}function Ou(t){return st(_t(t),(()=>"The f passed in valueAndGrads(f) must be a function")),(e,n)=>{st(Array.isArray(e)&&e.every((t=>t instanceof eo)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),st(null==n||n instanceof eo,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=ko.gradients((()=>t(...e)),e,n);return null!=n&&ot(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),zu(r.grads),r}}function Lu(t,e){st(_t(t),(()=>"The f passed in variableGrads(f) must be a function")),st(null==e||Array.isArray(e)&&e.every((t=>t instanceof ro)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in ko.registeredVariables)e.push(ko.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;e=e.filter((t=>t.trainable)),st(e.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:o,grads:a}=ko.gradients(t,e,null,!0);st(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),st(0===o.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`));const i={};return e.forEach(((t,e)=>{null!=a[e]&&(i[t.name]=a[e])})),null!=r&&r.forEach((t=>i[t.name]=null)),{value:o,grads:i}}function Pu(t){return ko.customGrad(t)}function zu(t){if(t.filter((t=>null==t)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Bu(t,e){if((Nt(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Nt(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Lo(t,[],[],e)}class Uu extends lu{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return gi(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Lu(t,e)}dispose(){null!=this.iterations_&&gi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Bu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Uu,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Vu extends Uu{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ko.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ko.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:mi((()=>_u(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:mi((()=>_u(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const o=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;mi((()=>{const t=Tu($u(o,this.rho),$u(Au(s),1-this.rho)),e=$u(Eu(Ru(Tu(a,this.epsilon)),Ru(Tu(o,this.epsilon))),s),n=Tu($u(a,this.rho),$u(Au(e),1-this.rho));o.assign(t),a.assign(n);const i=Tu($u(e,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(gi(this.accumulatedGrads.map((t=>t.variable))),gi(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function Wu(t,e,n){const r={shape:t,value:e,dtype:n};return ko.runKernel(nn,{},r)}Vu.className="Adadelta",hu(Vu);class Gu extends Uu{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ko.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:mi((()=>Wu(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const o=this.accumulatedGrads[n].variable;mi((()=>{const t=Tu(o,Au(s));o.assign(t);const e=Tu($u(Eu(s,Ru(Tu(t,ko.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&gi(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Gu.className="Adagrad",hu(Gu);const Hu=Do({pow_:function(t,e){let n=_o(t,"base","pow"),r=_o(e,"exp","pow");[n,r]=po(n,r);const s={a:n,b:r};return ko.runKernel(nr,s)}}),ju=Do({sub_:function(t,e){let n=_o(t,"a","sub"),r=_o(e,"b","sub");[n,r]=po(n,r);const s={a:n,b:r};return ko.runKernel(jr,s)}});class qu extends Uu{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],mi((()=>{this.accBeta1=Bu(e).variable(),this.accBeta2=Bu(n).variable()})),null==r&&(this.epsilon=ko.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);mi((()=>{const n=ju(1,this.accBeta1),r=ju(1,this.accBeta2);e.forEach(((e,s)=>{const o=ko.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:mi((()=>_u(o).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:mi((()=>_u(o).variable(!1)))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=Tu($u(i,this.beta1),$u(a,1-this.beta1)),c=Tu($u(u,this.beta2),$u(Au(a),1-this.beta2)),h=Eu(l,n),p=Eu(c,r);i.assign(l),u.assign(c);const d=Tu($u(Eu(h,Tu(Ru(p),this.epsilon)),-this.learningRate),o);o.assign(d)})),this.accBeta1.assign($u(this.accBeta1,this.beta1)),this.accBeta2.assign($u(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&gi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&gi(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),mi((()=>{this.accBeta1.assign(Hu(this.beta1,this.iterations_+1)),this.accBeta2.assign(Hu(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}qu.className="Adam",hu(qu);const Ku=Do({abs_:function(t){const e=_o(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return ko.runKernel(Se,t)}{const t={x:e};return ko.runKernel(Jt,t)}}}),Xu=Do({maximum_:function(t,e){let n=_o(t,"a","maximum"),r=_o(e,"b","maximum");[n,r]=po(n,r),"bool"===n.dtype&&(n=Oa(n,"int32"),r=Oa(r,"int32")),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(Mn,s)}});class Yu extends Uu{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],mi((()=>{this.iteration=Bu(0).variable(),this.accBeta1=Bu(e).variable()})),null==r&&(this.epsilon=ko.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);mi((()=>{const n=ju(1,this.accBeta1),r=Eu(-this.learningRate,Tu($u(this.iteration,this.decay),1));e.forEach(((e,s)=>{const o=ko.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:_u(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:_u(o).variable(!1)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=Tu($u(i,this.beta1),$u(a,1-this.beta1)),c=$u(u,this.beta2),h=Ku(a),p=Xu(c,h);i.assign(l),u.assign(p);const d=Tu($u(Eu(r,n),Eu(l,Tu(p,this.epsilon))),o);o.assign(d)})),this.iteration.assign(Tu(this.iteration,1)),this.accBeta1.assign($u(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&gi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&gi(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Yu.className="Adamax",hu(Yu);class Ju extends Uu{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=ko.registeredVariables[e];mi((()=>{const t=Tu($u(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=yi(Bu(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Ju.className="SGD",hu(Ju);class Zu extends Ju{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Bu(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ko.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:mi((()=>_u(r).variable(t)))}}const s=this.accumulations[n].variable,o=Array.isArray(t)?t[n].tensor:t[e];null!=o&&mi((()=>{let t;const e=Tu($u(this.m,s),o);t=this.useNesterov?Tu($u(this.c,Tu(o,$u(e,this.m))),r):Tu($u(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&gi(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Zu.className="Momentum",hu(Zu);class Qu extends Uu{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ko.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=ko.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:mi((()=>_u(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:mi((()=>_u(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:mi((()=>_u(r).variable(s)))});const o=Array.isArray(t)?t[n].tensor:t[e];if(null==o)return;const a=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;mi((()=>{const t=Tu($u(a,this.decay),$u(Au(o),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Tu($u(e,this.decay),$u(o,1-this.decay)),u=Eu($u(o,this.learningRate),Ru(ju(t,Tu(Au(s),this.epsilon)))),l=Tu($u(i,this.momentum),u);a.assign(t),e.assign(s),i.assign(l);const c=ju(r,l);r.assign(c)}else{const t=Tu($u(a,this.decay),$u(Au(o),1-this.decay)),e=Tu($u(i,this.momentum),Eu($u(o,this.learningRate),Ru(Tu(t,this.epsilon))));a.assign(t),i.assign(e);const n=ju(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&gi(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&gi(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&gi(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Qu.className="RMSProp",hu(Qu);class tl{static sgd(t){return new Ju(t)}static momentum(t,e,n=!1){return new Zu(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Qu(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new qu(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Vu(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Yu(t,e,n,r,s)}static adagrad(t,e=.1){return new Gu(t,e)}}const el=Do({acos_:function(t){const e={x:_o(t,"x","acos")};return ko.runKernel(Zt,e)}}),nl=Do({acosh_:function(t){const e={x:_o(t,"x","acosh")};return ko.runKernel(Qt,e)}}),rl=Do({addN_:function(t){st(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),st(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>_o(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!ct(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return ko.runKernel(ee,r)}}),sl=Do({all_:function(t,e=null,n=!1){const r={x:_o(t,"x","all","bool")},s={axis:e,keepDims:n};return ko.runKernel(ne,r,s)}}),ol=Do({any_:function(t,e=null,n=!1){const r={x:_o(t,"x","any","bool")},s={axis:e,keepDims:n};return ko.runKernel(re,r,s)}}),al=Do({argMax_:function(t,e=0){const n={x:_o(t,"x","argMax")},r={axis:e};return ko.runKernel(se,n,r)}}),il=Do({argMin_:function(t,e=0){const n={x:_o(t,"x","argMin")},r={axis:e};return ko.runKernel(oe,n,r)}}),ul=Do({asin_:function(t){const e={x:_o(t,"x","asin")};return ko.runKernel(ae,e)}}),ll=Do({asinh_:function(t){const e={x:_o(t,"x","asinh")};return ko.runKernel(ie,e)}}),cl=Do({atan_:function(t){const e={x:_o(t,"x","atan")};return ko.runKernel(ue,e)}}),hl=Do({atan2_:function(t,e){let n=_o(t,"a","atan2"),r=_o(e,"b","atan2");[n,r]=po(n,r);const s={a:n,b:r};return ko.runKernel(ce,s)}}),pl=Do({atanh_:function(t){const e={x:_o(t,"x","atanh")};return ko.runKernel(le,e)}});function dl(t,e,n,r,s="NHWC",o){return gl(t,[...e,t[3]],n,o,r,null,null,Nl(s))}function fl(t,e,n,r,s,o,a="channelsLast"){const[i,u]=xl(e);let l;if("channelsLast"===a)l=[i,u,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);l=[i,u,t[1],t[1]]}return gl(t,l,n,r,s,o,!1,a)}function ml(t,e,n,r,s,o,a="NDHWC"){const[i,u,l]=wl(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[i,u,l,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[i,u,l,t[1],t[1]]}return yl(t,c,n,r,s,!1,h,o)}function gl(t,e,n,r,s,o,a=!1,i="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,h,l,c]=t}const[p,d,,f]=e,[m,g]=xl(n),[y,b]=xl(r),x=vl(p,y),w=vl(d,b),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,r,s,o,a,i,u){let l,c,h;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=bl(t,e,n));const o=t[1];return[kl((t[0]-e+2*r)/n+1,s),kl((o-e+2*r)/n+1,s)]}([e,n],o,r,t,i);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+o-e),i=Math.max(0,(h-1)*s+a-n),u=Math.floor(t/2),p=t-u,d=Math.floor(i/2);l={top:u,bottom:p,left:d,right:i-d,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const p="channelsLast"===u?t[1][0]:t[2][0],d="channelsLast"===u?t[1][1]:t[2][1],f="channelsLast"===u?t[2][0]:t[3][0],m="channelsLast"===u?t[2][1]:t[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=kl((e-o+p+d)/r+1,i),h=kl((n-a+f+m)/s+1,i)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,w,o,i),S=a?f*h:f;let N;return"channelsFirst"===i?N=[u,S,k,I]:"channelsLast"===i&&(N=[u,k,I,S]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:t,outShape:N,filterShape:e}}function yl(t,e,n,r,s,o=!1,a="channelsLast",i){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[u,l,c,h,p]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[u,p,l,c,h]=t}const[d,f,m,,g]=e,[y,b,x]=wl(n),[w,v,k]=wl(r),I=vl(d,w),S=vl(f,v),N=vl(m,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:$}=function(t,e,n,r,s,o,a,i,u,l,c){let h,p,d,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const o=function(t,e,n,r,s,o){null==s&&(s=bl(t,e,r));const a=t[1],i=t[2];return[kl((t[0]-e+2*s)/r+1,o),kl((a-e+2*s)/r+1,o),kl((i-e+2*s)/r+1,o),1]}([e,n,r,1],i,0,s,t,c);p=o[0],d=o[1],f=o[2]}else if("same"===t){p=Math.ceil(e/s),d=Math.ceil(n/o),f=Math.ceil(r/a);const t=(p-1)*s+i-e,c=(d-1)*o+u-n,m=(f-1)*a+l-r,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-i+1)/s),d=Math.ceil((n-u+1)/o),f=Math.ceil((r-l+1)/a)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,l,c,h,y,b,x,I,S,N,i),R=o?g*p:g;let A;return"channelsFirst"===a?A=[u,R,C,E,$]:"channelsLast"===a&&(A=[u,C,E,$,R]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:$,outChannels:R,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:A,filterShape:e}}function bl(t,e,n,r=1){const s=vl(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function xl(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function wl(t){return"number"==typeof t?[t,t,t]:t}function vl(t,e){return e<=1?t:t+(t-1)*(e-1)}function kl(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Il(t){const[e,n,r]=xl(t);return 1===e&&1===n&&1===r}function Sl(t,e){return Il(t)||Il(e)}function Nl(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function Tl(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)st(ht(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`));else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach((e=>{e.forEach((e=>{st(ht(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`))}))}))}}}const Cl=Do({reshape_:function(t,e){const n={x:_o(t,"x","reshape","string_or_numeric")},r={shape:e};return ko.runKernel(hr,n,r)}}),El=Do({avgPool_:function(t,e,n,r,s){const o=_o(t,"x","avgPool","float32");st(Sl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=o,i=!1;3===o.rank&&(i=!0,a=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),st(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),Tl("avgPool",r,s);const u={x:a},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=ko.runKernel(he,u,l);return c=Oa(c,o.dtype),i?Cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),$l=Do({avgPool3d_:function(t,e,n,r,s,o="NDHWC"){const a=_o(t,"x","avgPool3d","float32");let i=a,u=!1;4===a.rank&&(u=!0,i=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),st(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),st("NDHWC"===o,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`)),Tl("avgPool3d",r,s);const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o};let h=ko.runKernel(de,l,c);return h=Oa(h,i.dtype),u?Cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Rl=Do({concat_:function(t,e=0){st(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=Mo(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return La(n[0]);const r=n,s={axis:e};return ko.runKernel(Ne,r,s)}}),Al=Do({sigmoid_:function(t){const e={x:_o(t,"x","sigmoid","float32")};return ko.runKernel(Er,e)}}),_l=Do({slice_:function(t,e,n){const r=_o(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:n};return ko.runKernel(Sr,s,o)}}),Ml=Do({tanh_:function(t){const e={x:_o(t,"x","tanh","float32")};return ko.runKernel(Kr,e)}}),Fl=Do({basicLSTMCell_:function(t,e,n,r,s,o){const a=_o(t,"forgetBias","basicLSTMCell"),i=_o(e,"lstmKernel","basicLSTMCell"),u=_o(n,"lstmBias","basicLSTMCell"),l=_o(r,"data","basicLSTMCell"),c=_o(s,"c","basicLSTMCell"),h=_o(o,"h","basicLSTMCell"),p=Rl([l,h],1),d=oi(p,i),f=Tu(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=_l(f,[0,0],y),x=_l(f,[0,g],y),w=_l(f,[0,2*g],y),v=_l(f,[0,3*g],y),k=Tu($u(Al(b),Ml(x)),$u(c,Al(Tu(a,w))));return[k,$u(Ml(k),Al(v))]}}),Dl=Do({batchToSpaceND_:function(t,e,n){const r=_o(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));st(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),st(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),st(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const o={x:r},a={blockShape:e,crops:n};return ko.runKernel(ge,o,a)}}),Ol=Do({batchNorm_:function(t,e,n,r,s,o){null==o&&(o=.001);const a=_o(t,"x","batchNorm"),i=_o(e,"mean","batchNorm"),u=_o(n,"variance","batchNorm");let l,c;null!=s&&(l=_o(s,"scale","batchNorm")),null!=r&&(c=_o(r,"offset","batchNorm")),st(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),st(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),st(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?Cl(t,[1,1,1,t.size]):2===t.rank?Cl(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),p={x:h,scale:l,offset:c,mean:i,variance:u},d={varianceEpsilon:o},f=ko.runKernel(an,p,d);return Cl(f,a.shape)}}),Ll=Do({batchNorm2d_:function(t,e,n,r,s,o){const a=_o(t,"x","batchNorm"),i=_o(e,"mean","batchNorm"),u=_o(n,"variance","batchNorm");let l,c;return null!=s&&(l=_o(s,"scale","batchNorm")),null!=r&&(c=_o(r,"offset","batchNorm")),st(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),st(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),st(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&st(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&st(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ol(a,i,u,c,l,o)}}),Pl=Do({batchNorm3d_:function(t,e,n,r,s,o){const a=_o(t,"x","batchNorm"),i=_o(e,"mean","batchNorm"),u=_o(n,"variance","batchNorm");let l,c;return null!=s&&(l=_o(s,"scale","batchNorm")),null!=r&&(c=_o(r,"offset","batchNorm")),st(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),st(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),st(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&st(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&st(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ol(a,i,u,c,l,o)}}),zl=Do({batchNorm4d_:function(t,e,n,r,s,o){const a=_o(t,"x","batchNorm"),i=_o(e,"mean","batchNorm"),u=_o(n,"variance","batchNorm");let l,c;return null!=s&&(l=_o(s,"scale","batchNorm")),null!=r&&(c=_o(r,"offset","batchNorm")),st(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),st(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),st(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&st(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&st(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ol(a,i,u,c,l,o)}}),Bl=Do({bincount_:function(t,e,n){const r=_o(t,"x","bincount"),s=_o(e,"weights","bincount");st("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),st(n>=0,(()=>`size must be non-negative, but got ${n}.`)),st(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const o={x:r,weights:s},a={size:n};return ko.runKernel(ye,o,a)}}),Ul=Do({broadcastArgs_:function(t,e){const n=_o(t,"s0","broadcastArgs","int32"),r=_o(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return ko.runKernel(xe,s)}}),Vl=Do({broadcastTo_:function(t,e){let n=_o(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Cl(n,t)}const s=n.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(s[u]===e[u])o[u]=1;else if(1!==n.shape[u])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===o.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return La(n);const a={x:n},i={reps:o};return ko.runKernel(Xr,a,i)}}),Wl=Do({ceil_:function(t){const e={x:_o(t,"x","ceil","float32")};return ko.runKernel(ve,e)}}),Gl=Do({clipByValue_:function(t,e,n){const r=_o(t,"x","clipByValue");if(st(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`)),e===n)return Wu(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:n};return ko.runKernel(ke,s,o)}}),Hl=Do({concat1d_:function(t){return Rl(t,0)}}),jl=Do({concat2d_:function(t,e){return Rl(t,e)}}),ql=Do({concat3d_:function(t,e){return Rl(t,e)}}),Kl=Do({concat4d_:function(t,e){return Rl(t,e)}}),Xl=Do({conv2d_:function(t,e,n,r,s="NHWC",o=[1,1],a){const i=_o(t,"x","conv2d","float32"),u=_o(e,"filter","conv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),st(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),st(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Tl("conv2d",r,a);const h="NHWC"===s?l.shape[3]:l.shape[1];st(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),st(Sl(n,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=ko.runKernel(Te,p,d);return c?Cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Yl=Do({conv1d_:function(t,e,n,r,s="NWC",o=1,a){const i=_o(t,"x","conv1d"),u=_o(e,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=Cl(i,[1,i.shape[0],i.shape[1]])),st(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),st(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Tl("conv1d",r,a),st(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),st(Sl(n,o),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`)),st("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Cl(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Cl(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Xl(p,h,[1,n],r,"NHWC",[1,o],a);return Cl(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Jl=Do({conv2DBackpropInput_:function(t,e,n,r,s,o="NHWC",a){st(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,u=e,l=!1;3===e.rank&&(l=!0,u=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),st(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),st(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),st(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===o?i[3]:i[1],h="NHWC"===o?u.shape[3]:u.shape[1];st(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),st(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Tl("conv2dDerInput",s,a);const p={dy:u,filter:n},d={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},f=ko.runKernel(Ee,p,d);return l?Cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Zl=Do({conv2dTranspose_:function(t,e,n,r,s,o){const a=_o(t,"x","conv2dTranspose"),i=_o(e,"filter","conv2dTranspose");return Jl(n,a,i,r,s,"NHWC",o)}}),Ql=Do({conv3d_:function(t,e,n,r,s="NDHWC",o=[1,1,1]){const a=_o(t,"x","conv3d"),i=_o(e,"filter","conv3d");let u=a,l=!1;4===a.rank&&(l=!0,u=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),st(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),st(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),st(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),st(Sl(n,o),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),st("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:i},h={strides:n,pad:r,dataFormat:s,dilations:o},p=ko.runKernel($e,c,h);return l?Cl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),tc=Do({conv3DBackpropInput_:function(t,e,n,r,s){st(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,a=e,i=!1;4===e.rank&&(i=!0,a=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const u=o[4],l=a.shape[4];st(5===o.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`)),st(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),st(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),st(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),st(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:o},p=ko.runKernel(Ae,c,h);return i?Cl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ec=Do({conv3dTranspose_:function(t,e,n,r,s){const o=_o(t,"x","conv3dTranspose"),a=_o(e,"filter","conv3dTranspose");return tc(n,o,a,r,s)}}),nc=Do({cos_:function(t){const e={x:_o(t,"x","cos","float32")};return ko.runKernel(_e,e)}}),rc=Do({cosh_:function(t){const e={x:_o(t,"x","cosh","float32")};return ko.runKernel(Me,e)}}),sc=Do({cumprod_:function(t,e=0,n=!1,r=!1){const s={x:_o(t,"x","cumprod")},o={axis:e,exclusive:n,reverse:r};return ko.runKernel(Fe,s,o)}}),oc=Do({cumsum_:function(t,e=0,n=!1,r=!1){const s={x:_o(t,"x","cumsum")},o={axis:e,exclusive:n,reverse:r};return ko.runKernel(De,s,o)}}),ac=Do({denseBincount_:function(t,e,n,r=!1){const s=_o(t,"x","denseBincount"),o=_o(e,"weights","denseBincount");st("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),st(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),st(n>=0,(()=>`size must be non-negative, but got ${n}.`)),st(o.size===s.size||0===o.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`));const a={x:s,weights:o},i={size:n,binaryOutput:r};return ko.runKernel(Le,a,i)}}),ic=Do({depthToSpace_:function(t,e,n="NHWC"){const r=_o(t,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],o="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];st(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`)),st(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),st(o*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),st(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:e,dataFormat:n};return ko.runKernel(Pe,i,u)}}),uc=Do({depthwiseConv2d_:function(t,e,n,r,s="NHWC",o=[1,1],a){const i=_o(t,"x","depthwiseConv2d","float32"),u=_o(e,"filter","depthwiseConv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),st(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),st(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];st(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Tl("depthwiseConv2d",r,a);const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=ko.runKernel(ze,p,d);return c?Cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),lc=Do({diag_:function(t){const e={x:_o(t,"x","diag")};return ko.runKernel(Ve,e)}}),cc=Do({dilation2d_:function(t,e,n,r,s=[1,1],o="NHWC"){const a=_o(t,"x","dilation2d"),i=_o(e,"filter","dilation2d");st(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),st(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),st("NHWC"===o,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`));let u=a,l=!1;3===a.rank&&(u=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);const c={x:u,filter:i},h={strides:n,pad:r,dilations:s},p=ko.runKernel(We,c,h);return l?Cl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),hc=Do({equal_:function(t,e){let n=_o(t,"a","equal","string_or_numeric"),r=_o(e,"b","equal","string_or_numeric");[n,r]=po(n,r),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(Je,s)}}),pc=Do({where_:function(t,e,n){const r=_o(e,"a","where"),s=_o(n,"b","where"),o=_o(t,"condition","where","bool"),a=Di(Di(o.shape,r.shape),s.shape),i={condition:Vl(o,a),t:Vl(r,a),e:Vl(s,a)};return ko.runKernel(kr,i)}}),dc=Do({divNoNan_:function(t,e){let n=_o(t,"a","div"),r=_o(e,"b","div");[n,r]=po(n,r);const s=Eu(n,r),o=_u(s),a=hc(r,o);return pc(a,o,s)}}),fc=Do({dot_:function(t,e){const n=_o(t,"t1","dot"),r=_o(e,"t2","dot");st(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(st(s===o,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`)),1===n.rank&&1===r.rank){const t=Cl(n,[1,-1]),e=Cl(r,[-1,1]),s=oi(t,e);return Cl(s,[])}if(1===n.rank&&2===r.rank){const t=Cl(n,[1,-1]),e=Cl(r,[r.shape[0],r.shape[1]]),s=oi(t,e);return Cl(s,[s.size])}if(2===n.rank&&1===r.rank){const t=Cl(r,[-1,1]),e=oi(n,t);return Cl(e,[e.size])}{const t=Cl(r,[r.shape[0],r.shape[1]]);return oi(n,t)}}}),mc=Do({einsum_:function(t,...e){const n=e.map(((t,e)=>_o(t,`tensors${e}`,"einsum"))),r={equation:t};return ko.runKernel(qe,n,r)}}),gc=Do({elu_:function(t){const e={x:_o(t,"x","elu","float32")};return ko.runKernel(Ke,e)}}),yc=Do({erf_:function(t){let e=_o(t,"x","erf");st("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Oa(e,"float32"));const n={x:e};return ko.runKernel(Ye,n)}});function bc(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function xc(t,e,n){const r=t.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(t[o++]):s.push(e[a++]);return s}function wc(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function vc(t,e){return xc(t,e.map((t=>1)),e)}function kc(t,e,n){st(bc(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function Ic(t,e){if(bc(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function Sc(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Nc(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const Tc=Do({max_:function(t,e=null,n=!1){const r={x:_o(t,"x","max")},s={reductionIndices:e,keepDims:n};return ko.runKernel(_n,r,s)}}),Cc=Do({min_:function(t,e=null,n=!1){const r={x:_o(t,"x","min")},s={axis:e,keepDims:n};return ko.runKernel(Bn,r,s)}}),Ec=Do({sum_:function(t,e=null,n=!1){let r=_o(t,"x","sum");"bool"===r.dtype&&(r=Oa(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return ko.runKernel(Ar,s,o)}});function $c(t,e,n=null){if(0===t.rank)return Ku(t);if(1!==t.rank&&null===n)return $c(Cl(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Ec(Ku(t),n);if(e===1/0)return Tc(Ku(t),n);if(e===-1/0)return Cc(Ku(t),n);if("euclidean"===e||2===e)return Ru(Ec(Hu(Ku(t),Bu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Tc(Ec(Ku(t),n[0]),n[1]-1);if(e===1/0)return Tc(Ec(Ku(t),n[1]),n[0]);if(e===-1/0)return Cc(Ec(Ku(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Ru(Ec(Au(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Rc=Do({norm_:function(t,e="euclidean",n=null,r=!1){const s=$c(t=_o(t,"x","norm"),e,n);let o=s.shape;if(r){const e=bt(n,t.shape);o=vc(s.shape,e)}return Cl(s,o)}}),Ac=Do({euclideanNorm_:function(t,e=null,n=!1){return Rc(t,"euclidean",e,n)}}),_c=Do({exp_:function(t){const e={x:_o(t,"x","exp")};return ko.runKernel(Ze,e)}}),Mc=Do({expandDims_:function(t,e=0){const n=_o(t,"x","expandDims","string_or_numeric");st(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:e};return ko.runKernel(Qe,r,s)}}),Fc=Do({expm1_:function(t){const e={x:_o(t,"x","expm1")};return ko.runKernel(tn,e)}}),Dc=Do({tile_:function(t,e){const n=_o(t,"x","tile","string_or_numeric");st(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r={x:n},s={reps:e};return ko.runKernel(Xr,r,s)}}),Oc=Do({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Da([t,e],r),o=t<=e?t:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=Cl(s.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return Dc(Mc(a,0),[n[0],1,1]);if(2===n.length)return Dc(Mc(Mc(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Dc(Mc(Mc(Mc(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Lc=Do({floor_:function(t){const e={x:_o(t,"x","floor","float32")};return ko.runKernel(sn,e)}}),Pc=Do({gather_:function(t,e,n=0,r=0){const s={x:_o(t,"x","gather"),indices:_o(e,"indices","gather","int32")},o={axis:n,batchDims:r};return ko.runKernel(un,s,o)}}),zc=Do({greater_:function(t,e){let n=_o(t,"a","greater","string_or_numeric"),r=_o(e,"b","greater","string_or_numeric");[n,r]=po(n,r),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(cn,s)}}),Bc=Do({greaterEqual_:function(t,e){let n=_o(t,"a","greaterEqual","string_or_numeric"),r=_o(e,"b","greaterEqual","string_or_numeric");[n,r]=po(n,r),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(hn,s)}}),Uc=Do({isFinite_:function(t){const e={x:_o(t,"x","isFinite")};return ko.runKernel(mn,e)}}),Vc=Do({isInf_:function(t){const e={x:_o(t,"x","isInf")};return ko.runKernel(gn,e)}}),Wc=Do({isNaN_:function(t){const e={x:_o(t,"x","isNaN")};return ko.runKernel(yn,e)}}),Gc=Do({leakyRelu_:function(t,e=.2){const n={x:_o(t,"x","leakyRelu")},r={alpha:e};return ko.runKernel(bn,n,r)}}),Hc=Do({less_:function(t,e){let n=_o(t,"a","less","string_or_numeric"),r=_o(e,"b","less","string_or_numeric");[n,r]=po(n,r),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(xn,s)}}),jc=Do({lessEqual_:function(t,e){let n=_o(t,"a","lessEqual","string_or_numeric"),r=_o(e,"b","lessEqual","string_or_numeric");[n,r]=po(n,r),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(wn,s)}});function qc(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return ko.runKernel(vn,{},r)}const Kc=Do({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const o=_o(t,"x","localResponseNormalization");st(4===o.rank||3===o.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`)),st(ht(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=o,i=!1;3===o.rank&&(i=!0,a=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},l={depthRadius:e,bias:n,alpha:r,beta:s},c=ko.runKernel(Rn,u,l);return i?Cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Xc=Do({log_:function(t){const e={x:_o(t,"x","log","float32")};return ko.runKernel(kn,e)}}),Yc=Do({log1p_:function(t){const e={x:_o(t,"x","log1p")};return ko.runKernel(In,e)}}),Jc=Do({softplus_:function(t){const e={x:_o(t,"x","softplus")};return ko.runKernel($r,e)}}),Zc=Do({logSigmoid_:function(t){const e=_o(t,"x","logSigmoid"),n=Pu((t=>({value:$i(Jc($i(t))),gradFunc:e=>$u(e,Al($i(t)))})));return n(e)}}),Qc=Do({logSoftmax_:function(t,e=-1){const n=_o(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r=Pu(((t,n)=>{const r=Tc(t,e,!0),s=ju(t,r),o=ju(Oa(s,"float32"),Xc(Ec(_c(s),e,!0)));return n([o]),{value:o,gradFunc:(t,n)=>{const[r]=n,s=_c(r);return ju(t,$u(Ec(t,e,!0),s))}}}));return r(n)}}),th=Do({logSumExp_:function(t,e=null,n=!1){const r=_o(t,"x","logSumExp"),s=bt(e,r.shape),o=Tc(r,s,!0),a=ju(r,o),i=_c(a),u=Ec(i,s),l=Xc(u),c=Tu(Cl(o,l.shape),l);if(n){const t=vc(c.shape,s);return Cl(c,t)}return c}}),eh=Do({logicalAnd_:function(t,e){const n=_o(t,"a","logicalAnd","bool"),r=_o(e,"b","logicalAnd","bool");Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(Sn,s)}}),nh=Do({logicalNot_:function(t){const e={x:_o(t,"x","logicalNot","bool")};return ko.runKernel(Nn,e)}}),rh=Do({logicalOr_:function(t,e){const n=_o(t,"a","logicalOr","bool"),r=_o(e,"b","logicalOr","bool");Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(Tn,s)}}),sh=Do({logicalXor_:function(t,e){const n=_o(t,"a","logicalXor","bool"),r=_o(e,"b","logicalXor","bool");return Di(n.shape,r.shape),eh(rh(t,e),nh(eh(t,e)))}}),oh=2147483648,ah=Do({searchSorted_:function(t,e,n="left"){const r=_o(t,"sortedSequence","searchSorted"),s=_o(e,"values","searchSorted"),o=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],i=Cl(r,[-1,o]),u=Cl(s,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ut(u.shape)>=oh)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=oh)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:u},c={side:n};return ko.runKernel(vr,l,c)}});function ih(t,e){return ah(t,e,"left")}const uh=Do({maxPool_:function(t,e,n,r,s){const o=_o(t,"x","maxPool");let a=o,i=!1;3===o.rank&&(i=!0,a=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),st(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),st(Sl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Tl("maxPool",r,s);const u={x:a},l={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=ko.runKernel(Fn,u,l);return i?Cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),lh=Do({maxPool3d_:function(t,e=[1,1,1],n,r,s,o="NDHWC"){const a=_o(t,"x","maxPool3d");let i=a,u=!1;4===a.rank&&(u=!0,i=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),st(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),st("NDHWC"===o,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`)),Tl("maxPool3d",r,s);const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o},h=ko.runKernel(On,l,c);return u?Cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ch=Do({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const o={x:_o(t,"x","maxPoolWithArgmax")},a={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},i=ko.runKernel(Pn,o,a);return{result:i[0],indexes:i[1]}}}),hh=Do({mean_:function(t,e=null,n=!1){const r={x:_o(t,"x","mean")},s={axis:e,keepDims:n};return ko.runKernel(zn,r,s)}});function ph(t,e="float32"){if("complex64"===e){const e=ph(t,"float32"),n=ph(t,"float32");return Oo(e,n)}const n=Pt(ut(t),e);return ko.makeTensor(n,t,e)}function dh(t,e="float32"){if("complex64"===e){const e=dh(t,"float32"),n=ph(t,"float32");return Oo(e,n)}const n=Lt(ut(t),e);return ko.makeTensor(n,t,e)}function fh(t,e,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===t)return[];let r=_o(t,"x","meshgrid",t instanceof eo?t.dtype:"float32");if(void 0===e)return[r];let s=_o(e,"y","meshgrid",e instanceof eo?e.dtype:"float32");const o=ut(r.shape),a=ut(s.shape);return"xy"===n?(r=Cl(r,[1,-1]),s=Cl(s,[-1,1]),[oi(dh([a,1],r.dtype),r),oi(s,dh([1,o],s.dtype))]):(r=Cl(r,[-1,1]),s=Cl(s,[1,-1]),[oi(r,dh([1,a],r.dtype)),oi(dh([o,1],s.dtype),s)])}const mh=Do({minimum_:function(t,e){let n=_o(t,"a","minimum"),r=_o(e,"b","minimum");[n,r]=po(n,r),"bool"===n.dtype&&(n=Oa(n,"int32"),r=Oa(r,"int32")),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(Un,s)}}),gh=Do({mirrorPad_:function(t,e,n){st("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=_o(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");st(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let i=0;i<r.rank;i++)st(2===e[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),st(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,(()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`));const o={paddings:e,mode:n},a={x:r};return ko.runKernel(Vn,a,o)}}),yh=Do({mod_:function(t,e){let n=_o(t,"a","mod"),r=_o(e,"b","mod");[n,r]=po(n,r);const s={a:n,b:r};return ko.runKernel(Wn,s)}}),bh=Do({moments_:function(t,e=null,n=!1){const r=bt(e,(t=_o(t,"x","moments")).shape),s=hh(t,r,n);let o=s.shape;n||(o=vc(s.shape,r));const a=Au(ju(Oa(t,"float32"),Cl(s,o)));return{mean:s,variance:hh(a,r,n)}}}),xh=Do({multiRNNCell_:function(t,e,n,r){const s=_o(e,"data","multiRNNCell"),o=Mo(n,"c","multiRNNCell"),a=Mo(r,"h","multiRNNCell");let i=s;const u=[];for(let h=0;h<t.length;h++){const e=t[h](i,o[h],a[h]);u.push(e[0]),u.push(e[1]),i=e[1]}const l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}}),wh=Do({multinomial_:function(t,e,n,r=!1){const s=_o(t,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const i={logits:1===a?Cl(s,[1,-1]):s},u={numSamples:e,seed:n,normalized:r},l=ko.runKernel(Gn,i,u);return 1===a?Cl(l,[l.size]):l}}),vh=Do({notEqual_:function(t,e){let n=_o(t,"a","notEqual","string_or_numeric"),r=_o(e,"b","notEqual","string_or_numeric");[n,r]=po(n,r),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(qn,s)}}),kh=Do({onesLike_:function(t){const e={x:_o(t,"x","onesLike")};return ko.runKernel(Jn,e)}}),Ih=Do({outerProduct_:function(t,e){const n=_o(t,"v1","outerProduct"),r=_o(e,"v2","outerProduct");st(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=Cl(n,[-1,1]),o=Cl(r,[1,-1]);return oi(s,o)}}),Sh=Do({pad_:function(t,e,n=0){const r=_o(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},o={x:r};return ko.runKernel(tr,o,s)}}),Nh=Do({pad1d_:function(t,e,n=0){return st(2===e.length,(()=>"Invalid number of paddings. Must be length of 2.")),Sh(t,[e],n)}}),Th=Do({pad2d_:function(t,e,n=0){return st(2===e.length&&2===e[0].length&&2===e[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Sh(t,e,n)}}),Ch=Do({pad3d_:function(t,e,n=0){return st(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Sh(t,e,n)}}),Eh=Do({pad4d_:function(t,e,n=0){return st(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Sh(t,e,n)}}),$h=Do({spaceToBatchND_:function(t,e,n){const r=_o(t,"x","spaceToBatchND");st(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),st(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),st(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},o={blockShape:e,paddings:n};return ko.runKernel(_r,s,o)}}),Rh=Do({pool_:function(t,e,n,r,s,o,a){null==s&&(s=[1,1]),null==o&&(o=1),0===r&&(r="valid");const i=_o(t,"x","maxPool");let u=i,l=!1;3===i.rank&&(l=!0,u=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),st(Sl(o,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`));const c=fl(u.shape,e,o,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),o=t.concat(r,s),a=e.map(((t,e)=>(t-o[e]%t)%t)),i=s.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[r[e],i[e]])),e.map(((t,e)=>[0,a[e]]))]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?u:$h(u,h,f),b=("avg"===n?()=>El(y,e,o,g,a):()=>uh(y,e,o,g,a))(),x=d?b:Dl(b,h,m);return l?Cl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),Ah=Do({prelu_:function(t,e){const n={x:_o(t,"x","prelu"),alpha:_o(e,"alpha","prelu")};return ko.runKernel(rr,n)}}),_h=Do({prod_:function(t,e=null,n=!1){let r=_o(t,"x","prod");"bool"===r.dtype&&(r=Oa(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return ko.runKernel(sr,s,o)}}),Mh=Do({raggedGather_:function(t,e,n,r){const s={paramsNestedSplits:t.map(((t,e)=>_o(t,`tensors${e}`,"raggedGather","int32"))),paramsDenseValues:_o(e,"paramsDenseValues","raggedGather"),indices:_o(n,"indices","raggedGather","int32")},o={outputRaggedRank:r},a=ko.runKernel(or,s,o);return{outputNestedSplits:a.slice(0,a.length-1),outputDenseValues:a[a.length-1]}}}),Fh=Do({raggedTensorToTensor_:function(t,e,n,r,s){const o=_o(t,"shape","raggedTensorToTensor","int32"),a=_o(e,"values","raggedTensorToTensor"),i={shape:o,values:a,defaultValue:_o(n,"defaultValue","raggedTensorToTensor",a.dtype),rowPartitionTensors:r.map(((t,e)=>_o(t,`tensors${e}`,"raggedTensorToTensor","int32")))},u={rowPartitionTypes:s};return ko.runKernel(ar,i,u)}}),Dh=Do({rand_:function(t,e,n){const r=ut(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let o=0;o<r;o++)s[o]=e();return ko.makeTensor(s,t,n)}});var Oh=n(6377);class Lh{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=s||Math.random();this.random=Oh.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,o;do{r=2*this.random()-1,s=2*this.random()-1,o=r*r+s*s}while(o>=1||0===o);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Ph{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=Oh.alea(s.toString()),this.randn=new Lh(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-o+Math.log(o)),s=this.randu(),s<e||Math.log(s)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class zh{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Oh.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Bh=Do({randomGamma_:function(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const o=new Ph(e,n,r,s),a=Da(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),Uh=Do({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const o=new Lh(e,n,r,!1,s),a=Da(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),Vh=Do({randomStandardNormal_:function(t,e,n){if(null!=e&&"bool"===e)throw new Error(`Unsupported data type ${e}`);return Uh(t,0,1,e,n)}}),Wh=Do({randomUniform_:function(t,e=0,n=1,r="float32",s){const o=Da(t,r),a=new zh(e,n,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}});function Gh(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return ko.runKernel(ir,{},s)}const Hh=Do({reciprocal_:function(t){const e={x:_o(t,"x","reciprocal")};return ko.runKernel(lr,e)}}),jh=Do({relu_:function(t){const e={x:_o(t,"x","relu")};return ko.runKernel(cr,e)}}),qh=Do({relu6_:function(t){const e={x:_o(t,"x","relu6")};return ko.runKernel(gr,e)}}),Kh=Do({reverse_:function(t,e){const n={x:_o(t,"x","reverse")},r={dims:e};return ko.runKernel(yr,n,r)}}),Xh=Do({reverse1d_:function(t){const e=_o(t,"x","reverse");return st(1===e.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`)),Kh(e,0)}}),Yh=Do({reverse2d_:function(t,e){const n=_o(t,"x","reverse");return st(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Kh(n,e)}}),Jh=Do({reverse3d_:function(t,e){const n=_o(t,"x","reverse");return st(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Kh(n,e)}}),Zh=Do({reverse4d_:function(t,e){const n=_o(t,"x","reverse");return st(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Kh(n,e)}}),Qh=Do({round_:function(t){const e={x:_o(t,"x","round")};return ko.runKernel(br,e)}}),tp=Do({rsqrt_:function(t){const e={x:_o(t,"x","rsqrt","float32")};return ko.runKernel(xr,e)}}),ep=Do({selu_:function(t){const e={x:_o(t,"x","selu")};return ko.runKernel(Ir,e)}}),np=Do({separableConv2d_:function(t,e,n,r,s,o=[1,1],a="NHWC"){const i=_o(t,"x","separableConv2d"),u=_o(e,"depthwiseFilter","separableConv2d"),l=_o(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");st(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),st(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),st(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),st(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),st(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];st(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=uc(c,u,r,s,a,o),m=Xl(f,l,1,"valid",a);return h?Cl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),rp=async function(t,e){const n=_o(t,"x","setdiff1d"),r=_o(e,"y","setdiff1d");st(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),st(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),st(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),o=await r.data(),a=new Set(o);let i=0;for(let c=0;c<s.length;c++)a.has(s[c])||i++;const u=new Js([i],n.dtype),l=new Js([i],"int32");for(let c=0,h=0;c<s.length;c++)a.has(s[c])||(u.values[h]=s[c],l.values[h]=c,h++);return[u.toTensor(),l.toTensor()]},sp=Do({sign_:function(t){const e={x:_o(t,"x","sign")};return ko.runKernel(Cr,e)}}),op=Do({sin_:function(t){const e={x:_o(t,"x","sin","float32")};return ko.runKernel(Nr,e)}}),ap=Do({sinh_:function(t){const e={x:_o(t,"x","sinh")};return ko.runKernel(Tr,e)}}),ip=Do({slice1d_:function(t,e,n){const r=_o(t,"x","slice1d");return st(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),_l(r,[e],[n])}}),up=Do({slice2d_:function(t,e,n){const r=_o(t,"x","slice2d");return st(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),_l(r,e,n)}}),lp=Do({slice3d_:function(t,e,n){const r=_o(t,"x","slice3d");return st(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),_l(r,e,n)}}),cp=Do({slice4d_:function(t,e,n){const r=_o(t,"x","slice4d");return st(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),_l(r,e,n)}}),hp=Do({softmax_:function(t,e=-1){const n=_o(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return ko.runKernel(Fr,r,s)}}),pp=Do({fft_:function(t){st("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return ko.runKernel(en,e)}}),dp=Do({ifft_:function(t){st("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return ko.runKernel(dn,e)}}),fp=Do({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=Cl(t,[n,e]);r=dp(s)}else{const s=[n,2*(e-1)],o=Cl(Ri(t),[n,e]),a=Cl(Ei(t),[n,e]),i=Kh(_l(o,[0,1],[n,e-2]),1),u=$u(Kh(_l(a,[0,1],[n,e-2]),1),Bu(-1)),l=Rl([o,i],1),c=Rl([a,u],1),h=Cl(Oo(l,c),[s[0],s[1]]);r=dp(h)}if(r=Ri(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=Cl(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),mp=Do({split_:function(t,e,n=0){const r={x:_o(t,"x","split")},s={numOrSizeSplits:e,axis:n};return ko.runKernel(Mr,r,s)}}),gp=Do({rfft_:function(t,e){st("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),o=t.shape.map((t=>t));o[t.shape.length-1]=e,s=_l(t,r,o),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Rl([t,ph(r)],t.shape.length-1),n=e}else s=t;const o=_u(s),a=Cl(Oo(s,o),[r,n]),i=pp(a),u=Math.floor(n/2)+1,l=Ri(i),c=Ei(i),h=mp(l,[u,n-u],l.shape.length-1),p=mp(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,Cl(Oo(h[0],p[0]),d)}}),yp=Do({squaredDifference_:function(t,e){let n=_o(t,"a","squaredDifference"),r=_o(e,"b","squaredDifference");[n,r]=po(n,r),Di(n.shape,r.shape);const s={a:n,b:r};return ko.runKernel(Br,s,{})}}),bp=Do({squeeze_:function(t,e){const n=_o(t,"x","squeeze","string_or_numeric");return Cl(n,xt(n.shape,e).newShape)}}),xp=Do({stack_:function(t,e=0){const n=Mo(t,"tensors","stack","string_or_numeric");st(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&st(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:e};return ko.runKernel(Qn,r,s)}}),wp=Do({step_:function(t,e=0){const n={x:_o(t,"x","step")},r={alpha:e};return ko.runKernel(ss,n,r)}}),vp=Do({stridedSlice_:function(t,e,n,r,s=0,o=0,a=0,i=0,u=0){const l={x:_o(t,"x","stridedSlice","string_or_numeric")},c={begin:e,end:n,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return ko.runKernel(Vr,l,c)}}),kp=Do({tan_:function(t){const e={x:_o(t,"x","tan","float32")};return ko.runKernel(qr,e)}});function Ip(t,e){at(t);const n=$o(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Lo(t,null,n,e)}function Sp(t,e,n){if(at(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=$o(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Lo(t,e,r,n)}function Np(t,e,n){if(at(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=$o(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Lo(t,e,r,n)}function Tp(t,e,n){if(at(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=$o(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Lo(t,e,r,n)}function Cp(t,e,n){if(at(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=$o(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Lo(t,e=e||r,r,n)}const Ep=Do({topk_:function(t,e=1,n=!0){const r=_o(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:n},[i,u]=ko.runKernel(Yr,o,a);return{values:i,indices:u}}}),$p=Do({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new Lh(e,n,r,!0,s),a=Da(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),Rp=Do({unique_:function(t,e=0){const n=_o(t,"x","unique","string_or_numeric");st(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[o,a]=ko.runKernel(Qr,r,s);return{values:o,indices:a}}}),Ap=Do({unsortedSegmentSum_:function(t,e,n){const r=_o(t,"x","unsortedSegmentSum"),s=_o(e,"segmentIds","unsortedSegmentSum","int32");st(ht(n),(()=>"numSegments must be of dtype int"));const o={x:r,segmentIds:s},a={numSegments:n};return ko.runKernel(es,o,a)}}),_p=Do({unstack_:function(t,e=0){const n=_o(t,"x","unstack","string_or_numeric");st(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:e};return ko.runKernel(ts,r,s)}});function Mp(t,e){return ah(t,e,"right")}function Fp(t,e=!0,n,r){return ko.makeVariable(t,e,n,r)}function Dp(t,e){const n=[];for(let o=0;o<e.length;o++)e[o]&&n.push(o);const r=Da(t,"int32"),s=Da([n.length,t.length],"int32");for(let o=0;o<n.length;o++){const e=r.indexToLoc(n[o]),a=o*t.length;s.values.set(e,a)}return s.toTensor()}const Op=async function(t){const e=_o(t,"condition","whereAsync","bool"),n=await e.data(),r=Dp(e.shape,n);return t!==e&&e.dispose(),r},Lp=async function(t,e,n){const r=_o(t,"tensor","boolMask"),s=_o(e,"mask","boolMask","bool"),o=null==n?0:n,a=s.rank,i=r.shape;st(a>0,(()=>"mask cannot be scalar")),ot(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=o;m<o+a;m++)u*=i[m];const l=i.slice(0,o).concat([u],i.slice(o+a)),c=Cl(r,l),h=Cl(s,[-1]),p=await Op(h),d=bp(p,[1]),f=Pc(c,d,o);return t!==r&&r.dispose(),e!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f},Pp=Do({movingAverage_:function(t,e,n,r,s=!0){const o=_o(t,"v","movingAverage"),a=_o(e,"x","movingAverage"),i=_o(n,"decay","movingAverage");fo(o,a),st(ct(o.shape,a.shape),(()=>"Shape mismatch in v and x"));const u=Bu(1),l=ju(u,i);let c=$u(ju(a,o),l);if(s){st(null!=r,(()=>"When using zeroDebias: true, step is required."));const t=_o(r,"step","movingAverage");c=Eu(c,ju(u,Hu(i,t)))}return Tu(o,c)}}),zp=Do({scatterND_:function(t,e,n){const r=_o(t,"indices","scatterND","int32"),s=_o(e,"updates","scatterND");Gi(s,r,n);const o={indices:r,updates:s},a={shape:n};return ko.runKernel(wr,o,a)}}),Bp=Do({sparseToDense_:function(t,e,n,r=0){const s=_o(t,"sparseIndices","sparseToDense","int32"),o=_o(e,"sparseValues","sparseToDense","string_or_numeric"),a=_o(r,"defaultValue","sparseToDense",o.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const a=e.size;if(0!==e.rank&&(1!==e.rank||a!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,o,n,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},u={outputShape:n};return ko.runKernel(zr,i,u)}}),Up=Do({gatherND_:function(t,e){const n=_o(e,"indices","gatherND","int32"),r={params:_o(t,"x","gatherND","string_or_numeric"),indices:n};return ko.runKernel(ln,r)}}),Vp=Do({dropout_:function(t,e,n,r){const s=_o(t,"x","dropout");if(st("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),st(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof eo?s.clone():s;const o=function(t,e){if(null==e)return t.shape.slice();if(ct(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),a=1-e,i=Eu(Lc(Tu(Wh(o,0,1,"float32",r),a)),a);return $u(s,i)}});function Wp(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Gp(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let o=0;o<t;++o){const a=2*Math.PI*o/(t+r-1);s[o]=e-n*Math.cos(a)}return Ip(s,"float32")}const Hp=async function(t,e,n=1){const r=_o(t,"predictions","inTopK"),s=_o(e,"targets","inTopK");st(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),st(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),ot(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];st(n>0&&n<=o,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`));const a=await r.data(),i=await s.data(),[u,l]=[a.length/o,o],c=wt("bool",u);for(let h=0;h<u;h++){const t=h*l,e=a.subarray(t,t+l),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort(((t,e)=>e.value-t.value)),c[h]=0;for(let s=0;s<n;s++)if(r[s].index===i[h]){c[h]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),Po(c,s.shape,"bool")},jp=Do({conv2DBackpropFilter_:function(t,e,n,r,s,o="NHWC",a){let i=t;3===t.rank&&(i=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2]])),st(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),st(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),st(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===o?i.shape[3]:i.shape[1],c="NHWC"===o?u.shape[3]:u.shape[1];st(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),st(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Tl("conv2dDerFilter",s,a);const h={x:i,dy:u},p={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:n};return ko.runKernel(Ce,h,p)}});function qp(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return $u(t,wp(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Kp(t,e){let n=e;const r=Fi(t.shape,e.shape);return r.length>0&&(n=Ec(n,r)),Cl(n,t.shape)}function Xp(t,e,n,r){if("linear"===e)return t;if("relu"===e)return jh(t);if("elu"===e)return gc(t);if("relu6"===e)return qh(t);if("prelu"===e)return Ah(t,n);if("leakyrelu"===e)return Gc(t,r);if("sigmoid"===e)return Al(t);throw new Error(`Unknown fused activation ${e}.`)}const Yp=(t,e)=>!(t>0)||"linear"===e,Jp=Do({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Yp(ko.state.gradientDepth,u)){st("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Xl(t,e,n,r,s,o,a);return null!=i&&(h=Tu(h,i)),Xp(h,u,l,c)}const h=_o(t,"x","conv2d","float32"),p=_o(e,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Cl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),st(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),st(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Tl("fused conv2d",r,a);const m="NHWC"===s?d.shape[3]:d.shape[1];st(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),st(Sl(n,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`));const g=gl(d.shape,p.shape,n,o,r,a);let y,b;if(null!=i&&(y=_o(i,"bias","fused conv2d"),[y]=po(y,h),"NHWC"===s?Di(g.outShape,y.shape):(st(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),st(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const t=l.shape;if(st(t.length<=1||3===t.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${t.length}.`)),1===t.length)st(1===t[0]||t[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===t.length)try{Di(t,g.outShape)}catch(e){const n=`Error in fused conv2d: PReLU activation weights (${t}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=_o(l,"prelu weights","fused conv2d")}const x=(t,e)=>{st("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[a,i,l,c]=e,h=qp(t,l,u);st(Il(o),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`));const p=[Jl(i.shape,h,a,n,r),jp(i,h,a.shape,n,r)];if(null!=c){const t=Kp(c,h);p.push(t)}return p},w={x:d,filter:p,bias:y,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:c};if(null==i){const t=Pu(((t,e,n)=>{let r=ko.runKernel(us,w,v);return n([e,t,r]),f&&(r=Cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return t(d,p)}{const t=Pu(((t,e,n,r)=>{let s=ko.runKernel(us,w,v);return r([e,t,s,n]),f&&(s=Cl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return t(d,p,y)}}}),Zp=Do({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,o=[1,1],a){let i=t;3===t.rank&&(i=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:n};return ko.runKernel(Be,l,c)}}),Qp=Do({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,o=[1,1],a){let i=e,u=!1;3===e.rank&&(u=!0,i=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:t},h=ko.runKernel(Ue,l,c);return u?Cl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),td=Do({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Yp(ko.state.gradientDepth,u)){let h=uc(t,e,n,r,s,o,a);return null!=i&&(h=Tu(h,i)),Xp(h,u,l,c)}const h=_o(t,"x","depthwiseConv2d","float32"),p=_o(e,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Cl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),st(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),st(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),st(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==o&&(o=[1,1]),st(Sl(n,o),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),Tl("fused depthwiseConv2d",r,a);const m=gl(d.shape,p.shape,n,o,r,a,!0);let g,y;null!=i&&(g=_o(i,"bias","fused conv2d"),[g]=po(g,h),Di(m.outShape,g.shape)),null!=l&&(y=_o(l,"prelu weights","fused depthwiseConv2d"));const b=(t,e)=>{st(Il(o),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[s,i,l,c]=e,h=qp(t,l,u),p=Qp(i.shape,h,s,n,r,o,a),d=Zp(i,h,s.shape,n,r,o,a);return null!=c?[p,d,Kp(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:c};if(null==i){const t=Pu(((t,e,n)=>{let r=ko.runKernel(ls,x,w);return n([e,t,r]),f&&(r=Cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return t(d,p)}{const t=Pu(((t,e,n,r)=>{let s=ko.runKernel(ls,x,w);return r([e,t,s,n]),f&&(s=Cl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return t(d,p,g)}}}),ed=Do({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(!1===Yp(ko.state.gradientDepth,o)){let u=oi(t,e,n,r);return null!=s&&(u=Tu(u,s)),Xp(u,o,a,i)}let u=_o(t,"a","fused matMul"),l=_o(e,"b","fused matMul");[u,l]=po(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=ut(f),y=ut(m);st(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Di(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,d]),x=Cl(u,n?[g,c,p]:[g,p,c]),w=Cl(l,r?[y,d,h]:[y,h,d]);let v,k;null!=s&&(v=_o(s,"bias","fused matMul"),[v]=po(v,u),Di(b,v.shape)),null!=a&&(k=_o(a,"prelu weights","fused matMul"));const I=(t,e)=>{const[a,i,u,l]=e,c=qp(Cl(t,u.shape),u,o);let h,p;return n||r?!n&&r?(h=oi(c,i,!1,!1),p=oi(c,a,!0,!1)):n&&!r?(h=oi(i,c,!1,!0),p=oi(a,c,!1,!1)):(h=oi(i,c,!0,!0),p=oi(c,a,!0,!0)):(h=oi(c,i,!1,!0),p=oi(a,c,!0,!1)),null!=s?[h,p,Kp(l,c)]:[h,p]},S={a:x,b:w,bias:v,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:i};if(null==s){const t=Pu(((t,e,n)=>{const r=ko.runKernel(is,S,N);return n([t,e,r]),{value:Cl(r,b),gradFunc:I}}));return t(x,w)}{const t=Pu(((t,e,n,r)=>{const s=ko.runKernel(is,S,N);return r([t,e,s,n]),{value:Cl(s,b),gradFunc:I}}));return t(x,w,v)}}}),nd=Do({hammingWindow_:function(t){return Gp(t,.54,.46)}}),rd=Do({hannWindow_:function(t){return Gp(t,.5,.5)}}),sd=Do({frame_:function(t,e,n,r=!1,s=0){let o=0;const a=[];for(;o+e<=t.size;)a.push(_l(t,o,e)),o+=n;if(r)for(;o<t.size;){const r=o+e-t.size,i=Rl([_l(t,o,e-r),Wu([r],s)]);a.push(i),o+=n}return 0===a.length?Sp([],[0,e]):Cl(Rl(a),[a.length,e])}}),od=Do({stft_:function(t,e,n,r,s=rd){null==r&&(r=Wp(e));const o=sd(t,e,n),a=$u(o,s(e));return gp(a,r)}}),ad=Do({cropAndResize_:function(t,e,n,r,s="bilinear",o=0){const a=_o(t,"image","cropAndResize"),i=_o(e,"boxes","cropAndResize","float32"),u=_o(n,"boxInd","cropAndResize","int32"),l=i.shape[0];st(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),st(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),st(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),st(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),st(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),st("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:i,boxInd:u},h={method:s,extrapolationValue:o,cropSize:r};return ko.runKernel(Oe,c,h)}}),id=Do({flipLeftRight_:function(t){const e=_o(t,"image","flipLeftRight","float32");st(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return ko.runKernel(rn,n,{})}}),ud=Do({grayscaleToRGB_:function(t){const e=_o(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];st(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),st(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,Dc(e,s)}}),ld=Do({rotateWithOffset_:function(t,e,n=0,r=.5){const s=_o(t,"image","rotateWithOffset","float32");st(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const o={image:s},a={radians:e,fillValue:n,center:r};return ko.runKernel(as,o,a)}});function cd(t,e,n,r,s,o){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==o&&(o=0);const a=t.shape[0];return n=Math.min(n,a),st(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),st(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),st(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),st(1===e.rank,(()=>"scores must be a 1D tensor")),st(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),st(0<=o&&o<=1,(()=>`softNmsSigma must be in [0, 1], but was '${o}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}const hd=Do({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=_o(t,"boxes","nonMaxSuppression","float32"),a=_o(e,"scores","nonMaxSuppression","float32"),i=cd(o,a,n,r,s),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return ko.runKernel(Kn,{boxes:o,scores:a},u)}});function pd(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=n(e,t[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}(t,e,n||dd)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function dd(t,e){return t>e?1:t<e?-1:0}function fd(t,e,n,r,s){return yd(t,e,n,r,s,0)}function md(t,e,n,r,s,o){return yd(t,e,n,r,s,0,!1,o,!0)}function gd(t,e,n,r,s,o){return yd(t,e,n,r,s,o,!0)}function yd(t,e,n,r,s,o,a=!1,i=!1,u=!1){const l=[];for(let g=0;g<e.length;g++)e[g]>s&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(wd);const c=o>0?-.5/o:0,h=[],p=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:o,suppressBeginIndex:a}=e;if(n<s)break;let i=!1;for(let u=h.length-1;u>=a;--u){const n=bd(t,o,h[u]);if(n>=r){i=!0;break}if(e.score=e.score*xd(r,c,n),e.score<=s)break}e.suppressBeginIndex=h.length,i||(e.score===n?(h.push(o),p.push(e.score)):e.score>s&&pd(l,e,wd))}const d=h.length,f=n-d;i&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function bd(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(i-o)*(u-a),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(o,l),g=Math.max(a,c),y=Math.min(i,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function xd(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function wd(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const vd=Do({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=_o(t,"boxes","nonMaxSuppression"),i=_o(e,"scores","nonMaxSuppression"),u=cd(a,i,n,r,s,o),l={boxes:a,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma},h=ko.runKernel(Yn,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),kd=Do({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=_o(t,"boxes","nonMaxSuppression"),i=_o(e,"scores","nonMaxSuppression"),u=cd(a,i,n,r,s,null),l={boxes:a,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:o},h=ko.runKernel(Xn,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Id=Do({resizeBilinear_:function(t,e,n=!1,r=!1){const s=_o(t,"images","resizeBilinear");st(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),st(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),st(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let o=s,a=!1;3===s.rank&&(a=!0,o=Cl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},l=ko.runKernel(fr,i,u);return a?Cl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Sd=Do({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const s=_o(t,"images","resizeNearestNeighbor");st(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),st(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),st("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),st(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let o=s,a=!1;3===s.rank&&(a=!0,o=Cl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},l=ko.runKernel(pr,i,u);return a?Cl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Nd=Do({threshold_:function(t,e="binary",n=!1,r=.5){const s=_o(t,"image","threshold"),o=s.shape[0]*s.shape[1];let a,i,u,l,c=$u(Ip([r]),255);if(st(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),st(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),st("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),st("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===s.shape[2]){[a,i,u]=mp(s,[1,1,1],-1);const t=$u(a,.2989),e=$u(i,.587),n=$u(u,.114);l=Tu(Tu(t,e),n)}else l=t;"otsu"===e&&(c=function(t,e){let n,r,s,o,a,i,u=Ip([-1]),l=Ip([0]),c=Ip([0]);for(let h=0;h<t.size-1;h++){n=_l(t,0,h+1),r=_l(t,h+1),a=Eu(Ec(n),e),i=Eu(Ec(r),e);const p=Ec($u(n,Gh(0,n.size)));s=Eu(p,Ec(n));const d=Wu(r.shape,n.size),f=Tu(Gh(0,r.size),d),m=$u(r,f);o=Eu(Ec(m),Ec(r));const g=ju(s,o),y=ju(s,o),b=$u(a,i);c=$u($u(b,g),y);const x=zc(c,l);l=pc(x,c,l),u=pc(x,Ip([h]),u)}return u}(Bl(Oa(Qh(l),"int32"),Po([]),256),o));const h=n?jc(l,c):zc(l,c);return Oa($u(h,255),"int32")}}),Td=Do({transform_:function(t,e,n="nearest",r="constant",s=0,o){const a=_o(t,"image","transform","float32"),i=_o(e,"transforms","transform","float32");st(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),st(2===i.rank&&(i.shape[0]===a.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),st(null==o||2===o.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`));const u={image:a,transforms:i},l={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return ko.runKernel(Jr,u,l)}}),Cd=Do({bandPart_:function(t,e,n){st(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),st(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=_o(t,"a","bandPart");st(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[o,a]=r.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=o),n<0&&(n=a);const i=Cl(Gh(0,o,1,"int32"),[-1,1]),u=Gh(0,a,1,"int32"),l=ju(i,u),c=eh(jc(l,Bu(+e,"int32")),Bc(l,Bu(-n,"int32"))),h=ph([o,a],r.dtype);return Cl(xp(_p(Cl(r,[-1,o,a])).map((t=>pc(c,t,h)))),s)}}),Ed=Do({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,st(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)st(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=mp(t,t.shape[0],0).map((t=>bp(t,[0])));st(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let s=0;s<t.length;++s)n.push(ko.tidy((()=>{let t=r[s];if(s>0)for(let e=0;e<s;++e){const r=$u(Ec($u(n[e],t)),n[e]);t=ju(t,r)}return Eu(t,Rc(t,"euclidean"))})));return e?xp(n,0):n}});function $d(t,e=!1){return ko.tidy((()=>{st(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=Oc(n),o=La(t);const a=Sp([[1]],[1,1]);let i=La(a);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=o,u=i,l=s;[i,o,s]=ko.tidy((()=>{const e=_l(o,[t,t],[n-t,1]),u=Rc(e),l=_l(o,[t,t],[1,1]),c=pc(zc(l,0),Sp([[-1]]),Sp([[1]])),h=ju(l,$u(c,u)),p=Eu(e,h);i=1===p.shape[0]?La(a):Rl([a,_l(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=$i(Eu(oi(c,h),u)),f=_l(o,[t,0],[n-t,r]),m=$u(d,i),g=Ai(i);if(0===t)o=ju(f,oi(m,oi(g,f)));else{const e=ju(f,oi(m,oi(g,f)));o=Rl([_l(o,[0,0],[t,r]),e],0)}const y=Ai(m),b=_l(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=ju(b,oi(oi(b,i),y));else{const e=ju(b,oi(oi(b,i),y));s=Rl([_l(s,[0,0],[n,t]),e],1)}return[i,o,s]})),gi([e,u,l])}return!e&&n>r&&(s=_l(s,[0,0],[n,r]),o=_l(o,[0,0],[r,r])),[s,o]}))}const Rd=Do({qr_:function(t,e=!1){if(st(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return $d(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=_p(Cl(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],o=[];return r.forEach((t=>{const[n,r]=$d(t,e);s.push(n),o.push(r)})),[Cl(xp(s,0),t.shape),Cl(xp(o,0),t.shape)]}}});var Ad;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ad||(Ad={}));const _d=Do({computeWeightedLoss_:function(t,e,n=Ad.SUM_BY_NONZERO_WEIGHTS){const r=_o(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=_o(e,"weights","computeWeightedLoss"));const o=null==s?r:$u(r,s);if(n===Ad.NONE)return o;if(n===Ad.SUM)return Ec(o);if(n===Ad.MEAN){if(null==s)return hh(o);{const t=r.size/s.size,e=Eu(Ec(o),Ec(s));return t>1?Eu(e,Bu(t)):e}}if(n===Ad.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Eu(Ec(o),Bu(r.size));{const t=$u(s,dh(r.shape)),e=Oa(Ec(vh(t,Bu(0))),"float32");return Eu(Ec(o),e)}}throw Error(`Unknown reduction: ${n}`)}}),Md=Do({absoluteDifference_:function(t,e,n,r=Ad.SUM_BY_NONZERO_WEIGHTS){const s=_o(t,"labels","absoluteDifference"),o=_o(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=_o(n,"weights","absoluteDifference")),ot(s.shape,o.shape,"Error in absoluteDifference: ");const i=Ku(ju(s,o));return _d(i,a,r)}}),Fd=Do({cosineDistance_:function(t,e,n,r,s=Ad.SUM_BY_NONZERO_WEIGHTS){const o=_o(t,"labels","cosineDistance"),a=_o(e,"predictions","cosineDistance");let i=null;null!=r&&(i=_o(r,"weights","cosineDistance")),ot(o.shape,a.shape,"Error in cosineDistance: ");const u=Bu(1),l=ju(u,Ec($u(o,a),n,!0));return _d(l,i,s)}}),Dd=Do({hingeLoss_:function(t,e,n,r=Ad.SUM_BY_NONZERO_WEIGHTS){let s=_o(t,"labels","hingeLoss");const o=_o(e,"predictions","hingeLoss");let a=null;null!=n&&(a=_o(n,"weights","hingeLoss")),ot(s.shape,o.shape,"Error in hingeLoss: ");const i=Bu(1);s=ju($u(Bu(2),s),i);const u=jh(ju(i,$u(s,o)));return _d(u,a,r)}}),Od=Do({huberLoss_:function(t,e,n,r=1,s=Ad.SUM_BY_NONZERO_WEIGHTS){const o=_o(t,"labels","huberLoss"),a=_o(e,"predictions","huberLoss");let i=null;null!=n&&(i=_o(n,"weights","huberLoss")),ot(o.shape,a.shape,"Error in huberLoss: ");const u=Bu(r),l=Ku(ju(a,o)),c=mh(l,u),h=ju(l,c),p=Tu($u(Bu(.5),Au(c)),$u(u,h));return _d(p,i,s)}}),Ld=Do({logLoss_:function(t,e,n,r=1e-7,s=Ad.SUM_BY_NONZERO_WEIGHTS){const o=_o(t,"labels","logLoss"),a=_o(e,"predictions","logLoss");let i=null;null!=n&&(i=_o(n,"weights","logLoss")),ot(o.shape,a.shape,"Error in logLoss: ");const u=Bu(1),l=Bu(r),c=$i($u(o,Xc(Tu(a,l)))),h=$u(ju(u,o),Xc(Tu(ju(u,a),l))),p=ju(c,h);return _d(p,i,s)}}),Pd=Do({meanSquaredError_:function(t,e,n,r=Ad.SUM_BY_NONZERO_WEIGHTS){const s=_o(t,"labels","meanSquaredError"),o=_o(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=_o(n,"weights","meanSquaredError")),ot(s.shape,o.shape,"Error in meanSquaredError: ");const i=yp(s,o);return _d(i,a,r)}}),zd=Do({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Ad.SUM_BY_NONZERO_WEIGHTS){let o=_o(t,"multiClassLabels","sigmoidCrossEntropy");const a=_o(e,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=_o(n,"weights","sigmoidCrossEntropy")),ot(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Bu(r),e=Bu(1),n=Bu(.5);o=Tu($u(o,ju(e,t)),$u(n,t))}const u=function(t,e){const n=_o(t,"labels","sigmoidCrossEntropyWithLogits"),r=_o(e,"logits","sigmoidCrossEntropyWithLogits");ot(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=jh(r),o=$u(r,n),a=Yc(_c($i(Ku(r))));return Tu(ju(s,o),a)}(o,a);return _d(u,i,s)}}),Bd=Do({softmaxCrossEntropy_:function(t,e,n,r=0,s=Ad.SUM_BY_NONZERO_WEIGHTS){let o=_o(t,"onehotLabels","softmaxCrossEntropy");const a=_o(e,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=_o(n,"weights","softmaxCrossEntropy")),ot(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Bu(r),e=Bu(1),n=Bu(o.shape[1]);o=Tu($u(o,ju(e,t)),Eu(t,n))}const u=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const r=Pu(((t,e,r)=>{const s=th(e,[n],!0),o=ju(Oa(e,"float32"),s);r([t,o]);const a=$i($u(o,t));return{value:Ec(a,[n]),gradFunc:(t,e)=>{const[r,s]=e,o=vc(t.shape,[n]);return[$u(Cl(t,o),ju(Oa(r,"float32"),_c(s))),$u(Cl(t,o),ju(_c(s),Oa(r,"float32")))]}}}));return r(t,e)}(o,a);return _d(u,i,s)}}),Ud=Do({sparseFillEmptyRows_:function(t,e,n,r){const s=_o(t,"indices","sparseFillEmptyRows","int32"),o=_o(e,"values","sparseFillEmptyRows"),a=_o(n,"denseShape","sparseFillEmptyRows","int32"),i=_o(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==o.rank)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:i},l=ko.runKernel(Dr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Vd=Do({sparseReshape_:function(t,e,n){const r=_o(t,"inputIndices","sparseReshape","int32"),s=_o(e,"inputShape","sparseReshape","int32"),o=_o(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=ko.runKernel(Or,a);return{outputIndices:i[0],outputShape:i[1]}}}),Wd=Do({sparseSegmentMean_:function(t,e,n){const r=_o(t,"data","sparseSegmentMean"),s=_o(e,"indices","sparseSegmentMean","int32"),o=_o(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return ko.runKernel(Lr,a)}}),Gd=Do({sparseSegmentSum_:function(t,e,n){const r=_o(t,"data","sparseSegmentSum"),s=_o(e,"indices","sparseSegmentSum","int32"),o=_o(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return ko.runKernel(Pr,a)}}),Hd=Do({stringNGrams_:function(t,e,n,r,s,o,a,i){const u=_o(t,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=_o(e,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},h={data:u,dataSplits:l},p=ko.runKernel(Wr,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),jd=Do({stringSplit_:function(t,e,n=!0){const r=_o(t,"input","stringSplit","string"),s=_o(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:n},a={input:r,delimiter:s},i=ko.runKernel(Gr,a,o);return{indices:i[0],values:i[1],shape:i[2]}}}),qd=Do({stringToHashBucketFast_:function(t,e){const n=_o(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ko.runKernel(Hr,s,r)}}),Kd={fft:pp,ifft:dp,rfft:gp,irfft:fp},Xd={hammingWindow:nd,hannWindow:rd,frame:sd,stft:od},Yd={flipLeftRight:id,grayscaleToRGB:ud,resizeNearestNeighbor:Sd,resizeBilinear:Id,rotateWithOffset:ld,cropAndResize:ad,nonMaxSuppression:hd,nonMaxSuppressionAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=_o(t,"boxes","nonMaxSuppressionAsync"),a=_o(e,"scores","nonMaxSuppressionAsync"),i=cd(o,a,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),l=u[0],c=u[1],{selectedIndices:h}=fd(l,c,n,r,s);return o!==t&&o.dispose(),a!==e&&a.dispose(),Ip(h,"int32")},nonMaxSuppressionWithScore:vd,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=_o(t,"boxes","nonMaxSuppressionAsync"),i=_o(e,"scores","nonMaxSuppressionAsync"),u=cd(a,i,n,r,s,o);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const l=await Promise.all([a.data(),i.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=gd(c,h,n,r,s,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ip(p,"int32"),selectedScores:Ip(d)}},nonMaxSuppressionPadded:kd,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=_o(t,"boxes","nonMaxSuppressionAsync"),i=_o(e,"scores","nonMaxSuppressionAsync"),u=cd(a,i,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=md(p,d,l,c,h,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Ip(f,"int32"),validOutputs:Bu(m,"int32")}},threshold:Nd,transform:Td},Jd={bandPart:Cd,gramSchmidt:Ed,qr:Rd},Zd={absoluteDifference:Md,computeWeightedLoss:_d,cosineDistance:Fd,hingeLoss:Dd,huberLoss:Od,logLoss:Ld,meanSquaredError:Pd,sigmoidCrossEntropy:zd,softmaxCrossEntropy:Bd},Qd={sparseFillEmptyRows:Ud,sparseReshape:Vd,sparseSegmentMean:Wd,sparseSegmentSum:Gd},tf={stringNGrams:Hd,stringSplit:jd,stringToHashBucketFast:qd},ef={sgd:tl.sgd,momentum:tl.momentum,adadelta:tl.adadelta,adagrad:tl.adagrad,rmsprop:tl.rmsprop,adamax:tl.adamax,adam:tl.adam},nf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function rf(){return new Promise((t=>nf((()=>t()))))}function sf(t,e){const n=t[0].length;t.forEach(((t,e)=>{st(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),st(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let o=0;o<n;o++)st(o===e||t[o]===r[o],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function of(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var af;function uf(t,e,n){let r=new Array;if(null==n&&null==e)return r;if(null==e)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(null==n)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const o=n[s],a=r[r.length-n.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+t}] = ${o} but shape[${s+t}] = ${i}`)}else r[a]=o}return r}function lf(t){const e={FIRST_DIM_SIZE:af.FIRST_DIM_SIZE,VALUE_ROWIDS:af.VALUE_ROWIDS,ROW_LENGTHS:af.ROW_LENGTHS,ROW_SPLITS:af.ROW_SPLITS,ROW_LIMITS:af.ROW_LIMITS,ROW_STARTS:af.ROW_STARTS},n=[];for(const r of t){if(!(r in e))break;n.push(e[r])}return n}function cf(t){return 0===t.length?0:t[0]===af.FIRST_DIM_SIZE?t.length-1:t.length}function hf(t,e){if(null==t||null==e)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=t[s],r=e[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-t.length}] = ${n} but ragged tensor input.flatValues.shape[${s-t.length}] = ${r}`)}}!function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"}(af||(af={}));const pf=30;function df(t){return t<=pf?t:Mt(t,Math.floor(Math.sqrt(t)))}function ff(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function mf(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function gf(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function yf(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?r?s.push(e[o-1]*t[o]):s.push(t[o]/e[o-1]):s.push(t[o]);return s}function bf(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function xf(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}const wf=1.7580993408473768,vf=1.0507009873554805,kf=.3275911,If=.254829592,Sf=-.284496736,Nf=1.421413741,Tf=-1.453152027,Cf=1.061405429;function Ef(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function $f(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Rf(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function Af(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function _f(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Mf(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Ff(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const o=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}}function Df(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const Of=/->/g;function Lf(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Of,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=t.split("->");st(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const o=r.split(","),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<s.length;++h){const t=s[h];if(!o.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let h=0;h<r.length;++h){const t=r[h];-1===i.indexOf(t)&&","!==t&&i.push(t)}const u=new Array(o.length);for(let h=0;h<a;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let t=0;t<o[h].length;++t)u[h].push(i.indexOf(o[h][t]))}const l=i.length,c=[];for(let h=s.length;h<l;++h)c.push(h);return{allDims:i,summedDims:c,idDims:u}}function Pf(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const r=[];for(let s=0;s<t;++s)-1===n[s]&&r.push(s);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:r}}function zf(t,e,n){const r=new Array(t);for(let s=0;s<n.length;++s){const t=n[s].shape;for(let n=0;n<e[s].length;++n)void 0===r[e[s][n]]?r[e[s][n]]=t[n]:st(r[e[s][n]]===t[n],(()=>`Expected dimension ${r[e[s][n]]} at axis ${n} of input shaped ${JSON.stringify(t)}, but got dimension ${t[n]}`))}}function Bf(t,e){const n=t,r=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<n.length;++a){const t=Vf(e,n[a]);for(const e of t)-1===o.indexOf(e)&&(r[a].push(e),o.push(e))}return{path:n,steps:r}}function Uf(t){return t.every(((t,e)=>t===e))}function Vf(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function Wf(t,e,n=0){let r=[];if("number"==typeof e)st(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);st(s<=1,(()=>"There should be only one negative value in split array."));const o=e.indexOf(-1);if(-1!==o){const r=e.reduce(((t,e)=>e>0?t+e:t));e[o]=t.shape[n]-r}st(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function Gf(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function Hf(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function jf(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function qf(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function Kf(t,e){return`size ${t} must be non-negative, not ${e}`}function Xf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Yf(t,e){return`Input to reshape is a SparseTensor with ${ut(t)}\n  dense values, but the requested shape requires a multiple of ${ut(e)}. inputShape=${t} outputShape= ${e}`}function Jf(t,e){return`Input to reshape is a tensor with ${ut(t)} dense values, but the requested shape has ${ut(e)}. inputShape=${t} outputShape=${e}`}function Zf(){return"segment ids must be >= 0"}function Qf(){return"segment ids are not increasing"}function tm(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function em(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function nm(t,e){let n,r=!1;for(t<=pf?(n=t,r=!0):n=Mt(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Mt(t,n+1);return n}function rm(t,e,n){const r=[],s=t.length;for(let o=0;o<s;o++)o!==e?r.push(t[o]):r.push(n);return r}function sm(t,e,n,r){const s=e.shape.length,o=t.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(t.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${t.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=t.shape[n],i=[];let u=1,l=1,c=1;for(let h=0;h<r;++h)i.push(t.shape[h]),u*=t.shape[h];for(let h=r;h<n;h++)i.push(t.shape[h]),l*=t.shape[h];for(let h=r;h<s;h++)i.push(e.shape[h]);for(let h=n+1;h<o;h++)i.push(t.shape[h]),c*=t.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:a,outputShape:i}}function om(t){try{return t.map((t=>Vs(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function am(t){return t.map((t=>Us(t)))}const im={kernelName:Jt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(t,wp(Oa(n,"float32"),-1))}}},um={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Au(Oa(n,"float32")),r=Ru(ju(Bu(1),e));return $i(Eu(t,r))}}}},lm={kernelName:Qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ru(ju(Au(Oa(n,"float32")),1));return Eu(t,e)}}}},cm={kernelName:te,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Di(n.shape,r.shape);return{a:()=>{let e=t;const r=Fi(n.shape,s);return r.length>0&&(e=Ec(e,r)),Cl(e,n.shape)},b:()=>{let e=t;const n=Fi(r.shape,s);return n.length>0&&(e=Ec(e,n)),Cl(e,r.shape)}}}},hm={kernelName:ee,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},pm={kernelName:se,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_u(n)}}},dm={kernelName:oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>_u(n)}}},fm={kernelName:ae,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,Ru(ju(Bu(1),Au(Oa(n,"float32")))))}}},mm={kernelName:ie,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ru(Tu(Bu(1),Au(Oa(n,"float32"))));return Eu(t,e)}}}},gm={kernelName:ce,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Di(n.shape,r.shape);return{a:()=>{const e=Tu(Au(n),Au(r));let o=$u(t,Eu(r,e));const a=Fi(n.shape,s);return a.length>0&&(o=Ec(o,a)),Cl(o,n.shape)},b:()=>{const e=Tu(Au(n),Au(r));let o=$i($u(t,Eu(n,e)));const a=Fi(r.shape,s);return a.length>0&&(o=Ec(o,a)),Cl(o,r.shape)}}}},ym={kernelName:ue,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,Tu(Au(Oa(n,"float32")),1))}}},bm={kernelName:le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,ju(Bu(1),Au(Oa(n,"float32"))))}}},xm=Do({avgPool3dGrad_:function(t,e,n,r,s,o){const a=_o(t,"dy","avgPool3dGrad"),i=_o(e,"input","avgPool3dGrad");let u=a,l=i,c=!1;4===i.rank&&(c=!0,u=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),st(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),st(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Tl("avgPool3dGrad",s,o);const h={dy:u,input:l},p={filterSize:n,strides:r,pad:s,dimRoundingMode:o},d=ko.runKernel(fe,h,p);return c?Cl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),wm={kernelName:de,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:o,pad:a,dimRoundingMode:i}=n;return{x:()=>xm(t,r,s,o,a,i)}}},vm=Do({avgPoolGrad_:function(t,e,n,r,s){const o=_o(t,"dy","avgPoolGrad"),a=_o(e,"input","avgPoolGrad");st(a.rank===o.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`));let i=a,u=o,l=!1;3===a.rank&&(l=!0,i=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),st(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),st(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const c={dy:u,input:i},h={filterSize:n,strides:r,pad:s},p=ko.runKernel(pe,c,h);return l?Cl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),km={kernelName:he,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:o,pad:a}=n;return{x:()=>vm(t,r,s,o,a)}}},Im={kernelName:me,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:o,transposeB:a}=n;return o||a?!o&&a?{a:()=>oi(t,s,!1,!1),b:()=>oi(t,r,!0,!1)}:o&&!a?{a:()=>oi(s,t,!1,!0),b:()=>oi(r,t,!1,!1)}:{a:()=>oi(s,t,!0,!0),b:()=>oi(t,r,!0,!0)}:{a:()=>oi(t,s,!1,!0),b:()=>oi(r,t,!0,!1)}}},Sm={kernelName:ge,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>$h(t,r,s)}}},Nm={kernelName:be,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,o=r.shape,a=Array.from(o);for(let u=s.length-1;u>=0;u--)if(s[u]===o[u])a[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${o}].`);const i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>Ec(t,i,!0)}}},Tm={kernelName:we,gradFunc:t=>({x:()=>t.clone()})},Cm={kernelName:ve,gradFunc:t=>({x:()=>_u(t)})},Em={kernelName:ke,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:o}=n;return{x:()=>pc(eh(Bc(r,s),jc(r,o)),t,_u(t))}}},$m={kernelName:Se,inputsToSave:["x"],gradFunc:im.gradFunc},Rm={kernelName:Ne,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,o=bt(s,e[0].shape)[0],a=r.map((t=>t[o]));return mp(t,a,o).map((t=>()=>t))}},Am={kernelName:Te,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:o,strides:a,pad:i,dataFormat:u}=n;return st(Il(o),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`)),{x:()=>Jl(r.shape,t,s,a,i,u),filter:()=>jp(r,t,s.shape,a,i,u)}}},_m={kernelName:Ee,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:o,pad:a,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Xl(t,s,o,a,i,1,u),filter:()=>jp(t,r,s.shape,o,a,i,u)}}},Mm=Do({conv3DBackpropFilter_:function(t,e,n,r,s){let o=t;4===t.rank&&(o=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),st(5===o.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`)),st(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),st(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),st(o.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${n[3]}.`)),st(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:o,dy:a},u={strides:r,pad:s,filterShape:n};return ko.runKernel(Re,i,u)}}),Fm={kernelName:$e,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:o}=n;st(Il(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,i]=e;return{x:()=>tc(a.shape,t,i,s,o),filter:()=>Mm(a,t,i.shape,s,o)}}},Dm={kernelName:_e,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u($i(op(Oa(n,"float32"))),t)}}},Om={kernelName:Me,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(ap(Oa(n,"float32")),t)}}},Lm={kernelName:De,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:o,reverse:a}=n;return{x:()=>{const e=Ic([s],r.rank);let n=oc(t,s,o,!a);return null!=e&&(n=Ai(n,e)),n}}}},Pm={kernelName:ze,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:o,dimRoundingMode:a}=n,i=null==r?[1,1]:r;st(Il(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,l]=e;return st(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),st(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),st(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),st(Sl(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),Tl("depthwiseConv2d",o,a),{x:()=>Qp(u.shape,t,l,s,o,i,a),filter:()=>Zp(u,t,l.shape,s,o,i,a)}}},zm={kernelName:We,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,o={x:r,filter:s,dy:t},a={x:r,filter:s,dy:t};return{x:()=>ko.runKernel(Ge,o,n),filter:()=>ko.runKernel(He,a,n)}}},Bm={kernelName:Ke,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>ko.runKernel(Xe,r)}}},Um={kernelName:Ye,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=$u(_c($i(Au(n))),2/Math.sqrt(Math.PI));return{x:()=>$u(t,r)}}},Vm={kernelName:Ze,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(t,n)}}},Wm={kernelName:Qe,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Cl(t,n.shape)}}},Gm={kernelName:tn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(t,_c(n))}}},Hm={kernelName:sn,gradFunc:t=>({x:()=>_u(t)})},jm={kernelName:on,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Di(n.shape,r.shape);return{a:()=>{const e=Eu(t,Oa(r,"float32")),o=Fi(n.shape,s);return o.length>0?Cl(Ec(e,o),n.shape):e},b:()=>{let e=$u(t,Oa(n,"float32"));const o=Fi(r.shape,s);o.length>0&&(e=Cl(Ec(e,o),r.shape));const a=Au(r);return $i(Eu(e,Oa(a,"float32")))}}}},qm={kernelName:an,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,o,a,i]=e,u=null==i?Bu(1):i,l=Fi(o.shape,s.shape),c=[];if(1===o.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=ju(s,o),p=$u(t,u),d=tp(Tu(a,Bu(r))),f=$u($u($u(d,d),d),Bu(-.5));return{x:()=>1===o.rank?Cl($u($u(t,Dc(Cl(d,[1,1,1,o.shape[0]]),c)),u),s.shape):Cl($u($u(t,d),u),s.shape),mean:()=>{let t=$u($u(d,Bu(-1)),p);return 1===o.rank&&(t=Ec(t,l)),Cl(t,o.shape)},variance:()=>{let t=$u($u(f,h),p);return 1===o.rank&&(t=Ec(t,l)),Cl(t,o.shape)},scale:()=>{const e=$u(h,d);let n=$u(t,e);return 1===o.rank&&(n=Ec(n,l)),Cl(n,o.shape)},offset:()=>{let e=t;return 1===o.rank&&(e=Ec(e,l)),Cl(e,o.shape)}}}},Km={kernelName:un,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:o}=n,a=bt(o,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,i=e.slice(0,a),u=i.length,l=e.slice(o,e.length).slice(1),c=l.length,h=Xm(0,u),p=Xm(u+1,u+1+c),d=Ym([i,[n],l]),f=Cl(t,d),m=Cl(s,[n]),g=Ym([[u],h,p]),y=Ai(f,g);let b=Ap(y,m,r.shape[a]);const x=Sc(g);return b=Ai(b,x),b},indices:()=>s}}};function Xm(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Ym(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Jm={kernelName:hn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>_u(n),b:()=>_u(r)}}},Zm={kernelName:pn,gradFunc:t=>({x:()=>Oa(t,"float32")})},Qm={kernelName:mn,gradFunc:t=>({x:()=>_u(t)})},tg={kernelName:gn,gradFunc:t=>({x:()=>_u(t)})},eg={kernelName:yn,gradFunc:t=>({x:()=>_u(t)})},ng={kernelName:bn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:s}=n,o=zc(r,0);return{x:()=>pc(o,t,$u(t,s))}}},rg={kernelName:In,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,Tu(n,1))}}},sg={kernelName:kn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,Oa(n,"float32"))}}},og={kernelName:En,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=_c(r);return ju(t,$u(Ec(t,s,!0),e))}}}},ag=Do({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,o=1,a=.5){const i={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:o,beta:a};return ko.runKernel(An,i,u)}}),ig={kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:o,bias:a,alpha:i,beta:u}=n;return{x:()=>ag(r,s,t,o,a,i,u)}}};function ug(t,e,n,r){return e.rank<n.rank&&(e=Cl(e,vc(e.shape,r))),t.rank<n.rank&&(t=Cl(t,vc(t.shape,r))),{x:()=>$u(t,Oa(hc(n,e),t.dtype))}}const lg={kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,o=e[0],a=ug(t,e[1],o,bt(s,o.shape));return{x:()=>a.x()}}},cg={kernelName:Mn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>$u(t,Oa(Bc(n,r),"float32")),b:()=>$u(t,Oa(Hc(n,r),"float32"))}}},hg=Do({maxPool3dGrad_:function(t,e,n,r,s,o,a){const i=_o(t,"dy","maxPool3dGrad"),u=_o(e,"input","maxPool3dGrad"),l=_o(n,"output","maxPool3dGrad");let c=i,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=Cl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Cl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),st(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),st(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),st(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Tl("maxPool3dGrad",o,a);const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:o,dimRoundingMode:a},g=ko.runKernel(Ln,f,m);return d?Cl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),pg={kernelName:On,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=n;return{x:()=>hg(t,r,s,o,a,i,u)}}},dg=Do({maxPoolGrad_:function(t,e,n,r,s,o,a){const i=_o(t,"dy","maxPoolGrad"),u=_o(e,"input","maxPoolGrad"),l=_o(n,"output","maxPoolGrad");st(u.rank===i.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`)),st(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),st(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Tl("maxPoolGrad",o,a);const c={dy:i,input:u,output:l},h={filterSize:r,strides:s,pad:o,dimRoundingMode:a};return ko.runKernel(Dn,c,h)}}),fg={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:o,strides:a,pad:i}=n;return{x:()=>dg(t,r,s,o,a,i)}}},mg={kernelName:Vn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,o=s.map((t=>t[0]));return{x:()=>_l(t,o,r.shape)}}},gg={kernelName:tr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,o=s.map((t=>t[0]));return{x:()=>_l(t,o,r.shape)}}},yg={kernelName:nr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,o=n,a=r,i=Di(o.shape,a.shape);return{a:()=>{const e=Oa(a,"float32");let n=$u(t,$u(e,Hu(o,ju(e,Bu(1)))));const r=Fi(o.shape,i);return r.length>0&&(n=Ec(n,r)),Cl(n,o.shape)},b:()=>{const e=zc(o,0),n=pc(e,Xc(o),_u(o));let r=$u(t,$u(s,n));const u=Fi(a.shape,i);return u.length>0&&(r=Ec(r,u)),Cl(r,a.shape)}}}},bg={kernelName:Ir,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=zc(n,Bu(0)),r=Bu(wf),s=Bu(vf),o=$u(t,s),a=$u($u(t,r),_c(Oa(n,"float32")));return pc(e,o,a)}}}},xg={kernelName:_r,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Dl(t,r,s)}}},wg={kernelName:Mr,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Rl(t,r)}}},vg=[im,um,lm,cm,hm,pm,dm,fm,mm,gm,ym,bm,wm,km,Im,Sm,Nm,Tm,Cm,Em,$m,Rm,_m,Am,Fm,Dm,Om,Lm,Pm,zm,{kernelName:je,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Di(n.shape,r.shape);return{a:()=>{const e=Eu(t,Oa(r,"float32")),o=Fi(n.shape,s);return o.length>0?Cl(Ec(e,o),n.shape):e},b:()=>{let e=$u(t,Oa(n,"float32"));const o=Fi(r.shape,s);o.length>0&&(e=Cl(Ec(e,o),r.shape));const a=Au(r);return $i(Eu(e,Oa(a,"float32")))}}}},Bm,Um,Vm,Wm,Gm,jm,Hm,qm,Km,Jm,Zm,Qm,tg,eg,ng,rg,sg,og,ig,lg,lg,cg,pg,fg,{kernelName:zn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n,o=bt(s,r.shape),a=ut(wc(r.shape,o)[1]);return{x:()=>{const e=r.shape.slice();o.forEach((t=>{e[t]=1}));const n=Cl(t,e);return Eu($u(n,dh(r.shape,"float32")),a)}}}},{kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[o,a]=e,i=ug(t,a,o,bt(s,o.shape));return{x:()=>i.x()}}},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>$u(t,Oa(jc(n,r),"float32")),b:()=>$u(t,Oa(zc(n,r),"float32"))}}},mg,{kernelName:Wn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Di(n.shape,r.shape);return{a:()=>{const e=Fi(n.shape,s);return e.length>0?Cl(Ec(t,e),n.shape):t},b:()=>{const e=$u(t,$i(Lc(Eu(n,r)))),o=Fi(r.shape,s);return o.length>0?Cl(Ec(e,o),r.shape):e}}}},{kernelName:Hn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Di(n.shape,r.shape);return{a:()=>{const e=$u(t,Oa(r,"float32")),o=Fi(n.shape,s);return o.length>0?Cl(Ec(e,o),n.shape):e},b:()=>{const e=$u(t,Oa(n,"float32")),o=Fi(r.shape,s);return o.length>0?Cl(Ec(e,o),r.shape):e}}}},{kernelName:jn,gradFunc:t=>({x:()=>$i(t)})},{kernelName:Zn,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>ph(n.shape,"float32")}}},{kernelName:Jn,gradFunc:t=>({x:()=>_u(t)})},{kernelName:Qn,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return _p(t,r).map((t=>()=>t))}},gg,gg,yg,{kernelName:rr,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=zc(n,0);return{x:()=>pc(s,t,$u(t,r)),alpha:()=>{let e=pc(s,_u(t),$u(t,n));const o=Fi(r.shape,t.shape);return o.length>0&&(e=Ec(e,o)),Cl(e,r.shape)}}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;let o=[];return o=null==s?r.shape.map(((t,e)=>e)):"number"==typeof s?[s]:s,{x:()=>function(t,e,n){const r=t.shape.length,s=r-n.length,o=Ic(n,r);let a=t;null!=o&&(a=Ai(t,o));const i=a.shape.slice(),u=i.splice(r-n.length,n.length).reduce(((t,e)=>t*e),1);i.push(u);let l=function(t,e,n){const r=t.shape.slice();r[n]=1;const s=Cl(e,r),o=sc(t,n,!0,!1),a=sc(t,n,!0,!0),i=$u(o,a);return $u(s,i)}(a.reshape(i),e,s);if(l=l.reshape(a.shape),null!=o){const t=Sc(o);l=Ai(l,t)}return l}(r,t,o)}}},{kernelName:lr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,$i(Au(n)))}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=$u(jc(n,6),wp(n));return{x:()=>$u(t,Oa(r,"float32"))}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(t,Oa(wp(n),"float32"))}}},{kernelName:hr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Cl(t,n.shape)}}},{kernelName:fr,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>ko.runKernel(mr,s,n)}}},{kernelName:pr,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>ko.runKernel(dr,s,n)}}},{kernelName:yr,gradFunc:(t,e,n)=>{const{dims:r}=n,s=bt(r,t.shape);return{x:()=>Kh(t,s)}}},{kernelName:br,gradFunc:t=>({x:()=>_u(t)})},{kernelName:xr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$i(Eu(t,$u(Hu(n,1.5),2)))}}},{kernelName:kr,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Oa(_u(n),"float32"),t:()=>$u(t,Oa(n,t.dtype)),e:()=>$u(t,Oa(nh(n),t.dtype))}}},bg,{kernelName:Er,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(t,$u(n,ju(Bu(1),n)))}}},{kernelName:Cr,gradFunc:t=>({x:()=>_u(t)})},{kernelName:Nr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(nc(Oa(n,"float32")),t)}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(rc(Oa(n,"float32")),t)}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:o}=n,a=r.shape,[i,u]=au(r,s,o),l=[];for(let c=0;c<t.rank;c++)l.push([i[c],a[c]-i[c]-u[c]]);return{x:()=>Sh(t,l)}}},{kernelName:Fr,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,o=$u(t,r);return{logits:()=>ju(o,$u(Ec(o,[s],!0),r))}}},{kernelName:$r,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(t,Al(n))}}},xg,xg,wg,wg,{kernelName:Rr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,$u(Ru(Oa(n,"float32")),2))}}},{kernelName:Br,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Bu(2);return{a:()=>$u(t,$u(s,ju(n,r))),b:()=>$u(t,$u(s,ju(r,n)))}}},{kernelName:Ur,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(t,$u(Oa(n,"float32"),2))}}},{kernelName:ss,gradFunc:t=>({x:()=>_u(t)})},{kernelName:jr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Di(n.shape,r.shape);return{a:()=>{let e=t;const r=Fi(n.shape,s);return r.length>0&&(e=Ec(e,r)),Cl(e,n.shape)},b:()=>{let e=t;const n=Fi(r.shape,s);return n.length>0&&(e=Ec(e,n)),Cl($i(e),r.shape)}}}},{kernelName:Ar,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:o}=n;bt(o,r.shape).forEach((t=>{s[t]=1}));const a=Cl(t,s),i=$u(a,dh(r.shape,"float32"));return{x:()=>i}}},{kernelName:qr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Eu(t,Au(nc(n)))}}},{kernelName:Kr,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>$u(ju(Bu(1),Au(n)),t)}}},{kernelName:Xr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=_u(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Tu(e,_l(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let o=0;o<s[1];++o)e=Tu(e,_l(t,[n*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let o=0;o<s[1];++o)for(let a=0;a<s[2];++a)e=Tu(e,_l(t,[n*r.shape[0],o*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let o=0;o<s[1];++o)for(let a=0;a<s[2];++a)for(let i=0;i<s[3];++i)e=Tu(e,_l(t,[n*r.shape[0],o*r.shape[1],a*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:Zr,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,o=Sc(s);return{x:()=>Ai(t,o)}}},{kernelName:ts,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>xp(t,s)}}},{kernelName:es,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Xu(e,_u(e)),r=Pc(t,n);let s=Bc(e,Bu(0,"int32"));const o=r.rank-s.rank;for(let i=0;i<o;++i)s=Mc(s,i+1);s=eh(s,dh(r.shape,"bool"));const a=_u(r);return pc(s,r,a)}(t,n)}}},{kernelName:rs,gradFunc:t=>({x:()=>_u(t)})}];for(const rV of vg)bs(rV);no().prototype.abs=function(){return this.throwIfDisposed(),Ku(this)},no().prototype.acos=function(){return this.throwIfDisposed(),el(this)},no().prototype.acosh=function(){return this.throwIfDisposed(),nl(this)},no().prototype.add=function(t){return this.throwIfDisposed(),Tu(this,t)},no().prototype.all=function(t,e){return this.throwIfDisposed(),sl(this,t,e)},no().prototype.any=function(t,e){return this.throwIfDisposed(),ol(this,t,e)},no().prototype.argMax=function(t){return this.throwIfDisposed(),al(this,t)},no().prototype.argMin=function(t){return this.throwIfDisposed(),il(this,t)},no().prototype.asScalar=function(){return this.throwIfDisposed(),st(1===this.size,(()=>"The array must have only 1 element.")),Cl(this,[])},no().prototype.asType=function(t){return this.throwIfDisposed(),Oa(this,t)},no().prototype.as1D=function(){return this.throwIfDisposed(),Cl(this,[this.size])},no().prototype.as2D=function(t,e){return this.throwIfDisposed(),Cl(this,[t,e])},no().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Cl(this,[t,e,n])},no().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Cl(this,[t,e,n,r])},no().prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),Cl(this,[t,e,n,r,s])},no().prototype.asin=function(){return this.throwIfDisposed(),ul(this)},no().prototype.asinh=function(){return this.throwIfDisposed(),ll(this)},no().prototype.atan=function(){return this.throwIfDisposed(),cl(this)},no().prototype.atan2=function(t){return this.throwIfDisposed(),hl(this,t)},no().prototype.atanh=function(){return this.throwIfDisposed(),pl(this)},no().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),El(this,t,e,n,r)},no().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Dl(this,t,e)},no().prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Ol(this,t,e,n,r,s)},no().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Vl(this,t)},no().prototype.cast=function(t){return this.throwIfDisposed(),Oa(this,t)},no().prototype.ceil=function(){return this.throwIfDisposed(),Wl(this)},no().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Gl(this,t,e)},no().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof eo&&(t=[t]),Rl([this,...t],e)},no().prototype.conv1d=function(t,e,n,r,s,o){return this.throwIfDisposed(),Yl(this,t,e,n,r,s,o)},no().prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Zl(this,t,e,n,r,s)},no().prototype.conv2d=function(t,e,n,r,s,o){return this.throwIfDisposed(),Xl(this,t,e,n,r,s,o)},no().prototype.cos=function(){return this.throwIfDisposed(),nc(this)},no().prototype.cosh=function(){return this.throwIfDisposed(),rc(this)},no().prototype.cumprod=function(t,e,n){return this.throwIfDisposed(),sc(this,t,e,n)},no().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),oc(this,t,e,n)},no().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ic(this,t,e)},no().prototype.depthwiseConv2d=function(t,e,n,r,s,o){return this.throwIfDisposed(),uc(this,t,e,n,r,s,o)},no().prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),cc(this,t,e,n,r,s)},no().prototype.divNoNan=function(t){return this.throwIfDisposed(),dc(this,t)},no().prototype.div=function(t){return this.throwIfDisposed(),Eu(this,t)},no().prototype.dot=function(t){return this.throwIfDisposed(),fc(this,t)},no().prototype.elu=function(){return this.throwIfDisposed(),gc(this)},no().prototype.equal=function(t){return this.throwIfDisposed(),hc(this,t)},no().prototype.erf=function(){return this.throwIfDisposed(),yc(this)},no().prototype.euclideanNorm=function(t,e){return this.throwIfDisposed(),Ac(this,t,e)},no().prototype.exp=function(){return this.throwIfDisposed(),_c(this)},no().prototype.expandDims=function(t){return this.throwIfDisposed(),Mc(this,t)},no().prototype.expm1=function(){return this.throwIfDisposed(),Fc(this)},no().prototype.fft=function(){return this.throwIfDisposed(),pp(this)},no().prototype.flatten=function(){return this.throwIfDisposed(),Cl(this,[this.size])},no().prototype.floor=function(){return this.throwIfDisposed(),Lc(this)},no().prototype.floorDiv=function(t){return this.throwIfDisposed(),Cu(this,t)},no().prototype.gather=function(t,e){return this.throwIfDisposed(),Pc(this,t,e)},no().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Bc(this,t)},no().prototype.greater=function(t){return this.throwIfDisposed(),zc(this,t)},no().prototype.ifft=function(){return this.throwIfDisposed(),dp(this)},no().prototype.irfft=function(){return this.throwIfDisposed(),fp(this)},no().prototype.isFinite=function(){return this.throwIfDisposed(),Uc(this)},no().prototype.isInf=function(){return this.throwIfDisposed(),Vc(this)},no().prototype.isNaN=function(){return this.throwIfDisposed(),Wc(this)},no().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Gc(this,t)},no().prototype.lessEqual=function(t){return this.throwIfDisposed(),jc(this,t)},no().prototype.less=function(t){return this.throwIfDisposed(),Hc(this,t)},no().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Kc(this,t,e,n,r)},no().prototype.logSigmoid=function(){return this.throwIfDisposed(),Zc(this)},no().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Qc(this,t)},no().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),th(this,t,e)},no().prototype.log=function(){return this.throwIfDisposed(),Xc(this)},no().prototype.log1p=function(){return this.throwIfDisposed(),Yc(this)},no().prototype.logicalAnd=function(t){return this.throwIfDisposed(),eh(this,t)},no().prototype.logicalNot=function(){return this.throwIfDisposed(),nh(this)},no().prototype.logicalOr=function(t){return this.throwIfDisposed(),rh(this,t)},no().prototype.logicalXor=function(t){return this.throwIfDisposed(),sh(this,t)},no().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),oi(this,t,e,n)},no().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),uh(this,t,e,n,r)},no().prototype.max=function(t,e){return this.throwIfDisposed(),Tc(this,t,e)},no().prototype.maximum=function(t){return this.throwIfDisposed(),Xu(this,t)},no().prototype.mean=function(t,e){return this.throwIfDisposed(),hh(this,t,e)},no().prototype.min=function(t,e){return this.throwIfDisposed(),Cc(this,t,e)},no().prototype.minimum=function(t){return this.throwIfDisposed(),mh(this,t)},no().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),gh(this,t,e)},no().prototype.mod=function(t){return this.throwIfDisposed(),yh(this,t)},no().prototype.mul=function(t){return this.throwIfDisposed(),$u(this,t)},no().prototype.neg=function(){return this.throwIfDisposed(),$i(this)},no().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Rc(this,t,e,n)},no().prototype.notEqual=function(t){return this.throwIfDisposed(),vh(this,t)},no().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),ai(this,t,e,n)},no().prototype.onesLike=function(){return this.throwIfDisposed(),kh(this)},no().prototype.pad=function(t,e){return this.throwIfDisposed(),Sh(this,t,e)},no().prototype.pool=function(t,e,n,r,s,o){return this.throwIfDisposed(),Rh(this,t,e,n,r,s,o)},no().prototype.pow=function(t){return this.throwIfDisposed(),Hu(this,t)},no().prototype.prelu=function(t){return this.throwIfDisposed(),Ah(this,t)},no().prototype.prod=function(t,e){return this.throwIfDisposed(),_h(this,t,e)},no().prototype.reciprocal=function(){return this.throwIfDisposed(),Hh(this)},no().prototype.relu=function(){return this.throwIfDisposed(),jh(this)},no().prototype.relu6=function(){return this.throwIfDisposed(),qh(this)},no().prototype.reshapeAs=function(t){return this.throwIfDisposed(),Cl(this,t.shape)},no().prototype.reshape=function(t){return this.throwIfDisposed(),Cl(this,t)},no().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Id(this,t,e,n)},no().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Sd(this,t,e,n)},no().prototype.reverse=function(t){return this.throwIfDisposed(),Kh(this,t)},no().prototype.rfft=function(){return this.throwIfDisposed(),gp(this)},no().prototype.round=function(){return this.throwIfDisposed(),Qh(this)},no().prototype.rsqrt=function(){return this.throwIfDisposed(),tp(this)},no().prototype.selu=function(){return this.throwIfDisposed(),ep(this)},no().prototype.separableConv2d=function(t,e,n,r,s,o){return this.throwIfDisposed(),np(this,t,e,n,r,s,o)},no().prototype.sigmoid=function(){return this.throwIfDisposed(),Al(this)},no().prototype.sign=function(){return this.throwIfDisposed(),sp(this)},no().prototype.sin=function(){return this.throwIfDisposed(),op(this)},no().prototype.sinh=function(){return this.throwIfDisposed(),ap(this)},no().prototype.slice=function(t,e){return this.throwIfDisposed(),_l(this,t,e)},no().prototype.softmax=function(t){return this.throwIfDisposed(),hp(this,t)},no().prototype.softplus=function(){return this.throwIfDisposed(),Jc(this)},no().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),$h(this,t,e)},no().prototype.split=function(t,e){return this.throwIfDisposed(),mp(this,t,e)},no().prototype.sqrt=function(){return this.throwIfDisposed(),Ru(this)},no().prototype.square=function(){return this.throwIfDisposed(),Au(this)},no().prototype.squaredDifference=function(t){return this.throwIfDisposed(),yp(this,t)},no().prototype.squeeze=function(t){return this.throwIfDisposed(),bp(this,t)},no().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof eo?[this,t]:[this,...t];return xp(n,e)},no().prototype.step=function(t){return this.throwIfDisposed(),wp(this,t)},no().prototype.stridedSlice=function(t,e,n,r,s,o,a,i){return this.throwIfDisposed(),vp(this,t,e,n,r,s,o,a,i)},no().prototype.sub=function(t){return this.throwIfDisposed(),ju(this,t)},no().prototype.sum=function(t,e){return this.throwIfDisposed(),Ec(this,t,e)},no().prototype.tan=function(){return this.throwIfDisposed(),kp(this)},no().prototype.tanh=function(){return this.throwIfDisposed(),Ml(this)},no().prototype.tile=function(t){return this.throwIfDisposed(),Dc(this,t)},no().prototype.toBool=function(){return this.throwIfDisposed(),Oa(this,"bool")},no().prototype.toFloat=function(){return this.throwIfDisposed(),Oa(this,"float32")},no().prototype.toInt=function(){return this.throwIfDisposed(),Oa(this,"int32")},no().prototype.topk=function(t,e){return this.throwIfDisposed(),Ep(this,t,e)},no().prototype.transpose=function(t){return this.throwIfDisposed(),Ai(this,t)},no().prototype.unique=function(t){return this.throwIfDisposed(),Rp(this,t)},no().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Ap(this,t,e)},no().prototype.unstack=function(t){return this.throwIfDisposed(),_p(this,t)},no().prototype.where=function(t,e){return this.throwIfDisposed(),pc(t,this,e)},no().prototype.zerosLike=function(){return this.throwIfDisposed(),_u(this)};class kg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,kg.prototype)}}class Ig extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ig.prototype)}}class Sg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Sg.prototype)}}class Ng extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ng.prototype)}}class Tg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Tg.prototype)}}class Cg extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Cg.prototype)}}class Eg{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const t=this.cache.keys().next().value;this.cache.delete(t)}this.maxEntries=t}}function $g(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Rg(t,e){if(!t)throw new Tg(e)}function Ag(t,e){let n=0;for(const r of t)r===e&&n++;return n}function _g(t){return 1===t.length?t[0]:t}function Mg(t){return Array.isArray(t)?t:[t]}function Fg(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Dg(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let Og={};function Lg(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Pg(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Pg(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Pg(e):t[n]=e.value)}}}function zg(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let o;if(s in n)o=n[s];else if(s in Og)o=Og[s];else if(o=e[s],null==o)throw new Sg(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}{const o=t;if(null==o.className||null==o.config)throw new Sg(`${r}: Improper config format: ${JSON.stringify(o)}.\n'className' and 'config' must set.`);const a=o.className;let i,u;if(a in n?[i,u]=n[a]:a in Og?[i,u]=Og.className:a in e&&([i,u]=e[a]),null==i)throw new Sg(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(Og))t[n]=Og[n];for(const s of Object.keys(n))t[s]=n[s];o.config.customObjects=t;const e=Object.assign({},Og);for(const s of Object.keys(n))Og[s]=n[s];Pg(o.config);const r=u(i,o.config,n,s);return Og=Object.assign({},e),r}{const t=Object.assign({},Og);for(const r of Object.keys(n))Og[r]=n[r];const e=new i(o.config);return Og=Object.assign({},t),e}}}function Bg(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Ug(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Vg(t){if(null==t)throw new Sg(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Wg(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Sg(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Gg(t,e,n=0,r=1/0){return Rg(n>=0),Rg(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function Hg(t,e){Array.isArray(t)?(st(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Hg(t,`element ${n+1} of ${e}`)))):st(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${jg(t)}.`))}function jg(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>jg(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function qg(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}let Kg=0;function Xg(){return Kg++}const Yg={};function Jg(t=""){return t in Yg||(Yg[t]=0),Yg[t]+=1,t+Yg[t].toString()}const Zg=["channelsFirst","channelsLast"],Qg=["nearest","bilinear"],ty=["valid","same","causal"],ey=["max","avg"],ny=["sum","mul","concat","ave"],ry=new Map;function sy(t){Wg(Zg,"DataFormat",t)}function oy(t){Wg(ty,"PaddingMode",t)}function ay(t){Wg(ey,"PoolMode",t)}const iy=[];function uy(t,e){iy.push(t);try{const t=e();return iy.pop(),t}catch(t){throw iy.pop(),t}}function ly(t){if(!py(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===iy.length?"":iy.join("/")+"/")+t}function cy(t){if(!py(t))throw new Error("Not a valid tensor name: '"+t+"'");ry.has(t)||ry.set(t,0);const e=ry.get(t);if(ry.set(t,ry.get(t)+1),e>0){const n=`${t}_${e}`;return ry.set(n,1),n}return t}const hy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function py(t){return!!t.match(hy)}function dy(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function fy(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r<e&&(e=r)}return e}function my(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function gy(t,e){if(e<t)throw new Sg(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}let yy;function by(){return null==yy&&(yy=Ti().epsilon()),yy}function xy(t,e){return Oa(t,e)}function wy(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),Cl(t,n)}function vy(t,e,n){return mi((()=>{switch(t.rank){case 1:return ip(t,e,n);case 2:return up(t,[e,0],[n,t.shape[1]]);case 3:return lp(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return cp(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return _l(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return _l(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Sg(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ky(t,e,n){return mi((()=>{switch(t.rank){case 1:return ip(t,e,n);case 2:return up(t,[0,e],[t.shape[0],n]);case 3:return lp(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return cp(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Sg(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Iy(t,e,n,r){return mi((()=>{switch(t.rank){case 1:return ip(t,e,n);case 2:switch(r){case 1:return vy(t,e,n);case 2:return ky(t,e,n);default:throw new Sg(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return vy(t,e,n);case 2:return lp(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return ky(t,e,n);default:throw new Sg(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return vy(t,e,n);case 2:return cp(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return cp(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return ky(t,e,n);default:throw new Sg(`The axis is not within the rank of the tensor ${r}`)}default:throw new Sg(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Sy(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Rl(t,e)}function Ny(t,e){switch(t.rank){case 1:return Hl([t,e]);case 2:return jl([t,e],0);case 3:return ql([t,e],0);case 4:return Kl([t,e],0);default:throw new Sg(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Ty(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Sg(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Dc(t,e)}function Cy(t,e=0,n=1,r,s){return Uh(t,e,n,r,s)}function Ey(t,e,n,r){if(t.rank<2||e.rank<2)throw new Ng(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Ng(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return ed({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Ay(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),o=s.pop();t=Cl(t,[-1,o]);const a=e.shape.slice(),i=a.pop(),u=a.pop(),l=[...a,i],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=Cl(Ai(e,c),[u,-1]);const h=[...s,...l];return Cl(ed({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Ay(t.rank,r,"channelsLast"):null,activation:n}),h)}}function $y(t,e,n){return mi((()=>(e=Array.isArray(e)?Ip(e,"int32"):Oa(e,"int32"),Pc(t,e,n))))}function Ry(t){return $u(t,t)}function Ay(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Sg(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?Cl(e,[1,r[0],1,1,1]):Cl(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Cl(e,[1,1,1,1,r[0]]):Cl(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?Cl(e,[1,r[0],1,1]):Cl(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Cl(e,[1,1,1,r[0]]):Cl(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?Cl(e,[1,r[0],1]):Cl(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Cl(e,[1,1,r[0]]):Cl(e,[1].concat(r))}else if(t<3)return e;throw new Sg(`Unsupported input rank by biasAdd: ${e.rank}`)}function _y(t,e,n){return mi((()=>(null==n&&(n="channelsLast"),sy(n),Tu(t,Ay(t.rank,e,n)))))}function My(t,e,n,r){return mi((()=>Vp(t,e,n,r)))}function Fy(t,e,n=!1){return n?t():e()}const Dy=["fanIn","fanOut","fanAvg"],Oy=["normal","uniform","truncatedNormal"];class Ly extends lu{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Py extends Ly{apply(t,e){return ph(t,e)}}Py.className="Zeros",hu(Py);class zy extends Ly{apply(t,e){return dh(t,e)}}zy.className="Ones",hu(zy);class By extends Ly{constructor(t){if(super(),"object"!=typeof t)throw new Sg(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Sg(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return mi((()=>$u(Bu(this.value),dh(t,e))))}getConfig(){return{value:this.value}}}By.className="Constant",hu(By);class Uy extends Ly{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Wh(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Uy.className="RandomUniform",hu(Uy);class Vy extends Ly{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ng(`randomNormal does not support dType ${e}.`);return Cy(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Vy.className="RandomNormal",hu(Vy);class Wy extends Ly{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ng(`truncatedNormal does not support dType ${e}.`);return $p(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Wy.className="TruncatedNormal",hu(Wy);class Gy extends Ly{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return mi((()=>{if(2!==t.length||t[0]!==t[1])throw new Sg("Identity matrix initializer can only be used for 2D square matrices.");return $u(this.gain,Oc(t[0]))}))}getConfig(){return{gain:this.gain}}}Gy.className="Identity",hu(Gy);class Hy extends Ly{constructor(t){if(super(),t.scale<0)throw new Sg(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Wg(Dy,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Wg(Oy,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(sy(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=dy(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=dy(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=dy(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,r):"fanOut"===this.mode?o/=Math.max(1,s):o/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Ng(`${this.getClassName()} does not support dType ${e}.`);return $p(t,0,n,e,this.seed)}{const n=Math.sqrt(3*o);return Wh(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Hy.className="VarianceScaling",hu(Hy);class jy extends Hy{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Hy.className}}jy.className="GlorotUniform",hu(jy);class qy extends Hy{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Hy.className}}qy.className="GlorotNormal",hu(qy);class Ky extends Hy{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Hy.className}}Ky.className="HeNormal",hu(Ky);class Xy extends Hy{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Hy.className}}Xy.className="HeUniform",hu(Xy);class Yy extends Hy{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Hy.className}}Yy.className="LeCunNormal",hu(Yy);class Jy extends Hy{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Hy.className}}Jy.className="LeCunNormal",hu(Jy);class Zy extends Ly{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Ng("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return mi((()=>{if(t.length<2)throw new Ng("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Cy(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Jd.gramSchmidt(e);return t[0]>t[1]&&(n=Ai(n)),$u(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Zy.className="Orthogonal",hu(Zy);const Qy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function tb(t,e={}){return zg(t,cu.getMap().classNameMap,e,"initializer")}function eb(t){return Lg(t)}function nb(t){if("string"==typeof t){const e=t in Qy?Qy[t]:t;if("GlorotNormal"===e)return new qy;if("GlorotUniform"===e)return new jy;if("HeNormal"===e)return new Ky;if("HeUniform"===e)return new Xy;if("LeCunNormal"===e)return new Yy;if("LeCunUniform"===e)return new Jy;{const t={};return t.className=e,t.config={},tb(t)}}return t instanceof Ly?t:tb(t)}function rb(t){return Array.isArray(t)&&Array.isArray(t[0])}function sb(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function ob(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Sg(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function ab(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new Sg(`Expected exactly 1 Shape; got ${t.length}`)}return t}function ib(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class ub{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Xg(),n=null==n?"Variable":n,this.originalName=ly(n),this.name=cy(this.originalName),this.trainable_=r,this.constraint=s,this.val=Fp(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function lb(t){return t.map((t=>t.read()))}function cb(t){t.forEach((t=>{t[0].write(t[1])}))}class hb{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class pb{constructor(t,e,n,r,s,o,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Xg(),null!=o&&(this.originalName=ly(o),this.name=cy(this.originalName)),this.rank=e.length}}let db=0;class fb{constructor(t,e){this.callArgs=e,this.id=db++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mb=0;class gb extends lu{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Fg(t)+"_"+Jg(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Ig(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Sg(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return _g(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return _g(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new kg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new kg(`Layer ${this.name} is not connected, no input to return.`);return _g(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new kg(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new kg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return _g(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Mg(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Mg(this.inputSpec);if(t.length!==e.length)throw new Sg(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const o=r.rank;if(null!=s.ndim&&o!==s.ndim)throw new Sg(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${o}`);if(null!=s.maxNDim&&o>s.maxNDim)throw new Sg(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${o}`);if(null!=s.minNDim&&o<s.minNDim)throw new Sg(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${o}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Sg(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),o=s.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=o&&-1===[o,null].indexOf(a))throw new Sg(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${o} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],o=r.shape[t];if(null!=e&&null!=o&&e!==o)throw new Sg(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Mg(t);let r=!0;for(const o of n)if(!(o instanceof pb)){r=!1;break}let s=!0;for(const o of n)if(o instanceof pb){s=!1;break}if(r===s)throw new Sg("Arguments to apply() must be all SymbolicTensors or all Tensors");return uy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Mg(t))e.push(n.shape);this.build(_g(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Mg(r),o=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),o.push(t);if(r=_g(o),null!=this.activityRegularizer)throw new Ng("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Mg(t);const e=[];for(const n of t)e.push(n.shape);return _g(e)}(t),r=this.computeOutputShape(n);let s;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new pb(o,n,this,Mg(t),e,this.name,r))):new pb(o,r,this,Mg(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Ng("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new kg(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new kg(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ig(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ib(this.weights)}build(t){this.built=!0}getWeights(t=!1){return lb(t?this.trainableWeights:this.weights)}setWeights(t){mi((()=>{const e=this.weights;if(e.length!==t.length)throw new Sg(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=lb(e);for(let s=0;s<r.length;++s){const o=r[s],a=e[s],i=t[s];if(!ct(o.shape,i.shape))throw new Sg(`Layer weight shape ${o.shape} not compatible with provided weight shape ${i.shape}`);n.push([a,i])}cb(n)}))}addWeight(t,e,n,r,s,o,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Sg(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=i?i():nb("zeros"));const u=r.apply(e,n),l=new ub(u,n,t,o,a);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==o&&(o=!0),o?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Mg(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,o,a=null){const i=Mg(t);e=Mg(e),n=Mg(n),r=Mg(r),s=sb(s),o=sb(o);const u=[],l=[],c=[];for(const h of i)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new fb({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:o},a);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function yb(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=yb(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class bb extends gb{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Jg("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Sg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Sg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Sg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new pb(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new fb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Sg(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function xb(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Sg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new bb({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}bb.className="InputLayer",hu(bb);class wb{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof wb)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Sg(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Oa(e,t.dtype)}catch(n){throw new Sg(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof pb){if(null==this.id2Value[t.id])throw new Sg(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Sg(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof pb){if(null==this.id2Value[t.id])throw new Sg(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Sg(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&gi(this.id2Mask)}}const vb=new Eg,kb=new Eg;function Ib(t,e,n,r){const s=null!=n&&n.training,o=Array.isArray(t),a=o?t:[t],i=a.map((t=>t.name)),u=[],l=e.names();for(const f of i)-1!==l.indexOf(f)?u.push(e.getValue(f)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=i.join(",")+"|"+e.names().sort().join(",");let h,p=vb.get(c);if(null==p){const t=function(t,e){st(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=Nb(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const o of t){const{sorted:t,recipientMap:a}=Nb(o,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const e in a)null==r[e]&&(r[e]=new Set),a[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Sb(r)}}(a,e);p=t.sorted,h=t.recipientCounts,vb.put(c,p),kb.put(c,h)}h={},s||Object.assign(h,kb.get(c));const d=new wb(e);for(let f=0;f<p.length;++f){if(null!=r){const t=di().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=p[f],o=t.sourceLayer;if(o instanceof bb)continue;const a=[],l=[],c=[];let m=!1;for(const n of t.inputs){const t=d.getValue(n),r=d.getMask(n);a.push(t),l.push(r),null!=r&&(m=!0),s||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==i.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||c.push(t))}m&&((n=n||{}).mask=l[0]);const g=Mg(o.apply(a,n));let y=null;o.supportsMasking&&(y=o.computeMask(a,l));const b=Tb(t),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=i.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||gi(c)}return d.disposeMasks(),o?u:u[0]}function Sb(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Nb(t,e){const n=new Set,r=[],s={};for(const i of e.names())n.add(i);const o=[],a=[];for(o.push(t);o.length>0;){const t=o[o.length-1];if(n.has(t.name)){o.pop();continue}const e=a[a.length-1]===o.length-1;if(0===t.inputs.length||e)o.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(o.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||o.push(e)}}return{sorted:r,recipientMap:s}}function Tb(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}function Cb(t,e){return mi((()=>Ru(Ec($u(t,t),e,!0))))}jt().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(t){null!=vb&&vb.setMaxEntries(t),null!=kb&&kb.setMaxEntries(t)}));class Eb extends lu{getConfig(){return{}}}class $b extends Eb{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return mi((()=>{const e=Cb(t,this.axis),n=Gl(e,0,this.maxValue);return $u(t,Eu(n,Tu(by(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}$b.className="MaxNorm",hu($b);class Rb extends Eb{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return mi((()=>Eu(t,Tu(by(),Cb(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Rb.className="UnitNorm",hu(Rb);class Ab extends Eb{apply(t){return jh(t)}}Ab.className="NonNeg",hu(Ab);class _b extends Eb{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return mi((()=>{const e=Cb(t,this.axis),n=Tu($u(this.rate,Gl(e,this.minValue,this.maxValue)),$u(1-this.rate,e));return $u(t,Eu(n,Tu(by(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}_b.className="MinMaxNorm",hu(_b);const Mb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Fb(t){return Lg(t)}function Db(t,e={}){return zg(t,cu.getMap().classNameMap,e,"constraint")}function Ob(t){return null==t?null:"string"==typeof t?Db({className:t in Mb?Mb[t]:t,config:{}}):t instanceof Eb?t:Db(t)}function Lb(t){return new $b(t)}function Pb(t){return new Rb(t)}function zb(){return new Ab}function Bb(t){return new _b(t)}function Ub(){return new Py}function Vb(){return new zy}function Wb(t){return new By(t)}function Gb(t){return new Uy(t)}function Hb(t){return new Vy(t)}function jb(t){return new Wy(t)}function qb(t){return new Gy(t)}function Kb(t){return new Hy(t)}function Xb(t){return new jy(t)}function Yb(t){return new qy(t)}function Jb(t){return new Ky(t)}function Zb(t){return new Xy(t)}function Qb(t){return new Yy(t)}function tx(t){return new Jy(t)}function ex(t){return new Zy(t)}async function nx(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const o=t[s];if("number"!=typeof o){const t=o;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];gi(r)}}function rx(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var sx;!function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(sx||(sx={}));class ox{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class ax{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class ix extends ox{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const r in e){const t=e[r];if("number"==typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const s=mi((()=>Tu(this.totals[r],$u(t,n))));this.totals[r]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?e[n]=this.totals[n]/this.seen:mi((()=>{const t=$u(Eu(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),yi(e[n])})))}}class ux extends ox{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let o=0;o<r.length;++o)if("number"!=typeof r[o]){const a=r[o];t.push(a.data()),e.push(s),n.push(o)}}const r=await Promise.all(t);for(let s=0;s<r.length;++s)this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=r[s][0]}}class lx extends ox{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||rf,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Rt(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let r,s=null!=n?n():zs();return(...o)=>{const a=null!=n?n():zs();return a-s<e||(s=a,r=t(...o)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await nx(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await nx(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await nx(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await nx(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await nx(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Rt(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await nx(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await nx(t),await this.trainEnd(t))}}function cx(t,e){return null==t&&(t={}),t instanceof ox?[t]:Array.isArray(t)&&t[0]instanceof ox?t:Mg(t).map((t=>new lx(t,e)))}class hx{constructor(){}static registerCallbackConstructor(t,e){st(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),hx.checkForDuplicate(e),null==hx.constructors[t]&&(hx.constructors[t]=[]),hx.constructors[t].push(e)}static checkForDuplicate(t){for(const e in hx.constructors)hx.constructors[+e].forEach((e=>{if(e===t)throw new Sg("Duplicate callback constructor.")}))}static clear(){hx.constructors={}}static createCallbacks(t){const e=[];for(const n in hx.constructors){const r=+n;t>=r&&e.push(...hx.constructors[r])}return e.map((t=>new t))}}function px(t,e,n,r,s,o,a,i,u){const l=new ux,c=[new ix,...hx.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new ax(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:o,batchSize:a,verbose:e,doValidation:i,metrics:u}),{callbackList:h,history:l}}function dx(t,e={},n=!1){return zg(t,cu.getMap().classNameMap,e,"layer",n)}function fx(t,e){return mi((()=>{"float32"!==t.dtype&&(t=Oa(t,"float32"));const n=Ec(Ry(t),e,!0),r=Wu(n.shape,by()),s=Ru(Xu(n,r));return Eu(t,s)}))}function mx(t,e){return mi((()=>hh(Ry(ju(e,t)),-1)))}function gx(t,e){return mi((()=>hh(Ku(ju(e,t)),-1)))}function yx(t,e){return mi((()=>{const n=ju(t,e),r=Gl(Ku(t),by(),Number.MAX_VALUE),s=Ku(Eu(n,r));return $u(100,hh(s,-1))}))}function bx(t,e,n=!1){return mi((()=>{if(n)e=hp(e);else{const t=Ec(e,e.shape.length-1,!0);e=Eu(e,t)}return e=Gl(e,by(),1-by()),$i(Ec($u(Oa(t,"float32"),Xc(e)),e.shape.length-1))}))}function xx(t,e,n=!1){return mi((()=>{const r=Oa(Lc(function(t){const e=[dy(t.shape)];return Cl(t,e)}(t)),"int32"),s=(e=Gl(e,by(),1-by())).shape;return bx(Cl(ai(r,s[s.length-1]),s),e,n)}))}function wx(t,e){return mi((()=>{let n;return n=Gl(e,by(),1-by()),n=Xc(Eu(n,ju(1,n))),hh(function(t,e){if(!ct(t.shape,e.shape))throw new Sg(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return mi((()=>{const n=jh(e),r=$i(Ku(e));return Tu(ju(n,$u(e,t)),Yc(_c(r)))}))}(t,n),-1)}))}function vx(t,e){return mi((()=>{const n=fx(t,-1),r=fx(e,-1),s=$u(n,r);return $i(Ec(s,-1))}))}hx.constructors={};const kx={meanSquaredError:mx,meanAbsoluteError:gx,meanAbsolutePercentageError:yx,meanSquaredLogarithmicError:function(t,e){return mi((()=>{const n=Gl(e,by(),Number.MAX_VALUE),r=Xc(Tu(1,n)),s=Gl(t,by(),Number.MAX_VALUE),o=Xc(Tu(1,s));return hh(Ry(ju(r,o)),-1)}))},squaredHinge:function(t,e){return mi((()=>{const n=Xu(0,ju(1,$u(t,e)));return hh(Ry(n),-1)}))},hinge:function(t,e){return mi((()=>{const n=Xu(0,ju(1,$u(t,e)));return hh(n,-1)}))},categoricalHinge:function(t,e){return mi((()=>{const n=Ec($u(t,e),-1),r=Tc($u(ju(1,t),e),-1);return Xu(0,Tu(1,ju(r,n)))}))},logcosh:function(t,e){return mi((()=>{const n=Math.log(2),r=ju(e,t),s=ju(Tu(r,Jc($u(-2,r))),n);return hh(s,-1)}))},categoricalCrossentropy:bx,sparseCategoricalCrossentropy:xx,binaryCrossentropy:wx,kullbackLeiblerDivergence:function(t,e){return mi((()=>{const n=Gl(t,by(),1),r=Gl(e,by(),1);return Ec($u(t,Xc(Eu(n,r))),-1)}))},poisson:function(t,e){return mi((()=>{const n=Xc(Tu(by(),e));return hh(ju(e,$u(t,n)),-1)}))},cosineProximity:vx};function Ix(t){if("string"==typeof t){if(t in kx)return kx[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Sg(e)}return t}function Sx(t,e){return mi((()=>{const n=$u(.5,kh(e)),r=xy(zc(e,n),t.dtype);return hh(hc(t,r),-1)}))}function Nx(t,e){return mi((()=>xy(hc(al(t,-1),al(e,-1)),"float32")))}function Tx(t,e){return mi((()=>Oa(Ec(eh(hc(t,1),hc(e,1))),"float32")))}function Cx(t,e){return mi((()=>{const n=Tx(t,e),r=function(t,e){return mi((()=>Oa(Ec(eh(hc(t,0),hc(e,1))),"float32")))}(t,e),s=Tu(n,r);return Oa(pc(zc(s,0),Eu(n,s),0),"float32")}))}function Ex(t,e){return wx(t,e)}function $x(t,e){return t.rank===e.rank&&(t=bp(t,[t.rank-1])),(e=al(e,-1)).dtype!==t.dtype&&(e=Oa(e,t.dtype)),Oa(hc(t,e),"float32")}const Rx=bx,Ax=xx,_x={binaryAccuracy:Sx,categoricalAccuracy:Nx,precision:Cx,categoricalCrossentropy:Rx,sparseCategoricalCrossentropy:Ax,mse:mx,MSE:mx,mae:gx,MAE:gx,mape:yx,MAPE:yx,cosine:vx};function Mx(t){if("string"==typeof t&&t in _x)return _x[t];if("string"!=typeof t&&null!=t)return t;throw new Sg(`Unknown metric ${t}`)}function Fx(t){if(Rg(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(kx))if(kx[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(_x))if(_x[n]===t){e=n;break}return void 0!==e?e:t.name}}function Dx(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Ox(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ox(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Ox(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Ox(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Lx(t,e,n=console.log){let r="";for(let s=0;s<t.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=t[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);n(r)}function Px(t,e,n){let r,s;try{s=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){s="multiple"}try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Lx([`${t.name} (${t.getClassName()})`,s,r,t.countParams().toString()],e,n)}function zx(t,e,n,r){let s,o;try{o=t.inboundNodes.map((t=>JSON.stringify(t.inputShapes))).join(",")}catch(t){o="multiple"}try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const c of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(c)))for(let t=0;t<c.inboundLayers.length;++t){const e=c.inboundLayers[t].name,n=c.nodeIndices[t],r=c.tensorIndices[t];a.push(`${e}[${n}][${r}]`)}const i=t.name,u=t.getClassName(),l=0===a.length?"":a[0];Lx([`${i} (${u})`,o,s,t.countParams().toString(),l],e,r);for(let c=1;c<a.length;++c)Lx(["","","","",a[c]],e,r)}function Bx(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Ux(t,e){if(null===t)return null;if("string"==typeof t)return Dg(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Bx(e,s,r)?n.push(r):n.push(Ux(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Dg(n);e[t]=Ux(r,t)}}return e}}function Vx(t,e){if(null==t)return null;if("string"==typeof t)return Fg(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Bx(e,s,r)?n.push(r):n.push(Vx(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[Fg(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Vx(r,n):r}return e}}const Wx="3.21.0";class Gx extends gb{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Jg(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Ug(this.inputs).length!==this.inputs.length)throw new Sg(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);Ug(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;Rg(0===e,"input layer has >1 nodes"),Rg(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const e=this.inputLayers[y];if(!(e instanceof bb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${y} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},o={},a=[],i=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new Ig(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(Gx.nodeKey(r,s)),r.id in o||(o[r.id]=Object.keys(o).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let o=0;o<c;o++){const t=l.inputTensors[o],r=l.inboundLayers[o],s=l.nodeIndices[o],a=l.tensorIndices[o];i(t,e,n,r,s,a)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);a.push(l)},u=[],l=[];for(const y of this.outputs)i(y,u,l);const c=a.slice().reverse();for(const y of c){n[y.id]=y,y.id in e||(e[y.id]=0);let t=e[y.id];const o=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];t=Math.max(t,o),r[y.outboundLayer.id]=t,s[y.outboundLayer.id]=y.outboundLayer,e[y.id]=t;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r],o=y.nodeIndices[r],a=s.inboundNodes[o],i=null==e[a.id]?0:e[a.id];e[a.id]=Math.max(t+1,i),n[a.id]=a}}const h={};for(const y in e){const t=e[y];t in h||(h[t]=[]),h[t].push(n[y])}const p={};for(const y in r){const t=r[y];t in p||(p[t]=[]),p[t].push(s[y])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(Bg);this.layers=[];for(const y of d){const t=p[y];t.sort(((t,e)=>{const n=o[t.id],r=o[e.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Gx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(Bg);const f=this.inputs.slice(),m=[];for(const y of d)for(const t of h[y]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Ig(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const y of g){const t=g.filter((t=>t===y)).length;if(1!==t)throw new Ig(`The name "${y}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new fb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Sg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const o of this.layers)for(const t of o.weights){if(null!=n[t.originalName])throw new Sg(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const o in t){let r=o;if(null==n[o]){const t=o.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])s.push([n[r],t[o]]);else if(e)throw new Sg(`Provided weight data has no target variable: ${o}`);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Sg(`${t.length} of ${r} weights are not set: ${t}`)}cb(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Wx}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Vx(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return mi((()=>{t=Mg(t);const n=new wb;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Ib(this.outputs,n,e)}))}computeMask(t,e){return mi((()=>{let n;return t=Mg(t),n=null==e?$g(null,t.length):Mg(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=sb(t);if(e.length!==this.inputLayers.length)throw new Sg(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++){const t=this.inputLayers[a],r=e[a];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Bg);if(r.length>1)for(const a of r){const t=this.nodesByDepth[a];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(t.id))continue;const r=[];for(let a=0;a<e.inboundLayers.length;a++){const t=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a],i=n[`${t.name}_${s}_${o}`];r.push(i)}const s=sb(t.computeOutputShape(_g(r))),o=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${o}_${e}`]=s[e]}}const s=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const t=this.outputLayers[a],e=this.outputLayersNodeIndices[a],n=this.outputLayersTensorIndices[a],r=`${t.name}_${e}_${n}`;o.push(r)}for(let a=0;a<o.length;a++){const t=o[a];Rg(t in n),s.push(n[t])}return _g(s)}runInternalGraph(t,e){null==e&&(e=$g(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],s=t[i],o=e[i];n[r.id]=[s,o]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Bg);for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,o=new Array;for(const e of r)e.id in n&&o.push(n[e.id]);if(o.length===r.length){let r,a,i,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===o.length){const[e,n]=o[0];null==l.mask&&(l.mask=n),i=Mg(t.call(e,l)),u=Mg(t.computeMask(e,n)),r=[e],a=[n]}else r=o.map((t=>t[0])),a=o.map((t=>t[1])),null==l.mask&&(l.mask=a),i=Mg(t.call(r,l)),u=Mg(t.computeMask(r,a));if(t.activityRegularizer)throw new Ng("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=i[t],o=u[t];n[e.id]=[r,o]}}}}const s=[],o=[],a=[];for(const i of this.outputs){Rg(i.id in n,`Could not compute output ${i.name} : ${i.id}`);const[t,e]=n[i.id];a.push(t.shape),s.push(t),o.push(e)}return[s,o,a]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof Gx?1:0;for(let t=0;t<r.inboundNodes.length;t++){const s=Gx.nodeKey(r,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Sg(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Sg("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new Sg(`No such layer: ${t}`)}calculateLosses(){return mi((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Gx.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const t=o.getClassName(),r=o.getConfig(),s=[];for(let n=0;n<o.inboundNodes.length;n++){const t=o.inboundNodes[n],r=Gx.nodeKey(o,n);let a={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),a=t.callArgs}catch(e){console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${t.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],o=t.nodeIndices[r],i=t.tensorIndices[r];let u=e[Gx.nodeKey(s,o)];null==u&&(u=0),n.push([s.name,u,i,a])}s.push(n)}}}const a={};a.name=o.name,a.className=t,a.config=r,a.inboundNodes=s,n.push(a)}t.layers=n;const r=[];for(let o=0;o<this.inputLayers.length;o++){const t=this.inputLayers[o],n=this.inputLayersNodeIndices[o],s=Gx.nodeKey(t,n);if(!this.containerNodes.has(s))continue;let a=e[s];null==a&&(a=0);const i=this.inputLayersTensorIndices[o];r.push([t.name,a,i])}t.inputLayers=r;const s=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],n=this.outputLayersNodeIndices[o],r=Gx.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let a=e[r];null==a&&(a=0);const i=this.outputLayersTensorIndices[o];s.push([t.name,a,i])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},o={};function a(t,e){t.name in o?o[t.name].push(e):o[t.name]=[e]}function i(t,e){const n=[];let r;for(const o of e){const i=o[0],u=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in s))return void a(t,e);const c=s[i];if(c.inboundNodes.length<=u)return void a(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(_g(n),r)}function u(t){const n=t.name,o=dx(t,null!=e.customObjects?e.customObjects:{});o.setFastWeightInitDuringBuild(r),s[n]=o,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Sg(`Corrupted configuration, expected array for nodeData: ${t}`);a(o,t)}))}const l=e.name,c=e.layers;for(const m of c)u(m);for(;!Vg(o);)for(const t of c){const e=s[t.name];if(e.name in o){const t=o[e.name];delete o[e.name];for(const n of t)i(e,n)}}const h=[],p=[],d=e.inputLayers;for(const m of d){const t=m[0],e=m[1],n=m[2];Rg(t in s);const r=s[t].inboundNodes[e].outputTensors;h.push(r[n])}const f=e.outputLayers;for(const m of f){const t=m[0],e=m[1],n=m[2];Rg(t in s);const r=s[t].inboundNodes[e].outputTensors;p.push(r[n])}return new t({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Sg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){mi((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Hx(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function jx(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=mi((()=>{if(1===t.shape.length)return La(t);if(2===t.shape.length){if(t.shape[1]>1)return al(t,1);if(1===t.shape[1])return Cl(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());gi(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),Ip(s,"float32")}return null}function qx(t,e){return $u(t,e)}function Kx(t,e){let n,r;const s=e;n=s.xs,r=s.ys,st(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const o=Xx("input",t.inputNames,n),a=Xx("output",t.outputNames,r),i=o[0].shape[0];st(o.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),st(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let u=0;u<o.length;u++)st(o[u].shape[0]===i,(()=>`Batch size mismatch: input ${t.inputNames[u]} has ${o[u].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`));for(let u=0;u<a.length;u++)st(a[u].shape[0]===i,(()=>`Batch size mismatch: output ${t.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`));return{xs:o,ys:a}}function Xx(t,e,n){if(n instanceof eo)return[n];if(Array.isArray(n))return st(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Sg(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function Yx(t){return"function"==typeof t.iterator}function Jx(t){st(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Zx(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>vy(t,e,n-e))):vy(t,e,n-e)}function Qx(t,e){return mi((()=>null==t?null:Array.isArray(t)?t.map((t=>Qx(t,e))):$y(t,"int32"===e.dtype?e:Oa(e,"int32"))))}function tw(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function ew(t){const e=[];t instanceof eo&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(wy(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function nw(t,e){if(null==t)return;const n=[];if(e instanceof eo)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const s in e){const t=e[s];n.push(t.id)}const r=[];if(t instanceof eo)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const s in t){const e=t[s];-1===n.indexOf(e.id)&&r.push(e)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function rw(t){return Array.isArray(t)}function sw(t){return!function(t){return t instanceof eo}(t)&&!rw(t)}function ow(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(rw(t)&&t.length>0)e=!0;else if(sw(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Sg(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let o;if(sw(t)){o=[];for(const n of e){if(null==t[n])throw new Sg(`No data provided for "${n}". Need data for each key in: ${e}`);o.push(t[n])}}else if(rw(t)){if(t.length!==e.length)throw new Sg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);o=t}else{if(e.length>1)throw new Sg(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);o=[t]}if(o=ew(o),null!=n)for(let a=0;a<e.length;++a){if(null==n[a])continue;const t=o[a];if(t.shape.length!==n[a].length)throw new Sg(`Error when checking ${s}: expected ${e[a]} to have ${n[a].length} dimension(s). but got array with shape ${t.shape}`);for(let e=0;e<n[a].length;++e){if(0===e&&!r)continue;const o=t.shape[e],i=n[a][e];if(null!=i&&i>=0&&o!==i)throw new Sg(`${s} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${s} received an input with ${t.shape[0]} examples, each with shape [${t.shape.slice(1,t.shape.length)}] (tensor shape [${t.shape}])`)}}return o}function aw(t,e,n,r=!0,s=""){let o;if(Array.isArray(t)){if(t.length!==e.length)throw new Sg(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);o=t}else{if(e.length>1)throw new Sg(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);o=[t]}if(null!=n)for(let a=0;a<e.length;++a){if(null==n[a])continue;const t=o[a];if(t.shape.length!==n[a].length)throw new Sg(`Error when checking ${s}: expected ${e[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(t.shape)}`);for(let o=0;o<n[a].length;++o){if(0===o&&!r)continue;const i=t.shape[o],u=n[a][o];if(null!=u&&u!==i)throw new Sg(`Error when checking ${s}: expected ${e[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}class iw extends Gx{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Sg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),o=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(s?(e=e||90,n=n||[.32,.61,.89,1]):(e=e||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){o.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),Lx(o,n,r),r("=".repeat(e));const i=t.layers;for(let c=0;c<i.length;++c)s?Px(i[c],n,r):zx(i[c],n,a,r),r((c===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;return e=null!=t.collectedTrainableWeights?ib(t.collectedTrainableWeights):ib(t.trainableWeights),e}(t),l=ib(t.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>ef.adagrad(.01),Adadelta:()=>ef.adadelta(1,.95,by()),Adam:()=>ef.adam(.001,.9,.999,by()),Adamax:()=>ef.adamax(.002,.9,.999,by(),0),RMSProp:()=>ef.rmsprop(.001,.9,0,by()),SGD:()=>ef.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Sg(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Uu))throw new Sg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Sg(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Ix(t)))}else{const n=Ix(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Sg(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Ix(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const t=this.internalOutputShapes[o],e=this.outputNames[o];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],uy("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};uy("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,o;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===wx?-1!==["accuracy","acc"].indexOf(a)?r=Sx:-1!==["crossentropy","ce"].indexOf(a)&&(r=Ex):this.lossFunctions[t]===xx?-1!==["accuracy","acc"].indexOf(a)?r=$x:-1!==["crossentropy","ce"].indexOf(a)&&(r=Ax):-1!==["accuracy","acc"].indexOf(a)?r=Nx:-1!==["crossentropy","ce"].indexOf(a)&&(r=Rx),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),o=r,n=""+s}else{const t=Mx(a);o=t,n=""+Fx(a)}let e;uy(n,(()=>{e=o})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Jx(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const o=s[0].concat(s[1]);this.makeTestFunction();const a=this.testFunction;return _g(this.testLoop(a,o,r,n.verbose,n.steps))}finally{nw(s[0],t),nw(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let o=[];if(n.verbose>0)throw new Ng("Verbose mode is not implemented yet.");st(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let i=0,u=0;for(;!r||u<n.batches;){const e=await a.next();if(o=mi((()=>{if(e.value){const{xs:n,ys:r}=Kx(t,e.value),a=n.concat(r),l=mi((()=>s(a)));if(gi(a),0===u)for(let t=0;t<l.length;++t)o.push(Bu(0));const c=a[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=o[t];o[t]=mi((()=>Tu(o[t],$u(c,e)))),u>0&&gi(n)}gi(l),i+=c,++u}return o})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<o.length;++l){const t=o[l];o[l]=Eu(o[l],i),gi(t)}return _g(o)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Sg(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Sg(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Sg("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),o=new wb;if(t instanceof eo&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Sg(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)o.add(this.inputs[e],t[e])}else for(const i of this.inputs){const e=t[i.name];if(null==e)throw new Sg(`No value is provided for the model's input ${i.name}`);o.add(i,e)}const a=Ib(s,o);return n?a:a[0]}retrieveSymbolicTensors(t){const e=$g(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],o=s.map((t=>t.name));for(let r=0;r<t.length;++r){const a=o.indexOf(t[r]);if(-1!==a&&(e[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Sg(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return mi((()=>{const r=this.checkNumSamples(t);if(n)throw new Ng("Verbose predictLoop() is not implemented yet.");const s=tw(r,e),o=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)mi((()=>{const n=s[e][0],r=s[e][1],o=Zx(t,n,r),a=[];if(Array.isArray(o))for(let t=0;t<o.length;++t)a.push({key:this.inputs[t],value:o[t]});else a.push({key:this.inputs[0],value:o});const i=new wb(a);return Ib(this.outputs,i)})).forEach(((t,e)=>o[e].push(t)));return _g(o.map((t=>Rl(t,0))))}))}predict(t,e={}){const n=ew(t);aw(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Jx(r),this.predictLoop(n,r)}finally{nw(n,t)}}predictOnBatch(t){aw(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Ig("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let o=0;o<this.feedOutputShapes.length;++o){const t=this.feedOutputShapes[o];this.feedLossFns[o]===xx?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(t,e,n){const r=Ug(t.map((t=>t.shape[0])));r.sort();const s=Ug(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new Sg(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new Sg(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!ct(r,s))throw new Sg(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=ow(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=ow(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[mx,wx,bx];for(let s=0;s<t.length;++s){const o=t[s],a=e[s],i=n[s];if(null!=a){if(a===bx&&1===o.shape[o.shape.length-1])throw new Sg(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=o.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Sg(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Sg(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,o){const[a,i]=this.standardizeUserDataXY(t,e,s,o);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=Hx(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await jx(i[e],null,t[e]))}return[a,i,u]}testLoop(t,e,n,r=0,s){return mi((()=>{const o=this.checkNumSamples(e,n,s,"steps"),a=[];if(r>0)throw new Ng("Verbose mode is not implemented yet.");if(null!=s)throw new Ng("steps mode in testLoop() is not implemented yet");{const r=tw(o,n),s=Ip(gy(0,o));for(let n=0;n<r.length;++n){const o=r[n][0],i=r[n][1],u=vy(s,o,i-o),l=Qx(e,u),c=t(l);if(0===n)for(let t=0;t<c.length;++t)a.push(Bu(0));for(let t=0;t<c.length;++t){const e=c[t];a[t]=Tu(a[t],$u(i-o,e))}}for(let t=0;t<a.length;++t)a[t]=Eu(a[t],o)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;Ag(t,r)>1&&(s+=`_${Ag(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new wb(t),i=Ib(this.outputs,a,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],i[n]);null!=s[n]&&(t=qx(t,s[n]));const o=hh(t);e.push(o),u=0===n?t:Tu(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],s=this.metricsTensors[n][1];t=hh(e(r[s],i[s]))}yi(t),o.push(t)}return u=hh(u),this.calculateLosses().forEach((t=>{u=Tu(u,t)})),u}),!0,a)].concat(o)}}makeTestFunction(){this.testFunction=t=>mi((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let t=0;t<this.inputs.length;++t)o.push({key:this.inputs[t],value:r[t]});const a=new wb(o),i=Ib(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],o=hh(r(s[t],i[t]));n=0===t?o:Tu(n,o),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],o=hh(n(s[r],i[r]));e.push(o)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,o,a,i,u,l,c,h,p;t.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Jx(d);const f=!1,m=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,f,d);s=m[0],o=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Ng("validationData including sample weights is not supported yet."):new Sg(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const e=!0,n=await t.standardizeUserData(u,l,null,null,e,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];c=Zx(s,t,e),a=s,s=Zx(s,0,t),h=Zx(o,t,e),i=o,o=Zx(o,0,t),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const b=s.concat(o).concat(p);t.checkTrainableWeightsConsistency();const x=t.makeTrainFunction(),w=t.getDedupedMetricsNames();let v,k;y?(t.makeTestFunction(),v=t.testFunction,k=w.slice().concat(w.map((t=>"val_"+t)))):(v=null,g=[],k=w.slice());const I=cx(r.callbacks,r.yieldEvery),S=await async function(t,e,n,r,s,o,a,i,u,l,c,h,p,d,f){null==s&&(s=32),null==o&&(o=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=t.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=gy(0,g)),null==a&&(a=1);const{callbackList:b,history:x}=px(i,a,o,p,g,d,s,m,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let w=p;w<o;++w){await b.onEpochBegin(w);const o={};{if("batch"===c)throw new Ng("batch shuffling is not implemneted yet");c&&Y(y);const a=Ip(y),i=tw(g,s);for(let c=0;c<i.length;++c){const h={};if(await b.onBatchBegin(c,h),mi((()=>{const p=i[c][0],d=i[c][1],f=vy(a,p,d-p);h.batch=c,h.size=d-p;const g=Qx(n,f),y=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,yi(n)}if(c===i.length-1&&m){const e=t.testLoop(u,l,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];yi(s),o["val_"+n]=s}}})),await b.onBatchEnd(c,h),rx(h),t.stopTraining_)break}a.dispose()}if(await b.onEpochEnd(w,o),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,x,b,w,d,r.epochs,r.verbose,I,v,g,r.shuffle,k,r.initialEpoch,null);return S}finally{t.isTraining=!1,nw(s,e),nw(o,n),nw(a,e),nw(i,n),nw(c,u),nw(h,l),null!=p&&gi(p)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(st(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),st(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),st(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),st(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),st(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let o,a;if(s)if(Yx(n.validationData))st(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Ng("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);o=t.xs,a=t.ys}const i=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((t=>"val_"+t))):u.slice();const c=cx(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=px(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,l);p.setModel(t),t.history=d,await p.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=Kx(t,e.value),o={};o.batch=h,o.size=r[0].shape[0],await p.onBatchBegin(h,o);const a=[];if(null!=n.classWeight){const e=Hx(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await jx(s[t],null,e[t]))}const l=r.concat(s).concat(a),d=i(l);gi(l);for(let t=0;t<u.length;++t){const e=u[t],n=d[t];o[e]=n,yi(n)}await p.onBatchEnd(h,o),rx(o),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=Yx(n.validationData)?Mg(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Mg(t.evaluate(o,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],o=this.makeTrainFunction()(r.concat(s)),a=[];for(const i of o){const t=await i.data();a.push(t[0])}return gi(o),nw(n[0],t),nw(n[1],e),_g(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let o=0;o<r.length;++o)n&&!r[o].trainable||e.push({name:r[o].originalName,tensor:s[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=di().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-di().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Fg(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Fg(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Fg(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Fg(Fx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Fg(Fx(t))));{const t={};for(const e in this.metrics)t[e]=Fg(Fx(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=dx(Ux(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Dg(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Dg(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Dg(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Dg(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Dg(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=na(t);if(0===e.length)throw new Sg(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Sg(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Sg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Bo(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Wx}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await Bo(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=Ho([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Dx(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Dx(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}iw.className="Model",hu(iw);class uw extends iw{}async function lw(t,e){"modelTopology"in t||(t={modelTopology:t});let n=t.modelTopology;null!=n.model_config&&(n=n.model_config);const r=dx(Ux(n),e);if(null!=t.weightsManifest){const e=await Ha(t.weightsManifest,t.pathPrefix,r.weights.map((t=>t.originalName))),n={};for(const t of r.weights)n[t.originalName]=e[t.originalName];r.loadWeights(n),gi(e)}return r}uw.className="Functional",hu(uw);class cw extends iw{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Jg("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Sg(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof cw||t instanceof iw;let n;if(e){if(n=t,1!==n.outputs.length)throw new Sg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Sg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Sg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=xb({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Sg(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Sg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=yb(this.outputs[0])}this.inboundNodes=[],new fb({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:$g(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(ab(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new iw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Ig("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Ig("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Ig("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Ig("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,o={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Sg("Legacy serialization format not supported yet.");s=e}else st(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof cw))throw new Ng(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const i of s){const t=dx(i,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(t){if(null==this.model)throw new Sg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Sg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function hw(t){return new iw(t)}function pw(t){return new cw(t)}function dw(t,e){return null==e&&(e={}),async function(t,e){if(null==e&&(e={}),"string"==typeof t){const n=ra(t,e);if(0===n.length)n.push(Ja(t,e));else if(n.length>1)throw new Sg(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new Sg("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const o=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&o,i=dx(Ux(s),void 0,a),u=r.trainingConfig;if(null!=u&&i.loadTrainingConfig(u),null!=r.userDefinedMetadata&&i.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Sg("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=Uo(t,e),r={},s=[];return e.forEach((t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);i.loadWeights(t,o),null!=i.optimizer&&e.length>0&&await i.optimizer.setWeights(e),gi(t),gi(e.map((t=>t.tensor)))}return i}(t,0,e)}(t,e)}function fw(t){return xb(t)}function mw(t,e){hx.registerCallbackConstructor(t,e)}cw.className="Sequential",hu(cw);class gw extends lu{getConfig(){return{}}}class yw extends gw{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Ng(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return gc(t)}(t,e)}}yw.className="elu",hu(yw);class bw extends gw{apply(t){return ep(t)}}bw.className="selu",hu(bw);class xw extends gw{apply(t){return jh(t)}}xw.className="relu",hu(xw);class ww extends gw{apply(t){return mi((()=>mh(6,jh(t))))}}ww.className="relu6",hu(ww);class vw extends gw{apply(t){return t}}vw.className="linear",hu(vw);class kw extends gw{apply(t){return Al(t)}}kw.className="sigmoid",hu(kw);class Iw extends gw{apply(t){return function(t){return mi((()=>{const e=Tu(.5,$u(.2,t));return Gl(e,0,1)}))}(t)}}Iw.className="hardSigmoid",hu(Iw);class Sw extends gw{apply(t){return Jc(t)}}Sw.className="softplus",hu(Sw);class Nw extends gw{apply(t){return function(t){return mi((()=>Eu(t,Tu(Ku(t),1))))}(t)}}Nw.className="softsign",hu(Nw);class Tw extends gw{apply(t){return Ml(t)}}Tw.className="tanh",hu(Tw);class Cw extends gw{apply(t,e=-1){return hp(t,e)}}Cw.className="softmax",hu(Cw);class Ew extends gw{apply(t,e=-1){return Qc(t,e)}}Ew.className="logSoftmax",hu(Ew);class $w extends gw{apply(t,e=1){return mi((()=>$u(Al($u(t,e)),t)))}}$w.className="swish",hu($w);class Rw extends gw{apply(t){return mi((()=>$u(t,Ml(Jc(t)))))}}function Aw(t){return t.getClassName()}function _w(t,e={}){return zg(t,cu.getMap().classNameMap,e,"activation")}function Mw(t){if(null==t)return _w({className:"linear",config:{}});if("string"==typeof t){const e={};return e.className=t,e.config={},_w(e)}return t instanceof gw?t:_w(t)}function Fw(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}Rw.className="mish",hu(Rw);class Dw extends lu{}class Ow extends Dw{constructor(t){super(),Fw(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return mi((()=>{let e=ph([1]);return this.hasL1&&(e=Tu(e,Ec($u(this.l1,Ku(t))))),this.hasL2&&(e=Tu(e,Ec($u(this.l2,Ry(t))))),Cl(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Ow.className="L1L2",hu(Ow);const Lw={l1l2:"L1L2"};function Pw(t){return Lg(t)}function zw(t,e={}){return zg(t,cu.getMap().classNameMap,e,"regularizer")}function Bw(t){return null==t?null:"string"==typeof t?zw({className:t in Lw?Lw[t]:t,config:{}}):t instanceof Dw?t:zw(t)}class Uw extends gb{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=ob(t);let n=jh(t);return null!=this.maxValue&&(n=Gl(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Uw.className="ReLU",hu(Uw);class Vw extends gb{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ob(t);return Gc(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Vw.className="LeakyReLU",hu(Vw);class Ww extends gb{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=nb(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Bw(t.alphaRegularizer),this.alphaConstraint=Ob(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Sg(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=ab(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new hb({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ob(t),Ah(t,this.alpha.read())}getConfig(){const t={alphaInitializer:eb(this.alphaInitializer),alphaRegularizer:Pw(this.alphaRegularizer),alphaConstraint:Fb(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Ww.className="PReLU",hu(Ww);class Gw extends gb{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Ng(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ob(t);return gc(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Gw.className="ELU",hu(Gw);class Hw extends gb{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=ob(t);return $u(n,Oa(zc(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Hw.className="ThresholdedReLU",hu(Hw);class jw extends gb{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Cw).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ob(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function qw(t,e,n){if("number"==typeof t)return $g(t,e);if(t.length!==e)throw new Sg(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const o=t[s];if((r=o)!==parseInt(r.toString(),10))throw new Sg(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${o}`)}return t;var r}function Kw(t,e,n,r,s=1){if(null==t)return t;let o;return o="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((o+r-1)/r)}function Xw(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+my([n-e,0]);else{if("same"!==r)throw new Sg(`Unsupport padding mode: ${r}.`);t*=e}return t}function Yw(t,e){return mi((()=>(sy(e),"channelsFirst"===e?Ai(t,[0,2,3,1]):t)))}function Jw(t,e){return mi((()=>(sy(e),"channelsFirst"===e?Ai(t,[0,2,3,4,1]):t)))}function Zw(t,e,n,r=[1,1],s="valid",o,a,i=null){return mi((()=>{if(null==o&&(o="channelsLast"),sy(o),3!==t.rank&&4!==t.rank)throw new Sg(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Sg(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=Yw(t,o);if("causal"===s)throw new Ng("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Jp({x:u,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===o&&(u=Ai(u,[0,3,1,2])),u}))}jw.className="Softmax",hu(jw);class Qw extends gb{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Qw.verifyArgs(e),this.rank=t,Hg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ng(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=qw(e.kernelSize,t,"kernelSize"),this.strides=qw(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,oy(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,sy(this.dataFormat),this.activation=Mw(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=nb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ob(e.biasConstraint),this.biasRegularizer=Bw(e.biasRegularizer),this.activityRegularizer=Bw(e.activityRegularizer),this.dilationRate=qw(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Sg(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Sg(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Sg(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Rg("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Gg(t.kernelSize,"number",1,3))throw new Sg(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Aw(this.activation),useBias:this.useBias,biasInitializer:eb(this.biasInitializer),biasRegularizer:Pw(this.biasRegularizer),activityRegularizer:Pw(this.activityRegularizer),biasConstraint:Fb(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class tv extends Qw{constructor(t,e){super(t,e),this.kernel=null,tv.verifyArgs(e),this.filters=e.filters,Hg(this.filters,"filters"),this.kernelInitializer=nb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ob(e.kernelConstraint),this.kernelRegularizer=Bw(e.kernelRegularizer)}build(t){t=ab(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Sg(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return mi((()=>{let e;t=ob(t);const n=null==this.bias?null:this.bias.read(),r=qg(this.activation.getClassName());if(null!=r&&2===this.rank)e=Zw(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",o,a=1){return mi((()=>{if(null==o&&(o="channelsLast"),sy(o),3!==t.shape.length)throw new Sg(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Sg(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Sg(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===o&&(t=Ai(t,[0,2,1])),"causal"===s)throw new Ng("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Yl(t,e,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(i=_y(i,n)),i}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Zw(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ng("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",o,a){return mi((()=>{if(null==o&&(o="channelsLast"),sy(o),4!==t.rank&&5!==t.rank)throw new Sg(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Sg(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let i=Jw(t,o);if("causal"===s)throw new Ng("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ql(i,e,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(i=_y(i,n)),"channelsFirst"===o&&(i=Ai(i,[0,4,1,2,3])),i}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=ab(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=Kw(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:eb(this.kernelInitializer),kernelRegularizer:Pw(this.kernelRegularizer),kernelConstraint:Fb(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Sg(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ev extends tv{constructor(t){super(2,t),ev.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Gg(t.kernelSize,"number",1,2))throw new Sg(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ev.className="Conv2D",hu(ev);class nv extends tv{constructor(t){super(3,t),nv.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Sg(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}nv.className="Conv3D",hu(nv);class rv extends ev{constructor(t){if(super(t),this.inputSpec=[new hb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Sg(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=ab(t)).length)throw new Sg("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Sg("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hb({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return mi((()=>{let e=ob(t);if(4!==e.shape.length)throw new Sg(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,o;"channelsFirst"===this.dataFormat?(s=2,o=3):(s=1,o=2);const a=n[s],i=n[o],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,Xw(a,c,u,this.padding),Xw(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Ai(e,[0,2,3,1]));let d=Zl(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Ai(d,[0,3,1,2])),null!=this.bias&&(d=_y(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=ab(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const o=this.kernelSize[0],a=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=Xw(e[r],i,o,this.padding),e[s]=Xw(e[s],u,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}rv.className="Conv2DTranspose",hu(rv);class sv extends nv{constructor(t){if(super(t),this.inputSpec=[new hb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Sg(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=ab(t)).length)throw new Sg("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Sg("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hb({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return mi((()=>{let e=ob(t);if(5!==e.shape.length)throw new Sg(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,o,a;"channelsFirst"===this.dataFormat?(a=2,s=3,o=4):(a=1,s=2,o=3);const i=n[a],u=n[s],l=n[o],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Xw(i,d,c,this.padding),Xw(u,f,h,this.padding),Xw(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Ai(e,[0,2,3,4,1]));let y=ec(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ai(y,[0,4,1,2,3])),null!==this.bias&&(y=_y(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(t){const e=(t=ab(t)).slice();let n,r,s,o;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,o=4):(n=4,r=1,s=2,o=3);const a=this.kernelSize[0],i=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=Xw(e[r],l,a,this.padding),e[s]=Xw(e[s],c,i,this.padding),e[o]=Xw(e[o],h,u,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}sv.className="Conv3DTranspose",hu(sv);class ov extends tv{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Sg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Sg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Sg(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=nb(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Bw(e.depthwiseRegularizer),this.depthwiseConstraint=Ob(e.depthwiseConstraint),this.pointwiseInitializer=nb(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Bw(e.pointwiseRegularizer),this.pointwiseConstraint=Ob(e.pointwiseConstraint)}build(t){if((t=ab(t)).length<this.rank+2)throw new Sg(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Sg(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new hb({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return mi((()=>{let e;if(t=ob(t),1===this.rank)throw new Ng("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Ai(t,[0,2,3,1])),e=np(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=_y(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Ai(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=eb(this.depthwiseInitializer),t.pointwiseInitializer=eb(this.pointwiseInitializer),t.depthwiseRegularizer=Pw(this.depthwiseRegularizer),t.pointwiseRegularizer=Pw(this.pointwiseRegularizer),t.depthwiseConstraint=Fb(this.depthwiseConstraint),t.pointwiseConstraint=Fb(this.pointwiseConstraint),t}}ov.className="SeparableConv";class av extends ov{constructor(t){super(2,t)}}av.className="SeparableConv2D",hu(av);class iv extends tv{constructor(t){super(1,t),iv.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Gg(t.kernelSize,"number",1,1))throw new Sg(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}iv.className="Conv1D",hu(iv);class uv extends gb{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return mi((()=>{if(t=ob(t),"channelsLast"===this.dataFormat){const e=Iy(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Iy(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Iy(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Iy(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}uv.className="Cropping2D",hu(uv);class lv extends gb{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sy(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Wg(Qg,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return mi((()=>{let e=ob(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Ai(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Yd.resizeNearestNeighbor(e,[t,r]):Yd.resizeBilinear(e,[t,r]);return Ai(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Yd.resizeNearestNeighbor(e,[t,r]):Yd.resizeBilinear(e,[t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}lv.className="UpSampling2D",hu(lv);class cv extends Qw{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=nb(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ob(t.depthwiseConstraint),this.depthwiseRegularizer=Bw(t.depthwiseRegularizer)}build(t){if((t=ab(t)).length<4)throw new Sg(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Sg(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return mi((()=>{let e=function(t,e,n=[1,1],r="valid",s,o){return mi((()=>{null==s&&(s="channelsLast"),sy(s);let a=Yw(t,s);if(4!==t.rank)throw new Sg(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Sg(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=uc(a,e,n,"same"===r?"same":"valid","NHWC",o),"channelsFirst"===s&&(a=Ai(a,[0,3,1,2])),a}))}(t=ob(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=_y(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=ab(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Kw(e,this.kernelSize[0],this.padding,this.strides[0]),o=Kw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,o]:[t[0],s,o,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=eb(this.depthwiseInitializer),t.depthwiseRegularizer=Pw(this.depthwiseRegularizer),t.depthwiseConstraint=Fb(this.depthwiseRegularizer),t}}function hv(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Sg("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function pv(t,e,n,r=!1,s,o,a=!1,i=!1){return mi((()=>{const u=e.shape.length;if(u<3)throw new Sg(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(gy(2,u));if(e=Ai(e,l),null!=o)throw new Ng("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=Oa(Oa(s,"bool"),"float32")).rank===u-1&&(s=Mc(s,-1)),s=Ai(s,l)),r&&(e=Kh(e,0),null!=s&&(s=Kh(s,0)));const c=[];let h,p=n;const d=e.shape[0],f=_p(e);let m,g;null!=s&&(m=_p(s));for(let e=0;e<d;++e){const n=f[e],r=mi((()=>t(n,p)));if(null==s)h=r[0],p=r[1];else{const t=mi((()=>{const t=m[e],n=ju(kh(t),t);return{output:Tu($u(r[0],t),$u(p[0],n)),newStates:p.map(((e,s)=>Tu($u(r[1][s],t),$u(e,n))))}}));h=t.output,p=t.newStates}i&&c.push(h)}return i&&(g=xp(c,1)),[h,g,p]}))}cv.className="DepthwiseConv2D",hu(cv);class dv extends gb{constructor(t){let e;if(super(t),null==t.cell)throw new Sg("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new vv({cells:t.cell}):t.cell,null==e.stateSize)throw new Sg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new hb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?gy(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){rb(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return mi((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Ng("Constants support is not implemented in RNN yet.");rb(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new hb({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ct(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Sg(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new hb({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){mi((()=>{if(!this.stateful)throw new kg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Sg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ph([n,t]))):this.states_=[ph([n,this.cell.stateSize])];else if(null==t)gi(this.states_),null!=this.keptStates&&(gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ph([n,t]))):this.states_[0]=ph([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Sg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):gi(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,o=[n,s];if(!ct(r.shape,o))throw new Sg(`State ${e} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>yi(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=hv(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let o=[],a=[];if(null!=n){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new hb({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,o=o.concat(r),this.numConstants=r.length),o[0]instanceof pb){const n=[t].concat(o),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return mi((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=ob(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==o)throw new Sg(`RNN Layer has ${o} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},i=pv(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=i[0],l=i[1],c=i[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(t){return mi((()=>{let e=ph(t.shape);return e=Ec(e,[1,2]),e=wy(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Ty(e,[1,t]):e)):this.cell.stateSize>1?[Ty(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===dv.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=dx(e.cell,n);return new t(Object.assign(e,{cell:r}))}}dv.className="RNN",hu(dv);class fv extends gb{}class mv extends fv{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hg(this.units,"units"),this.activation=Mw(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=nb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nb(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bw(t.kernelRegularizer),this.recurrentRegularizer=Bw(t.recurrentRegularizer),this.biasRegularizer=Bw(t.biasRegularizer),this.kernelConstraint=Ob(t.kernelConstraint),this.recurrentConstraint=Ob(t.recurrentConstraint),this.biasConstraint=Ob(t.biasConstraint),this.dropout=fy([1,my([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=fy([1,my([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ab(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return mi((()=>{if(2!==t.length)throw new Sg(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kv({ones:()=>kh(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kv({ones:()=>kh(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;s=Ey(null!=o?$u(t,o):t,this.kernel.read()),null!=this.bias&&(s=_y(s,this.bias.read())),null!=a&&(n=$u(n,a));let i=Tu(s,Ey(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Aw(this.activation),useBias:this.useBias,kernelInitializer:eb(this.kernelInitializer),recurrentInitializer:eb(this.recurrentInitializer),biasInitializer:eb(this.biasInitializer),kernelRegularizer:Pw(this.kernelRegularizer),recurrentRegularizer:Pw(this.recurrentRegularizer),biasRegularizer:Pw(this.biasRegularizer),activityRegularizer:Pw(this.activityRegularizer),kernelConstraint:Fb(this.kernelConstraint),recurrentConstraint:Fb(this.recurrentConstraint),biasConstraint:Fb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}mv.className="SimpleRNNCell",hu(mv);class gv extends dv{constructor(t){t.cell=new mv(t),super(t)}call(t,e){return mi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}gv.className="SimpleRNN",hu(gv);class yv extends fv{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Sg("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Hg(this.units,"units"),this.activation=Mw(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Mw(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=nb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nb(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bw(t.kernelRegularizer),this.recurrentRegularizer=Bw(t.recurrentRegularizer),this.biasRegularizer=Bw(t.biasRegularizer),this.kernelConstraint=Ob(t.kernelConstraint),this.recurrentConstraint=Ob(t.recurrentConstraint),this.biasConstraint=Ob(t.biasConstraint),this.dropout=fy([1,my([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=fy([1,my([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=ab(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return mi((()=>{if(2!==t.length)throw new Sg(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kv({ones:()=>kh(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kv({ones:()=>kh(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let a,i,u;0<this.dropout&&this.dropout<1&&(t=$u(t,s[0]));let l=Ey(t,this.kernel.read());this.useBias&&(l=_y(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$u(r,o[0]));const c=this.recurrentKernel.read(),[h,p]=mp(c,[2*this.units,this.units],c.rank-1),d=Ey(r,h),[f,m,g]=mp(l,3,l.rank-1),[y,b]=mp(d,2,d.rank-1);a=this.recurrentActivation.apply(Tu(f,y)),i=this.recurrentActivation.apply(Tu(m,b));const x=Ey($u(i,r),p);u=this.activation.apply(Tu(g,x));const w=Tu($u(a,r),$u(Tu(1,$i(a)),u));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Aw(this.activation),recurrentActivation:Aw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:eb(this.kernelInitializer),recurrentInitializer:eb(this.recurrentInitializer),biasInitializer:eb(this.biasInitializer),kernelRegularizer:Pw(this.kernelRegularizer),recurrentRegularizer:Pw(this.recurrentRegularizer),biasRegularizer:Pw(this.biasRegularizer),activityRegularizer:Pw(this.activityRegularizer),kernelConstraint:Fb(this.kernelConstraint),recurrentConstraint:Fb(this.recurrentConstraint),biasConstraint:Fb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}yv.className="GRUCell",hu(yv);class bv extends dv{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new yv(t),super(t)}call(t,e){return mi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}bv.className="GRU",hu(bv);class xv extends fv{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Hg(this.units,"units"),this.activation=Mw(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Mw(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=nb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=nb(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=nb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Bw(t.kernelRegularizer),this.recurrentRegularizer=Bw(t.recurrentRegularizer),this.biasRegularizer=Bw(t.biasRegularizer),this.kernelConstraint=Ob(t.kernelConstraint),this.recurrentConstraint=Ob(t.recurrentConstraint),this.biasConstraint=Ob(t.biasConstraint),this.dropout=fy([1,my([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=fy([1,my([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=ab(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Ly{apply(e,r){const s=t.apply([n]),o=(new zy).apply([n]),a=t.apply([2*n]);return Ny(Ny(s,o),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return mi((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new Sg(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kv({ones:()=>kh(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kv({ones:()=>kh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,u,l,c;0<this.dropout&&this.dropout<1&&(t=$u(t,o[0]));let h=Ey(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$u(r,a[0])),h=Tu(h,Ey(r,this.recurrentKernel.read())),this.useBias&&(h=_y(h,this.bias.read()));const[p,d,f,m]=mp(h,4,h.rank-1);i=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=Tu($u(u,s),$u(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=$u(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Aw(this.activation),recurrentActivation:Aw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:eb(this.kernelInitializer),recurrentInitializer:eb(this.recurrentInitializer),biasInitializer:eb(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Pw(this.kernelRegularizer),recurrentRegularizer:Pw(this.recurrentRegularizer),biasRegularizer:Pw(this.biasRegularizer),activityRegularizer:Pw(this.activityRegularizer),kernelConstraint:Fb(this.kernelConstraint),recurrentConstraint:Fb(this.recurrentConstraint),biasConstraint:Fb(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}xv.className="LSTMCell",hu(xv);class wv extends dv{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new xv(t),super(t)}call(t,e){return mi((()=>{null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}wv.className="LSTM",hu(wv);class vv extends fv{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return mi((()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let o;for(let a=0;a<this.cells.length;++a){const i=this.cells[a];n=r[a],o=0===a?[t[0]].concat(n):[o[0]].concat(n),o=i.call(o,e),s.push(o.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[o[0]].concat(n)}))}build(t){let e;rb(t)&&(t=t[0]),this.cells.forEach(((n,r)=>{uy(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const s of e.cells)r.push(dx(s,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return lb(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}cb(e)}}function kv(t){const{ones:e,rate:n,training:r=!1,count:s=1,dropoutFunc:o}=t,a=()=>null!=o?o(e(),n):My(e(),n),i=()=>Fy(a,e,r);return!s||s<=1?yi(i().clone()):Array(s).fill(void 0).map(i).map((t=>yi(t.clone())))}vv.className="StackedRNNCells",hu(vv);class Iv extends dv{constructor(t){if(t.unroll)throw new Ng("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ng("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new hb({ndim:5})]}call(t,e){return mi((()=>{if(null!=this.cell.dropoutMask&&(gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Sg("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return mi((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=ph([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){mi((()=>{if(!this.stateful)throw new kg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Sg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ph(s))):this.states_=[ph(s)];else if(null==t)gi(this.states_),null!=this.keptStates&&(gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ph(s))):this.states_[0]=ph(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Sg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):gi(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!ct(n.shape,r))throw new Sg(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>yi(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:o,dilationRate:a}=this.cell,i="channelsFirst"===e,u=t[i?3:2],l=t[i?4:3],c=Kw(u,r[0],s,o[0],a[0]),h=Kw(l,r[1],s,o[1],a[1]);return[...t.slice(0,2),...i?[n,c,h]:[c,h,n]]}}Iv.className="ConvRNN2D";class Sv extends xv{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:o,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,Hg(this.filters,"filters"),this.kernelSize=qw(n,2,"kernelSize"),this.kernelSize.forEach((t=>Hg(t,"kernelSize"))),this.strides=qw(r||1,2,"strides"),this.strides.forEach((t=>Hg(t,"strides"))),this.padding=s||"valid",oy(this.padding),this.dataFormat=o||"channelsLast",sy(this.dataFormat),this.dilationRate=qw(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>Hg(t,"dilationRate")))}build(t){var e;t=ab(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Sg(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Ly{apply(t,e){return Sy([n.apply([r]),dh([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return mi((()=>{if(3!==t.length)throw new Sg(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],o=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=kv({ones:()=>kh(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=(t,e,n)=>e&&e[n]?$u(e[n],t):t;let u=i(r,a,0),l=i(r,a,1),c=i(r,a,2),h=i(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=kv({ones:()=>kh(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=i(s,p,0),f=i(s,p,1),m=i(s,p,2),g=i(s,p,3);const[y,b,x,w]=mp(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?mp(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,T,C,E]=mp(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(Tu(u,d)),R=this.recurrentActivation.apply(Tu(l,f)),A=Tu($u(R,o),$u($,this.activation.apply(Tu(c,m)))),_=$u(this.recurrentActivation.apply(Tu(h,g)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Xl(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?_y(s,n,this.dataFormat):s}recurrentConv(t,e){return Xl(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Sv.className="ConvLSTM2DCell",hu(Sv);class Nv extends Iv{constructor(t){const e=new Sv(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Nv.className="ConvLSTM2D",hu(Nv);class Tv extends gb{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return mi((()=>{this.invokeCallHook(t,e);const n=ob(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Fy((()=>My(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Tv.className="Dropout",hu(Tv);class Cv extends Tv{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Cv.className="SpatialDropout1D",hu(Cv);class Ev extends gb{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Hg(this.units,"units"),this.activation=Mw(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=nb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=nb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ob(t.kernelConstraint),this.biasConstraint=Ob(t.biasConstraint),this.kernelRegularizer=Bw(t.kernelRegularizer),this.biasRegularizer=Bw(t.biasRegularizer),this.activityRegularizer=Bw(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=ab(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=ab(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return mi((()=>{this.invokeCallHook(t,e);const n=ob(t),r=qg(this.activation.getClassName());let s;return null!=r?s=Ey(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Ey(n,this.kernel.read()),null!=this.bias&&(s=_y(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Aw(this.activation),useBias:this.useBias,kernelInitializer:eb(this.kernelInitializer),biasInitializer:eb(this.biasInitializer),kernelRegularizer:Pw(this.kernelRegularizer),biasRegularizer:Pw(this.biasRegularizer),activityRegularizer:Pw(this.activityRegularizer),kernelConstraint:Fb(this.kernelConstraint),biasConstraint:Fb(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Ev.className="Dense",hu(Ev);class $v extends gb{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ab(t);for(const e of t.slice(1))if(null==e)throw new Sg(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],dy(t,1)]}call(t,e){return mi((()=>{this.invokeCallHook(t,e);let n=ob(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=Ai(n,t)}return function(t){if(t.rank<=1)throw new Sg(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],dy(t.shape,1)];return Cl(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}$v.className="Flatten",hu($v);class Rv extends gb{constructor(t){super(t),this.supportsMasking=!0,this.activation=Mw(t.activation)}call(t,e){return mi((()=>{this.invokeCallHook(t,e);const n=ob(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Aw(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Rv.className="Activation",hu(Rv);class Av extends gb{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return mi((()=>{return t=ob(t),e=t,n=this.n,mi((()=>{if(2!==e.shape.length)throw new Sg(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Ty(wy(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Av.className="RepeatVector",hu(Av);class _v extends gb{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,o=null;for(let i=0;i<r.length;++i){const t=r[i];if(this.isUnknown(t)){if(null!==o)throw new Sg("Can only specifiy one unknown dimension.");o=i}else s*=t}const a=dy(t);if(null!==o){if(0===s||a%s!=0)throw new Sg(n);r[o]=a/s}else if(a!==s)throw new Sg(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return mi((()=>{this.invokeCallHook(t,e);const n=ob(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Cl(n,s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}_v.className="Reshape",hu(_v);class Mv extends gb{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=gy(1,t.dims.length+1);if(!ct(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hb({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=ab(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return Ai(ob(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Mv.className="Permute",hu(Mv);class Fv extends gb{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ob(t);return ol(vh(n,this.maskValue),-1)}call(t,e){return mi((()=>{this.invokeCallHook(t,e);const n=ob(t),r=ol(vh(n,this.maskValue),-1,!0);return $u(n,Oa(r,n.dtype))}))}}Fv.className="Masking",hu(Fv);class Dv extends gb{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Mg(t.inputLength))}this.inputDim=t.inputDim,Hg(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Hg(this.outputDim,"outputDim"),this.embeddingsInitializer=nb(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Bw(t.embeddingsRegularizer),this.activityRegularizer=Bw(t.activityRegularizer),this.embeddingsConstraint=Ob(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return mi((()=>this.maskZero?(t=ob(t),vh(t,_u(t))):null))}computeOutputShape(t){if(t=ab(t),null==this.inputLength)return[...t,this.outputDim];const e=Mg(this.inputLength);if(e.length!==t.length-1)throw new Sg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],o=t[r+1];if(null!=s&&null!=o&&s!==o)throw new Sg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return mi((()=>{this.invokeCallHook(t,e);let n=ob(t);"int32"!==n.dtype&&(n=xy(n,"int32"));const r=$y(this.embeddings.read(),Cl(n,[n.size]));return Cl(r,ab(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:eb(this.embeddingsInitializer),embeddingsRegularizer:Pw(this.embeddingsRegularizer),activityRegularizer:Pw(this.activityRegularizer),embeddingsConstraint:Fb(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Dv.className="Embedding",hu(Dv);class Ov extends gb{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ng}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],o=e[r];if(null==s||null==o||s<0||o<0)n.push(null);else if(1===s)n.push(o);else if(1===o)n.push(s);else{if(s!==o)throw new Sg("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ab(t)]),t.length<2)throw new Sg(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=Ug(e),e.length>1)throw new Sg(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===Ug(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return mi((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=my(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=wy(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const o of t){const t=o.rank;if(null==t){const t=o.shape,r=t[0],s=t.slice(1).concat([r]);let a=Cl(o,[r].concat(dy(t.slice(1))));a=Ai(a,[1,0]),a=Cl(a,s),e.push(a),n=!0}else if(t>1){const r=gy(1,t).concat([0]);e.push(Ai(o,r)),n=!0}else e.push(o)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=Cl(Ai(Cl(r,[-1,e]),[1,0]),n)}else if(s>1){const t=[s-1].concat(gy(0,s-1));r=Ai(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=Ug(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return mi((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Sg("`mask` should be an Array");if(!Array.isArray(t))throw new Sg("`inputs` should be an Array");if(e.length!==t.length)throw new Sg(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Mc(t,0))))[0];for(let t=1;t<e.length-1;++t)n=eh(n,e[t]);return n}))}}class Lv extends Ov{constructor(t){super(t)}mergeFunction(t){return mi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Tu(e,t[n]);return e}))}}Lv.className="Add",hu(Lv);class Pv extends Ov{constructor(t){super(t)}mergeFunction(t){return mi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=$u(e,t[n]);return e}))}}Pv.className="Multiply",hu(Pv);class zv extends Ov{constructor(t){super(t)}mergeFunction(t){return mi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Tu(e,t[n]);return $u(1/t.length,e)}))}}zv.className="Average",hu(zv);class Bv extends Ov{constructor(t){super(t)}mergeFunction(t){return mi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Xu(e,t[n]);return e}))}}Bv.className="Maximum",hu(Bv);class Uv extends Ov{constructor(t){super(t)}mergeFunction(t){return mi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=mh(e,t[n]);return e}))}}Uv.className="Minimum",hu(Uv);class Vv extends Ov{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Sg("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let s=!1;for(const t of n)if(ct(t,e)){s=!0;break}s||n.push(e)}if(n.length>1)throw new Sg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return mi((()=>Sy(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Sg("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Sg("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Sg("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Sg(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return mi((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let o=0;o<t.length;++o)null==e[o]?r.push(Oa(kh(t[o]),"bool")):e[o].rank<t[o].rank?r.push(Mc(e[o],-1)):r.push(e[o]);const s=Rl(r,this.axis);return sl(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Wv(t,e){for(;t<0;)t+=e;return t}Vv.className="Concatenate",hu(Vv);class Gv extends Ov{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){st(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Ng("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Sg(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Sg(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Wv(e,t[n].shape.length))):[Wv(this.axes,n.shape.length),Wv(this.axes,r.shape.length)],this.normalize&&(n=fx(n,e[0]),r=fx(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Ng("batchDot is not implemented for tensors of 4D or higher rank yet");if(st(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),st(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Ng("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const o=n;return mi((()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=Cl(e,e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Cl(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=o[0]===o[1]?Ec($u(t,e),o[0]):Ec($u(Ai(t,[1,0]),e),o[1]);else{const n=o[0]!==t.shape.length-1,r=o[1]===e.shape.length-1;a=oi(t,e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=bp(a,e)}return 1===a.shape.length&&(a=Mc(a,1)),a}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Wv(this.axes,t.length),Wv(this.axes,e.length)],n}computeOutputShape(t){st(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Ng("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Gv.className="Dot",hu(Gv);class Hv extends gb{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return mi((()=>{this.invokeCallHook(t,e);const n=ob(t);return Fy((()=>Tu(Cy(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}Hv.className="GaussianNoise",hu(Hv);class jv extends gb{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return mi((()=>{this.invokeCallHook(t,e);const n=ob(t);return this.rate>0&&this.rate<1?Fy((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return $u(n,Cy(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}jv.className="GaussianDropout",hu(jv);class qv extends gb{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ob(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return mi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),r=()=>{const e=ob(t),r=-1.7580993408473766;let s=Bc(Wh(n),this.rate);s=xy(s,"float32");const o=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-o*r*this.rate,i=Tu($u(e,s),$u(Tu(s,-1),r));return Tu($u(i,o),a)};return Fy(r,(()=>ob(t)),e.training||!1)}return t}))}}function Kv(t,e,n,r,s,o=.001){let a;if(2===t.rank)a=Ll(t,e,n,r,s,o);else if(3===t.rank)a=Pl(t,e,n,r,s,o);else{if(4!==t.rank)throw new Ng(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=zl(t,e,n,r,s,o)}return a}qv.className="AlphaDropout",hu(qv);class Xv extends gb{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=nb(t.betaInitializer||"zeros"),this.gammaInitializer=nb(t.gammaInitializer||"ones"),this.movingMeanInitializer=nb(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=nb(t.movingVarianceInitializer||"ones"),this.betaConstraint=Ob(t.betaConstraint),this.gammaConstraint=Ob(t.gammaConstraint),this.betaRegularizer=Bw(t.betaRegularizer),this.gammaRegularizer=Bw(t.gammaRegularizer)}build(t){t=ab(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Sg(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new hb({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return mi((()=>{const n=null!=e.training&&e.training,r=ob(t),s=r.shape,o=s.length,a=gy(0,o),i=this.axis>=0?this.axis:this.axis+o;a.splice(i,1);const u=$g(1,o);u[i]=s[i];const l=a.slice();l.sort();const c=!ct(l,gy(0,o).slice(0,o-1));if(!n)return(()=>{if(c){const t=Cl(this.movingMean.read(),u),e=Cl(this.movingVariance.read(),u),n=this.center?Cl(this.beta.read(),u):null,s=this.scale?Cl(this.gamma.read(),u):null;return Kv(r,t,e,n,s,this.epsilon)}return Kv(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(t,e,n,r,s=.001){return ct(r.slice().sort(),gy(0,t.rank-1))?function(t,e,n,r,s=.001){return mi((()=>{const o=bh(t,r),a=o.mean,i=o.variance;return[Kv(t,a,i,n,e,s),a,i]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return mi((()=>{const o=bh(t,r),a=o.mean,i=o.variance,u=[];for(const e of gy(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=Cl(a,u),c=Cl(i,u),h=null==e?null:Cl(e,u),p=null==n?null:Cl(n,u);return[Kv(t,l,c,p,h,s),a,i]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{mi((()=>{const r=1-n,s=t.read(),o=$u(ju(s,e),r);t.write(ju(s,o))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:eb(this.betaInitializer),gammaInitializer:eb(this.gammaInitializer),movingMeanInitializer:eb(this.movingMeanInitializer),movingVarianceInitializer:eb(this.movingVarianceInitializer),betaRegularizer:Pw(this.betaRegularizer),gammaRegularizer:Pw(this.gammaRegularizer),betaConstraint:Fb(this.betaConstraint),gammaConstraint:Fb(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Xv.className="BatchNormalization",hu(Xv);class Yv extends gb{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=nb(t.betaInitializer||"zeros"),this.gammaInitializer=nb(t.gammaInitializer||"ones"),this.betaRegularizer=Bw(t.betaRegularizer),this.gammaRegularizer=Bw(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=ab(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Ug(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=ob(t),r=n.shape,s=r.length;return mi((()=>{let{mean:t,variance:e}=bh(n,this.axis,!0);const o=$g(1,s);for(const n of this.axis)o[n]=r[n];const a=t=>null!=t&&t.shape.length!==s?Cl(t,o):t;let i=this.scale?a(this.gamma.read()):null,u=this.center?a(this.beta.read()):null;const l=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),c.push(1)):(l.push(1),c.push(r[n]));return t=Dc(t,l),e=Dc(e,l),null!=i&&(i=Dc(i,c)),null!=u&&(u=Dc(u,c)),Kv(n,t,e,u,i,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:eb(this.betaInitializer),gammaInitializer:eb(this.gammaInitializer),betaRegularizer:Pw(this.betaRegularizer),gammaRegularizer:Pw(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Yv.className="LayerNormalization",hu(Yv);class Jv extends gb{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Sg(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Sg(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Sg(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new hb({ndim:4})]}computeOutputShape(t){let e,n;return t=ab(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return mi((()=>{return e=ob(t),n=this.padding,r=this.dataFormat,mi((()=>{if(4!==e.rank)throw new Sg(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Sg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Sg(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Sh(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Zv(t,e,n,r,s,o){return mi((()=>{let a;sy(s),ay(o),oy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),t=Yw(t,s);const i="same"===r?"same":"valid";return a="max"===o?uh(t,e,n,i):El(t,e,n,i),"channelsFirst"===s&&(a=Ai(a,[0,3,1,2])),a}))}function Qv(t,e,n,r,s,o){return mi((()=>{let a;sy(s),ay(o),oy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==o&&(o="max"),t=Jw(t,s);const i="same"===r?"same":"valid";return a="max"===o?lh(t,e,n,i):$l(t,e,n,i),"channelsFirst"===s&&(a=Ai(a,[0,4,1,2,3])),a}))}Jv.className="ZeroPadding2D",hu(Jv);class tk extends gb{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Sg(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Hg(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Sg(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Hg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,oy(this.padding),this.inputSpec=[new hb({ndim:3})]}computeOutputShape(t){const e=Kw((t=ab(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return mi((()=>{this.invokeCallHook(t,e),t=wy(ob(t),2);const n=this.poolingFunction(ob(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return bp(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class ek extends tk{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return sy(s),oy(r),Zv(t,e,n,r,s,"max")}}ek.className="MaxPooling1D",hu(ek);class nk extends tk{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return sy(s),oy(r),Zv(t,e,n,r,s,"avg")}}nk.className="AveragePooling1D",hu(nk);class rk extends gb{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Sg(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Hg(this.poolSize,"poolSize"),Hg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sy(this.dataFormat),oy(this.padding),this.inputSpec=[new hb({ndim:4})]}computeOutputShape(t){t=ab(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Kw(e,this.poolSize[0],this.padding,this.strides[0]),n=Kw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return mi((()=>(this.invokeCallHook(t,e),this.poolingFunction(ob(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class sk extends rk{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return sy(s),oy(r),Zv(t,e,n,r,s,"max")}}sk.className="MaxPooling2D",hu(sk);class ok extends rk{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return sy(s),oy(r),Zv(t,e,n,r,s,"avg")}}ok.className="AveragePooling2D",hu(ok);class ak extends gb{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Sg(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Hg(this.poolSize,"poolSize"),Hg(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sy(this.dataFormat),oy(this.padding),this.inputSpec=[new hb({ndim:5})]}computeOutputShape(t){t=ab(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Kw(e,this.poolSize[0],this.padding,this.strides[0]),n=Kw(n,this.poolSize[1],this.padding,this.strides[1]),r=Kw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return mi((()=>(this.invokeCallHook(t,e),this.poolingFunction(ob(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ik extends ak{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return sy(s),oy(r),Qv(t,e,n,r,s,"max")}}ik.className="MaxPooling3D",hu(ik);class uk extends ak{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return sy(s),oy(r),Qv(t,e,n,r,s,"avg")}}uk.className="AveragePooling3D",hu(uk);class lk extends gb{constructor(t){super(t),this.inputSpec=[new hb({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ng}}class ck extends lk{constructor(t){super(t||{})}call(t,e){return mi((()=>{const e=ob(t);return hh(e,1)}))}}ck.className="GlobalAveragePooling1D",hu(ck);class hk extends lk{constructor(t){super(t||{})}call(t,e){return mi((()=>{const e=ob(t);return Tc(e,1)}))}}hk.className="GlobalMaxPooling1D",hu(hk);class pk extends gb{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,sy(this.dataFormat),this.inputSpec=[new hb({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ng}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class dk extends pk{call(t,e){return mi((()=>{const e=ob(t);return"channelsLast"===this.dataFormat?hh(e,[1,2]):hh(e,[2,3])}))}}dk.className="GlobalAveragePooling2D",hu(dk);class fk extends pk{call(t,e){return mi((()=>{const e=ob(t);return"channelsLast"===this.dataFormat?Tc(e,[1,2]):Tc(e,[2,3])}))}}fk.className="GlobalMaxPooling2D",hu(fk);class mk extends gb{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=dx(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class gk extends mk{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=ab(t)).length<3)throw new Sg(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=ab(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return mi((()=>pv(((t,n)=>[ob(this.layer.call(t,e)),[]]),t=ob(t),[],!1,null,null,!1,!0)[1]))}}gk.className="TimeDistributed",hu(gk);class yk extends mk{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=dx(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=dx(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Wg(ny,"BidirectionalMergeMode",s),t.weights)throw new Ng("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):_g(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=hv(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const o=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new Sg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const r=n.map((t=>new hb({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new Ng("Support for constants in Bidirectional layers is not implemented yet.");const i=o[0]instanceof pb;for(const u of o)if(u instanceof pb!==i)throw new Sg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(o),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return mi((()=>{const n=e.initialState;let r,s,o,a;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const o=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:o})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Kh(s,1)),"concat"===this.mergeMode?a=Sy([r,s]):"sum"===this.mergeMode?a=Tu(r,s):"ave"===this.mergeMode?a=$u(.5,Tu(r,s)):"mul"===this.mergeMode?a=$u(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(o):[a].concat(o):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){uy(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),uy(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=dx(e.layer);if(delete e.layer,null!=e.numConstants)throw new Ng("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}yk.className="Bidirectional",hu(yk);class bk extends gb{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return mi((()=>("float32"!==(t=ob(t)).dtype&&(t=xy(t,"float32")),Tu($u(t,this.scale),this.offset))))}}function xk(t){return new bb(t)}function wk(t){return new Gw(t)}function vk(t){return new Uw(t)}function kk(t){return new Vw(t)}function Ik(t){return new Ww(t)}function Sk(t){return new jw(t)}function Nk(t){return new Hw(t)}function Tk(t){return new iv(t)}function Ck(t){return new ev(t)}function Ek(t){return new rv(t)}function $k(t){return new nv(t)}function Rk(t){return new sv(t)}function Ak(t){return new av(t)}function _k(t){return new uv(t)}function Mk(t){return new lv(t)}function Fk(t){return new cv(t)}function Dk(t){return new Rv(t)}function Ok(t){return new Ev(t)}function Lk(t){return new Tv(t)}function Pk(t){return new Cv(t)}function zk(t){return new $v(t)}function Bk(t){return new Av(t)}function Uk(t){return new _v(t)}function Vk(t){return new Mv(t)}function Wk(t){return new Dv(t)}function Gk(t){return new Lv(t)}function Hk(t){return new zv(t)}function jk(t){return new Vv(t)}function qk(t){return new Bv(t)}function Kk(t){return new Uv(t)}function Xk(t){return new Pv(t)}function Yk(t){return new Gv(t)}function Jk(t){return new Xv(t)}function Zk(t){return new Yv(t)}function Qk(t){return new Jv(t)}function tI(t){return new nk(t)}function eI(t){return tI(t)}function nI(t){return tI(t)}function rI(t){return new ok(t)}function sI(t){return rI(t)}function oI(t){return rI(t)}function aI(t){return new uk(t)}function iI(t){return aI(t)}function uI(t){return aI(t)}function lI(t){return new ck(t)}function cI(t){return new dk(t)}function hI(t){return new hk(t)}function pI(t){return new fk(t)}function dI(t){return new ek(t)}function fI(t){return new sk(t)}function mI(t){return new ik(t)}function gI(t){return new bv(t)}function yI(t){return new yv(t)}function bI(t){return new wv(t)}function xI(t){return new xv(t)}function wI(t){return new gv(t)}function vI(t){return new mv(t)}function kI(t){return new Nv(t)}function II(t){return new Sv(t)}function SI(t){return new dv(t)}function NI(t){return new vv(t)}function TI(t){return new yk(t)}function CI(t){return new gk(t)}bk.className="Rescaling",hu(bk);const EI=hI,$I=pI,RI=dI,AI=fI;function _I(t){return new Hv(t)}function MI(t){return new jv(t)}function FI(t){return new qv(t)}function DI(t){return new Fv(t)}function OI(t){return new bk(t)}function LI(t,e){return Sx(t,e)}function PI(t,e){return Ex(t,e)}function zI(t,e){return $x(t,e)}function BI(t,e){return Nx(t,e)}function UI(t,e){return Rx(t,e)}function VI(t,e){return Cx(t,e)}function WI(t,e){return function(t,e){return mi((()=>{const n=Tx(t,e),r=function(t,e){return mi((()=>Oa(Ec(eh(hc(t,1),hc(e,0))),"float32")))}(t,e),s=Tu(n,r);return Oa(pc(zc(s,0),Eu(n,s),0),"float32")}))}(t,e)}function GI(t,e){return vx(t,e)}function HI(t,e){return gx(t,e)}function jI(t,e){return yx(t,e)}function qI(t,e){return yx(t,e)}function KI(t,e){return yx(t,e)}function XI(t,e){return mx(t,e)}function YI(t,e){return mx(t,e)}function JI(t,e){return mx(t,e)}function ZI(t){return new Ow(t)}function QI(t){return Fw(e=t),new Ow({l1:null!=e?e.l1:null,l2:0});var e}function tS(t){return Fw(e=t),new Ow({l2:null!=e?e.l2:null,l1:0});var e}class eS extends ox{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof iw))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function nS(t,e){return t<e}function rS(t,e){return t>e}class sS extends eS{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new Ng("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=nS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=rS:this.monitorFunc=nS,this.monitorFunc===nS&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===nS?1/0:-1/0}async onEpochEnd(t,e){await nx(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){null==t&&(t={});const e=t[this.monitor];return null==e&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),e}}const oS={earlyStopping:function(t){return new sS(t)}};var aS,iS;jt().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(aS||(aS={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(iS||(iS={}));const uS={};function lS(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};uS[t]=n}function cS(t){return uS[t]}function hS(t){delete uS[t]}function pS(t,e,n,r,s){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,a=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return dS(e.inputNames[o.inputIndexStart],n,r,s);if("tensors"===o.type)return e.inputNames.slice(t,a).map((t=>dS(t,n,r,s)));const i=dS(e.inputNames.slice(t)[0],n,r,s),u=i.dataSync();return"number"===o.type?u[0]:Ot(i.shape,u)}const a=e.attrParams[t];return a&&a.value}function dS(t,e,n,r){const[s,o]=gS(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const a=n.currentContextIds.find((t=>!!e[mS(s,t)]));return void 0!==a?e[mS(s,a)][o]:void 0}function fS(t,e){const[n,r,s]=gS(t);return[mS(n,e&&e.currentContextId),r,s]}function mS(t,e){return e?`${t}-${e}`:t}function gS(t){const e=t.split(":");if(1===e.length)return[t,0,void 0];const n=e[0],r=3===e.length?e[1]:void 0;return[n,Number(e[e.length-1]),r]}function yS(t,e,n){let r=pS("pad",t,e,n);if("explicit"===r){r=pS("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function bS(t){return t.kept?t:La(t)}const xS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],wS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vS=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],kS=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],IS=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],SS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],NS=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],TS=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],CS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],ES=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],$S=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],AS=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],_S=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],MS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],FS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],DS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],OS=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],LS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class PS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[N,T,C,E,$,R,A,_,M,F,D,O,L,P,z,B,U,V,W].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],o=[],a=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||o.push(t[e.name]),t)),{});let i=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(a);h.forEach((t=>{const e=a[t];e.inputNames.forEach(((t,n)=>{const[r,,s]=fS(t),o=a[r];if(null!=o.outputs){const t=o.outputs.indexOf(s);if(-1!==t){const s=`${r}:${t}`;e.inputNames[n]=s}}e.inputs.push(o),o.children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=a[t];0===e.children.length&&u.push(e)})):Object.keys(c).forEach((t=>{const[e]=fS(t),n=a[e];null!=n&&(n.signatureKey=c[t],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=fS(t),n=a[e];n&&(n.signatureKey=l[t],i.push(n))})):i=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:a,inputs:i,outputs:u,weights:s,placeholders:r,signature:e,functions:p};return o.length>0&&(d.initNodes=o),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=cS(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.slice(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=BS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=BS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=YS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=YS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=VS(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=VS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=XS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=XS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=US(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=US(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=ZS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ZS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=KS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=KS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=JS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=JS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=HS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=HS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=jS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=jS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=GS(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=GS(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],o=[];t.signature.inputArg.forEach((t=>{const[e]=fS(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:WS(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n})),Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach(((t,n)=>{const[s,,o]=fS(t),a=r[s];if(null!=a.outputs){const t=a.outputs.indexOf(o);if(-1!==t){const r=`${s}:${t}`;e.inputNames[n]=r}}e.inputs.push(a),a.children.push(e)}))}));const a=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=fS(a[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,o.push(s))}));const i=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:o,weights:n,placeholders:[],signature:i}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function zS(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=jt().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function BS(t,e,n,r=!1){const s=t[e];return null!=s?zS(s.s,r):n}function US(t,e,n){const r=t[e];return r?r.b:n}function VS(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function WS(t){switch("string"==typeof t&&(t=aS[t]),t){case aS.DT_FLOAT:case aS.DT_HALF:return"float32";case aS.DT_INT32:case aS.DT_INT64:case aS.DT_INT8:case aS.DT_UINT8:return"int32";case aS.DT_BOOL:return"bool";case aS.DT_DOUBLE:return"float32";case aS.DT_STRING:return"string";default:return null}}function GS(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function HS(t,e,n){const r=t[e];return r&&r.type?WS(r.type):n}function jS(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>WS(t))):n}function qS(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function KS(t,e,n){const r=t[e];return r&&r.shape?qS(r.shape):n}function XS(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function YS(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>zS(t,r))):n}function JS(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>qS(t))):n}function ZS(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class QS{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return dS(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return dS(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return VS(this.node.rawAttrs,t,e);if(null!=n.s)return BS(this.node.rawAttrs,t,e);if(null!=n.b)return US(this.node.rawAttrs,t,e);if(null!=n.shape)return KS(this.node.rawAttrs,t,e);if(null!=n.type)return HS(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return XS(this.node.rawAttrs,t,e);if(null!=n.list.s)return YS(this.node.rawAttrs,t,e);if(null!=n.list.shape)return JS(this.node.rawAttrs,t,e);if(null!=n.list.b)return ZS(this.node.rawAttrs,t,e);if(null!=n.list.type)return jS(this.node.rawAttrs,t,e)}return e}}function tN(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){st(t.length===e.length,(()=>n+` Shapes ${t} and ${e} must match`));for(let r=0;r<t.length;r++){const s=t[r],o=e[r];st(s<0||o<0||s===o,(()=>n+` Shapes ${t} and ${e} must match`))}}}function eN(t){return"number"!=typeof t&&!t.some((t=>t<0))}function nN(t,e,n){let r=rN(t,n);const s=!eN(r);if(s&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach((t=>{r=rN(t.shape,r)})),!eN(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function rN(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const s=t[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=s>=0?s:o}return n}class sN{constructor(t,e,n,r,s,o,a){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=o,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Bu(0),yi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),tN(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,yi(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Po([],[0].concat(this.elementShape));const n=this.readMany(t);return tN(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),xp(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Po([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return tN(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Rl(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,_p(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,o=[];mi((()=>{e=Cl(e,[1,n,s]);for(let n=0;n<t.length;++n){const a=[0,0===n?0:r[n-1],0],i=[1,t[n],s];o[n]=Cl(_l(e,a,i),this.elementShape)}return o}));const a=[];for(let i=0;i<t.length;i++)a[i]=i;this.writeMany(a,o)}}class oN{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);tN(e,t.shape,"TensorList shape mismatch: "),yi(t)})),this.idTensor=Bu(0),this.maxNumElements=r,yi(this.idTensor)}get id(){return this.idTensor.id}copy(){return new oN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);tN(t,this.elementShape,"TensorList shape mismatch: ");const r=nN(this.elementShape,this.tensors,t);return mi((()=>{const t=this.tensors.map((t=>Cl(t,r)));return xp(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=nN(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,tN(r.shape,t,"TensorList shape mismatch: "),Cl(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(tN(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");yi(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new oN([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);tN(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=nN(this.elementShape,this.tensors,e);return Cl(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);tN(this.elementShape,e.shape,"TensorList shape mismatch: "),yi(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);tN(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=nN(this.elementShape,this.tensors,n);return 0===t.length?Po([],[0].concat(r)):mi((()=>{const e=t.map((t=>Cl(this.tensors[t],r)));return xp(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);tN(this.elementShape,e,"TensorList shape mismatch: ");const n=nN(this.elementShape,this.tensors,e);return 0===this.size()?Po([],[0].concat(n)):mi((()=>{const t=this.tensors.map((t=>Cl(t,n)));return Rl(t,0)}))}}function aN(t,e,n){const[r,s]=pS("fusedOps",t,e,n),o="biasadd"===r,a=!o,i="prelu"===s,u="fusedbatchnorm"===r,l=pS("numArgs",t,e,n);if(o){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=pS("strides",t,e,n),h=yS(t,e,n),p=pS("dataFormat",t,e,n).toUpperCase(),d=pS("dilations",t,e,n);let[f,m]=pS("args",t,e,n);return a&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:pS("leakyreluAlpha",t,e,n)}}function iN(t,e,n){return{boxes:pS("boxes",t,e,n),scores:pS("scores",t,e,n),maxOutputSize:pS("maxOutputSize",t,e,n),iouThreshold:pS("iouThreshold",t,e,n),scoreThreshold:pS("scoreThreshold",t,e,n),softNmsSigma:pS("softNmsSigma",t,e,n)}}class uN{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Bu(0),this.tensorMap=new Map,yi(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Bu(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),mi((()=>{const t=_p(e),r=n.length,s=t.length;st(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let e=0;e<r;e++){const r=n[e],s=t[e];yi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return mi((()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],o=this.findWithDefault(s,e);t.push(o)}return xp(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function lN(t,e,n,r,s=mi){const o=((t,e,n)=>{switch(t.category){case"arithmetic":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(pS("a",t,e,n),pS("b",t,e,n))];case"AddN":return[r.addN(pS("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(pS("a",t,e,n),pS("b",t,e,n))];case"Mul":return[r.mul(pS("a",t,e,n),pS("b",t,e,n))];case"RealDiv":case"Div":return[r.div(pS("a",t,e,n),pS("b",t,e,n))];case"DivNoNan":return[r.divNoNan(pS("a",t,e,n),pS("b",t,e,n))];case"FloorDiv":return[r.floorDiv(pS("a",t,e,n),pS("b",t,e,n))];case"Sub":return[r.sub(pS("a",t,e,n),pS("b",t,e,n))];case"Minimum":return[r.minimum(pS("a",t,e,n),pS("b",t,e,n))];case"Maximum":return[r.maximum(pS("a",t,e,n),pS("b",t,e,n))];case"Pow":return[r.pow(pS("a",t,e,n),pS("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(pS("a",t,e,n),pS("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(pS("x",t,e,n))];case"Acos":return[r.acos(pS("x",t,e,n))];case"Acosh":return[r.acosh(pS("x",t,e,n))];case"Asin":return[r.asin(pS("x",t,e,n))];case"Asinh":return[r.asinh(pS("x",t,e,n))];case"Atan":return[r.atan(pS("x",t,e,n))];case"Atan2":return[r.atan2(pS("x",t,e,n),pS("y",t,e,n))];case"Atanh":return[r.atanh(pS("x",t,e,n))];case"Ceil":return[r.ceil(pS("x",t,e,n))];case"Complex":return[r.complex(pS("real",t,e,n),pS("imag",t,e,n))];case"Cos":return[r.cos(pS("x",t,e,n))];case"Cosh":return[r.cosh(pS("x",t,e,n))];case"Elu":return[r.elu(pS("x",t,e,n))];case"Erf":return[r.erf(pS("x",t,e,n))];case"Exp":return[r.exp(pS("x",t,e,n))];case"Expm1":return[r.expm1(pS("x",t,e,n))];case"Floor":return[r.floor(pS("x",t,e,n))];case"Log":return[r.log(pS("x",t,e,n))];case"Log1p":return[r.log1p(pS("x",t,e,n))];case"Imag":return[r.imag(pS("x",t,e,n))];case"Neg":return[r.neg(pS("x",t,e,n))];case"Reciprocal":return[r.reciprocal(pS("x",t,e,n))];case"Real":return[r.real(pS("x",t,e,n))];case"Relu":return[r.relu(pS("x",t,e,n))];case"Round":return[r.round(pS("x",t,e,n))];case"Selu":return[r.selu(pS("x",t,e,n))];case"Sigmoid":return[r.sigmoid(pS("x",t,e,n))];case"Sin":return[r.sin(pS("x",t,e,n))];case"Sign":return[r.sign(pS("x",t,e,n))];case"Sinh":return[r.sinh(pS("x",t,e,n))];case"Softplus":return[r.softplus(pS("x",t,e,n))];case"Sqrt":return[r.sqrt(pS("x",t,e,n))];case"Square":return[r.square(pS("x",t,e,n))];case"Tanh":return[r.tanh(pS("x",t,e,n))];case"Tan":return[r.tan(pS("x",t,e,n))];case"ClipByValue":return[r.clipByValue(pS("x",t,e,n),pS("clipValueMin",t,e,n),pS("clipValueMax",t,e,n))];case"Relu6":return[r.relu6(pS("x",t,e,n))];case"Rsqrt":return[r.rsqrt(dS(t.inputNames[0],e,n))];case"Prod":return[r.prod(pS("x",t,e,n),pS("axes",t,e,n))];case"LeakyRelu":return[r.leakyRelu(pS("x",t,e,n),pS("alpha",t,e,n))];case"Prelu":return[r.prelu(pS("x",t,e,n),pS("alpha",t,e,n))];case"IsNan":return[r.isNaN(dS(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=pS("thenBranch",t,e,n),s=pS("elseBranch",t,e,n),o=pS("cond",t,e,n),a=pS("args",t,e,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=pS("body",t,e,n),s=pS("cond",t,e,n),o=pS("args",t,e,n),a=await n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map((t=>t.id));let u=await a[0].data();a.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||t.dispose()}));let l=o;for(;u[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const o=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await o[0].data(),o.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[bS(pS("pred",t,e,n))];case"Switch":{const r=pS("pred",t,e,n);let s=pS("data",t,e,n);return s.kept||(s=bS(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==dS(t,e,n)));return r?[bS(dS(r,e,n))]:void 0}case"Enter":{const r=pS("frameName",t,e,n),s=pS("tensor",t,e,n);return n.enterFrame(r),[bS(s)]}case"Exit":{const r=pS("tensor",t,e,n);return n.exitFrame(),[bS(r)]}case"NextIteration":{const r=pS("tensor",t,e,n);return n.nextIteration(),[bS(r)]}case"TensorArrayV3":{const r=pS("size",t,e,n),s=pS("dtype",t,e,n),o=pS("elementShape",t,e,n),a=pS("dynamicSize",t,e,n),i=pS("clearAfterRead",t,e,n),u=pS("identicalElementShapes",t,e,n),l=pS("name",t,e,n),c=new sN(l,s,r,o,u,a,i);return n.addTensorArray(c),[c.idTensor,Bu(1)]}case"TensorArrayWriteV3":{const r=pS("tensorArrayId",t,e,n),s=pS("index",t,e,n),o=pS("tensor",t,e,n),a=n.getTensorArray(r.id);return a.write(s,o),[a.idTensor]}case"TensorArrayReadV3":{const r=pS("tensorArrayId",t,e,n),s=pS("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=pS("tensorArrayId",t,e,n),s=pS("indices",t,e,n),o=pS("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=pS("tensorArrayId",t,e,n),s=pS("indices",t,e,n),o=pS("tensor",t,e,n),a=n.getTensorArray(r.id);return a.scatter(s,o),[a.idTensor]}case"TensorArrayConcatV3":{const r=pS("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),o=pS("dtype",t,e,n);return[s.concat(o)]}case"TensorArraySplitV3":{const r=pS("tensorArrayId",t,e,n),s=pS("tensor",t,e,n),o=pS("lengths",t,e,n),a=n.getTensorArray(r.id);return a.split(o,s),[a.idTensor]}case"TensorArraySizeV3":{const r=pS("tensorArrayId",t,e,n);return[Bu(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=pS("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=pS("tensorListId",t,e,n),s=pS("index",t,e,n),o=pS("tensor",t,e,n),a=n.getTensorList(r.id);return a.setItem(s,o),[a.idTensor]}case"TensorListGetItem":{const r=pS("tensorListId",t,e,n),s=pS("index",t,e,n),o=pS("elementShape",t,e,n),a=pS("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=pS("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new oN([],n,t.dtype,r),a=_p(t,0);return e.forEach(((t,e)=>{o.setItem(t,a[e])})),o}(pS("tensor",t,e,n),r,pS("elementShape",t,e,n),pS("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=pS("elementShape",t,e,n),s=pS("elementDType",t,e,n);let o;o="TensorListReserve"===t.op?"numElements":"maxNumElements";const a=pS(o,t,e,n),i=function(t,e,n,r){return new oN([],t,e,r)}(r,s,0,"TensorListReserve"===t.op?-1:a);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=pS("tensorListId",t,e,n),s=pS("indices",t,e,n),o=pS("elementShape",t,e,n),a=pS("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,a,o)]}case"TensorListStack":{const r=pS("tensorListId",t,e,n),s=pS("elementShape",t,e,n),o=pS("elementDType",t,e,n),a=pS("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,o,a)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);tN(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=_p(t);return new oN(s,e,r)}(pS("tensor",t,e,n),pS("elementShape",t,e,n),pS("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=pS("tensorListId",t,e,n),s=n.getTensorList(r.id),o=pS("dtype",t,e,n),a=pS("elementShape",t,e,n);return[s.concat(o,a)]}case"TensorListPushBack":{const r=pS("tensorListId",t,e,n),s=pS("tensor",t,e,n),o=n.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=pS("tensorListId",t,e,n),s=pS("elementShape",t,e,n),o=pS("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=pS("tensor",t,e,n),s=pS("elementShape",t,e,n),o=function(t,e,n){let r=0;const s=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const o=rN(t.shape.slice(1),n),a=0===r?0:t.size/r,i=mi((()=>{const n=[];t=Cl(t,[1,r,a]);for(let r=0;r<e.length;++r){const i=[0,0===r?0:s[r-1],0],u=[1,e[r],a];n[r]=Cl(_l(t,i,u),o)}return t.dispose(),n})),u=new oN([],n,t.dtype,e.length);for(let l=0;l<i.length;l++)u.setItem(l,i[l]);return u}(r,pS("lengths",t,e,n),s);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{const r=pS("tensorListId",t,e,n);return[Bu(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=pS("tensorListId",t,e,n),s=pS("size",t,e,n),o=n.getTensorList(r.id).resize(s);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"Conv1D":{const s=pS("stride",t,e,n),o=pS("pad",t,e,n),a=pS("dataFormat",t,e,n).toUpperCase(),i=pS("dilation",t,e,n);return[r.conv1d(pS("x",t,e,n),pS("filter",t,e,n),s,o,a,i)]}case"Conv2D":{const s=pS("strides",t,e,n),o=yS(t,e,n),a=pS("dataFormat",t,e,n).toUpperCase(),i=pS("dilations",t,e,n);return[r.conv2d(pS("x",t,e,n),pS("filter",t,e,n),[s[1],s[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=aN(t,e,n);return[r.fused.conv2d({x:pS("x",t,e,n),filter:pS("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=aN(t,e,n);return[r.fused.depthwiseConv2d({x:pS("x",t,e,n),filter:pS("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=pS("outputShape",t,e,n),o=pS("strides",t,e,n),a=yS(t,e,n);return[r.conv2dTranspose(pS("x",t,e,n),pS("filter",t,e,n),s,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=pS("strides",t,e,n),o=yS(t,e,n),a=pS("dilations",t,e,n),i=pS("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(pS("input",t,e,n),pS("filter",t,e,n),[s[1],s[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const s=pS("strides",t,e,n),o=pS("pad",t,e,n),a=pS("dataFormat",t,e,n).toUpperCase(),i=pS("dilations",t,e,n);return[r.conv3d(pS("x",t,e,n),pS("filter",t,e,n),[s[1],s[2],s[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=pS("strides",t,e,n),o=pS("pad",t,e,n),a=pS("kernelSize",t,e,n);return[r.avgPool(pS("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=pS("strides",t,e,n),o=pS("pad",t,e,n),a=pS("kernelSize",t,e,n);return[r.maxPool(pS("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=pS("strides",t,e,n),o=pS("pad",t,e,n),a=pS("kernelSize",t,e,n),i=pS("includeBatchInIndex",t,e,n),{result:u,indexes:l}=r.maxPoolWithArgmax(pS("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o,i);return[u,l]}case"AvgPool3D":{const s=pS("strides",t,e,n),o=pS("pad",t,e,n),a=pS("kernelSize",t,e,n);return[r.avgPool3d(pS("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=pS("strides",t,e,n),o=pS("pad",t,e,n),a=pS("kernelSize",t,e,n);return[r.maxPool3d(pS("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=pS("strides",t,e,n),o=pS("pad",t,e,n),a=pS("dilations",t,e,n),i=s[1],u=s[2],l=a[1],c=a[2];return[r.dilation2d(pS("x",t,e,n),pS("filter",t,e,n),[i,u],o,[l,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"Fill":{const s=pS("shape",t,e,n),o=pS("dtype",t,e,n),a=pS("value",t,e,n);return[r.fill(s,a,o)]}case"LinSpace":{const s=pS("start",t,e,n),o=pS("stop",t,e,n),a=pS("num",t,e,n);return[r.linspace(s,o,a)]}case"Multinomial":{const s=pS("logits",t,e,n),o=pS("numSamples",t,e,n),a=pS("seed",t,e,n);return[r.multinomial(s,o,a)]}case"OneHot":{const s=pS("indices",t,e,n),o=pS("depth",t,e,n),a=pS("onValue",t,e,n),i=pS("offValue",t,e,n),u=pS("dtype",t,e,n);return[r.oneHot(s,o,a,i,u)]}case"Ones":return[r.ones(pS("shape",t,e,n),pS("dtype",t,e,n))];case"OnesLike":return[r.onesLike(pS("x",t,e,n))];case"RandomStandardNormal":return[r.randomStandardNormal(pS("shape",t,e,n),pS("dtype",t,e,n),pS("seed",t,e,n))];case"RandomUniform":return[r.randomUniform(pS("shape",t,e,n),pS("minval",t,e,n),pS("maxval",t,e,n),pS("dtype",t,e,n))];case"Range":{const s=pS("start",t,e,n),o=pS("stop",t,e,n),a=pS("step",t,e,n);return[r.range(s,o,a,pS("dtype",t,e,n))]}case"TruncatedNormal":{const s=pS("shape",t,e,n),o=pS("mean",t,e,n),a=pS("stdDev",t,e,n),i=pS("seed",t,e,n);return[r.truncatedNormal(s,o,a,pS("dtype",t,e,n),i)]}case"Zeros":return[r.zeros(pS("shape",t,e,n),pS("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(pS("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n,r,s=G)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=iN(t,e,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,o,a,i,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=iN(t,e,n),l=pS("padToMaxOutputSize",t,e,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,o,a,i,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=iN(t,e,n);return[await s.image.nonMaxSuppressionAsync(r,o,a,i,u)]}case"Where":{const r=s.cast(pS("condition",t,e,n),"bool"),o=[await s.whereAsync(r)];return r.dispose(),o}case"ListDiff":return s.setdiff1dAsync(pS("x",t,e,n),pS("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"LowerBound":{const s=pS("sortedSequence",t,e,n),o=pS("values",t,e,n);return[r.lowerBound(s,o)]}case"TopKV2":{const s=pS("x",t,e,n),o=pS("k",t,e,n),a=pS("sorted",t,e,n),i=r.topk(s,o,a);return[i.values,i.indices]}case"UpperBound":{const s=pS("sortedSequence",t,e,n),o=pS("values",t,e,n);return[r.upperBound(s,o)]}case"Unique":{const s=pS("x",t,e,n),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=pS("x",t,e,n),o=pS("axis",t,e,n),a=r.unique(s,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"ResizeBilinear":{const s=pS("images",t,e,n),o=pS("size",t,e,n),a=pS("alignCorners",t,e,n),i=pS("halfPixelCenters",t,e,n);return[r.image.resizeBilinear(s,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const s=pS("images",t,e,n),o=pS("size",t,e,n),a=pS("alignCorners",t,e,n),i=pS("halfPixelCenters",t,e,n);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],a,i)]}case"CropAndResize":{const s=pS("image",t,e,n),o=pS("boxes",t,e,n),a=pS("boxInd",t,e,n),i=pS("cropSize",t,e,n),u=pS("method",t,e,n),l=pS("extrapolationValue",t,e,n);return[r.image.cropAndResize(s,o,a,i,u,l)]}case"ImageProjectiveTransformV3":{const s=pS("images",t,e,n),o=pS("transforms",t,e,n),a=pS("outputShape",t,e,n),i=pS("fillValue",t,e,n),u=pS("interpolation",t,e,n),l=pS("fillMode",t,e,n);return[r.image.transform(s,o,u.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=pS("default",t,e,n);return[dS(t.name,e,n)||s];case"Placeholder":return[dS(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[bS(pS("x",t,e,n))];case"IdentityN":return pS("x",t,e,n).map((t=>bS(t)));case"Shape":return[r.tensor1d(pS("x",t,e,n).shape,"int32")];case"ShapeN":return pS("x",t,e,n).map((t=>r.tensor1d(t.shape)));case"Size":return[r.scalar(pS("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(pS("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const o=pS("x",t,e,n),a=pS("data",t,e,n),i=pS("message",t,e,n),u=pS("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"Equal":return[r.equal(pS("a",t,e,n),pS("b",t,e,n))];case"NotEqual":return[r.notEqual(pS("a",t,e,n),pS("b",t,e,n))];case"Greater":return[r.greater(pS("a",t,e,n),pS("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(pS("a",t,e,n),pS("b",t,e,n))];case"Less":return[r.less(pS("a",t,e,n),pS("b",t,e,n))];case"LessEqual":return[r.lessEqual(pS("a",t,e,n),pS("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(pS("a",t,e,n),pS("b",t,e,n))];case"LogicalNot":return[r.logicalNot(pS("a",t,e,n))];case"LogicalOr":return[r.logicalOr(pS("a",t,e,n),pS("b",t,e,n))];case"Select":case"SelectV2":return[r.where(pS("condition",t,e,n),pS("a",t,e,n),pS("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(pS("a",t,e,n),pS("b",t,e,n),pS("transposeA",t,e,n),pS("transposeB",t,e,n))];case"Einsum":return[r.einsum(pS("equation",t,e,n),...pS("tensors",t,e,n))];case"Transpose":return[r.transpose(pS("x",t,e,n),pS("perm",t,e,n))];case"_FusedMatMul":const[s,o]=pS("fusedOps",t,e,n),a="biasadd"===s,i="prelu"===o,u=pS("numArgs",t,e,n),l=pS("leakyreluAlpha",t,e,n);if(a){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=pS("args",t,e,n);return[r.fused.matMul({a:pS("a",t,e,n),b:pS("b",t,e,n),transposeA:pS("transposeA",t,e,n),transposeB:pS("transposeB",t,e,n),bias:c,activation:o,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"EuclideanNorm":return[r.euclideanNorm(pS("x",t,e,n),pS("axis",t,e,n),pS("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(pS("x",t,e,n),pS("mean",t,e,n),pS("variance",t,e,n),pS("offset",t,e,n),pS("scale",t,e,n),pS("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(pS("x",t,e,n),pS("radius",t,e,n),pS("bias",t,e,n),pS("alpha",t,e,n),pS("beta",t,e,n))];case"Softmax":return[r.softmax(pS("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(pS("x",t,e,n))];case"SparseToDense":return[r.sparseToDense(pS("sparseIndices",t,e,n),pS("outputShape",t,e,n),pS("sparseValues",t,e,n),pS("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"Max":{const s=pS("axis",t,e,n),o=pS("keepDims",t,e,n);return[r.max(pS("x",t,e,n),s,o)]}case"Mean":{const s=pS("axis",t,e,n),o=pS("keepDims",t,e,n);return[r.mean(pS("x",t,e,n),s,o)]}case"Min":{const s=pS("axis",t,e,n),o=pS("keepDims",t,e,n);return[r.min(pS("x",t,e,n),s,o)]}case"Sum":{const s=pS("axis",t,e,n),o=pS("keepDims",t,e,n);return[r.sum(pS("x",t,e,n),s,o)]}case"All":{const s=pS("axis",t,e,n),o=pS("keepDims",t,e,n);return[r.all(pS("x",t,e,n),s,o)]}case"Any":{const s=pS("axis",t,e,n),o=pS("keepDims",t,e,n);return[r.any(pS("x",t,e,n),s,o)]}case"ArgMax":{const s=pS("axis",t,e,n);return[r.argMax(pS("x",t,e,n),s)]}case"ArgMin":{const s=pS("axis",t,e,n);return[r.argMin(pS("x",t,e,n),s)]}case"Prod":{const s=pS("axis",t,e,n),o=pS("keepDims",t,e,n);return[r.prod(pS("x",t,e,n),s,o)]}case"Cumprod":{const s=pS("axis",t,e,n),o=pS("exclusive",t,e,n),a=pS("reverse",t,e,n);return[r.cumprod(pS("x",t,e,n),s,o,a)]}case"Cumsum":{const s=pS("axis",t,e,n),o=pS("exclusive",t,e,n),a=pS("reverse",t,e,n);return[r.cumsum(pS("x",t,e,n),s,o,a)]}case"Bincount":const s=pS("x",t,e,n),o=pS("weights",t,e,n),a=pS("size",t,e,n);return[r.bincount(s,o,a)];case"DenseBincount":{const s=pS("x",t,e,n),o=pS("weights",t,e,n),a=pS("size",t,e,n),i=pS("binaryOutput",t,e,n);return[r.denseBincount(s,o,a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=pS("n",t,e,n),o=pS("axis",t,e,n);let a=pS("tensors",t,e,n);return a=a.slice(0,s),[r.concat(a,o)]}case"Gather":{const s=pS("x",t,e,n),o=pS("indices",t,e,n);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=pS("axis",t,e,n),o=pS("batchDims",t,e,n),a=pS("x",t,e,n),i=pS("indices",t,e,n);return[r.gather(a,r.cast(i,"int32"),s,o)]}case"Reverse":{const s=pS("dims",t,e,n),o=[];for(let t=0;t<s.length;t++)s[t]&&o.push(t);const a=pS("x",t,e,n);return[r.reverse(a,o)]}case"ReverseV2":{const s=pS("axis",t,e,n),o=pS("x",t,e,n);return[r.reverse(o,s)]}case"Slice":{const s=pS("begin",t,e,n),o=pS("size",t,e,n);return[r.slice(pS("x",t,e,n),s,o)]}case"StridedSlice":{const s=pS("begin",t,e,n),o=pS("end",t,e,n),a=pS("strides",t,e,n),i=pS("beginMask",t,e,n),u=pS("endMask",t,e,n),l=pS("ellipsisMask",t,e,n),c=pS("newAxisMask",t,e,n),h=pS("shrinkAxisMask",t,e,n),p=pS("x",t,e,n);return[r.stridedSlice(p,s,o,a,i,u,l,c,h)]}case"Pack":return mi((()=>{const s=pS("axis",t,e,n),o=pS("tensors",t,e,n),a=o[0].shape,i=r.squeeze(o[0]).shape,u=o.map((t=>{const e=ct(t.shape,a);if(!e&&!ct(r.squeeze(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:r.reshape(t,a)}));return[r.stack(u,s)]}));case"Unpack":{const s=pS("axis",t,e,n),o=pS("tensor",t,e,n);return r.unstack(o,s)}case"Tile":{const s=pS("reps",t,e,n);return[r.tile(pS("x",t,e,n),s)]}case"Split":case"SplitV":{const s=pS("axis",t,e,n),o=pS("numOrSizeSplits",t,e,n),a=pS("x",t,e,n);return r.split(a,o,s)}case"ScatterNd":{const s=pS("indices",t,e,n),o=pS("values",t,e,n),a=pS("shape",t,e,n);return[r.scatterND(s,o,a)]}case"GatherNd":{const s=pS("x",t,e,n),o=pS("indices",t,e,n);return[r.gatherND(s,o)]}case"SparseToDense":{const s=pS("sparseIndices",t,e,n),o=pS("outputShape",t,e,n),a=pS("sparseValues",t,e,n),i=pS("defaultValue",t,e,n);return[r.sparseToDense(s,a,o,a.dtype===i.dtype?i:r.cast(i,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"sparse":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(pS("indices",t,e,n),pS("values",t,e,n),pS("denseShape",t,e,n),pS("defaultValue",t,e,n));return[s,o,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(pS("inputIndices",t,e,n),pS("inputShape",t,e,n),pS("newShape",t,e,n));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(pS("data",t,e,n),pS("indices",t,e,n),pS("segmentIds",t,e,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(pS("data",t,e,n),pS("indices",t,e,n),pS("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"FFT":return[r.fft(pS("x",t,e,n))];case"IFFT":return[r.ifft(pS("x",t,e,n))];case"RFFT":return[r.rfft(pS("x",t,e,n))];case"IRFFT":return[r.irfft(pS("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"string":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(pS("data",t,e,n),pS("dataSplits",t,e,n),pS("separator",t,e,n),pS("nGramWidths",t,e,n),pS("leftPad",t,e,n),pS("rightPad",t,e,n),pS("padWidth",t,e,n),pS("preserveShortSequences",t,e,n));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:a}=r.string.stringSplit(pS("input",t,e,n),pS("delimiter",t,e,n),pS("skipEmpty",t,e,n));return[s,o,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(pS("input",t,e,n),pS("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return s((()=>((t,e,n,r=G)=>{switch(t.op){case"Cast":return[r.cast(pS("x",t,e,n),pS("dtype",t,e,n))];case"ExpandDims":{const s=pS("axis",t,e,n);return[r.expandDims(pS("x",t,e,n),s)]}case"Squeeze":{const s=pS("axis",t,e,n);return[r.squeeze(pS("x",t,e,n),s)]}case"Reshape":return[r.reshape(pS("x",t,e,n),pS("shape",t,e,n))];case"MirrorPad":return[r.mirrorPad(pS("x",t,e,n),pS("padding",t,e,n),pS("mode",t,e,n))];case"PadV2":case"Pad":return[r.pad(pS("x",t,e,n),pS("padding",t,e,n),pS("constantValue",t,e,n))];case"SpaceToBatchND":{const s=pS("blockShape",t,e,n),o=pS("paddings",t,e,n);return[r.spaceToBatchND(pS("x",t,e,n),s,o)]}case"BatchToSpaceND":{const s=pS("blockShape",t,e,n),o=pS("crops",t,e,n);return[r.batchToSpaceND(pS("x",t,e,n),s,o)]}case"DepthToSpace":{const s=pS("blockSize",t,e,n),o=pS("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(pS("x",t,e,n),s,o)]}case"BroadcastTo":return[r.broadcastTo(pS("x",t,e,n),pS("shape",t,e,n))];case"BroadcastArgs":return[r.broadcastArgs(pS("s0",t,e,n),pS("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=pS("keyDType",t,e,n),o=pS("valueDType",t,e,n),a=new uN(s,o);return r.addHashTable(t.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=pS("tableHandle",t,e,n,r),o=pS("keys",t,e,n),a=pS("values",t,e,n),i=r.getHashTableById(s.id);return[await i.import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=pS("tableHandle",t,e,n,r),o=pS("keys",t,e,n),a=pS("defaultValue",t,e,n),i=r.getHashTableById(s.id);return[await i.find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=pS("tableHandle",t,e,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const o=cS(t.op);if(o&&o.customExecutor)return o.customExecutor(new QS(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Wt(o)?o.then((t=>[].concat(t))):[].concat(o)}class cN{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function hN(t,e,n,r){const s=new Set,o=[];let a=null,i=null;const u=new Set,l=Object.keys(t).map((t=>gS(t)[0]));let c=[];null!=r&&(c=r.map((t=>gS(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(mN(t)||gN(t)||yN(t))&&null==a&&(a=t,i=a.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&-1===l.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),h.push(t))})):o.push(t.name))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:a,syncInputs:i}}const pN=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],dN=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],fN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function mN(t){return pN.indexOf(t.op)>=0}function gN(t){return dN.indexOf(t.op)>=0}function yN(t){return fN.indexOf(t.op)>=0}class bN{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new bN(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=hN(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:o}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,o=[],a=Object.keys(s).map((t=>gS(t)[0])).map((e=>t.nodes[e])),i=t.initNodes;a.forEach((t=>{r.has(t.name)&&o.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&o.push(t)})),null!=i&&i.forEach((t=>{r.has(t.name)&&o.push(t)}));const u=new Set,l=[];for(;o.length>0;){const t=o.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&o.push(t)}))}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[gS(t)[0]])),s=e.map((t=>gS(t)[0]));let o=s.map((t=>this.graph.nodes[t]));this.resetIntermediateTensors(),0===o.length&&(o=this._outputs);const a=this.getCompilationKey(r,o);let i=this.compiledMap.get(a);null==i&&(i=this.compile(t,o),this.compiledMap.set(a,i));const u={},l={};return mi((()=>{const n=new cN(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=gS(e),o=[];o[s]=t[e],r[n]=o}));const o=this.getFrozenTensorIds(r),a={};for(let t=0;t<i.length;t++){const e=i[t];if(!r[e.name]){const t=lN(e,r,n,this._resourceManager);if(Wt(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,o,s,a)}}return null==this.parent&&n.dispose(o),e.map((t=>dS(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,o,a){"control"!==e.category&&-1===o.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(a[t.id]=(a[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const o=function(t,e,n){return e[mS(t,n.currentContextId)]}(t.name,n,r);null!=o&&o.forEach((t=>{if(t&&!t.kept&&!s.has(t.id)){const n=a[t.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=fS(e.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=t}else t.dispose();delete a[t.id]}else null!=n&&a[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((t=>this.intermediateTensors[t].forEach((t=>t.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((t=>{this.tensorsMap[t].forEach((t=>{!t||t.kept||t.isDisposed||this.keepIds.has(t.id)||t.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach((t=>t.dispose())),delete this.intermediateTensors[t]}async _executeAsync(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=jt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(t){console.warn(t.message)}this.resetIntermediateTensors();const o=new cN(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,o,e,n);const a=e.map((t=>dS(t,this.tensorsMap,o))),i=a.map((t=>t.id)),u=Object.keys(t).map((e=>t[e].id));return this.keepIds=new Set([...i,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&o.dispose(this.keepIds),a}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),o=s.map((t=>this.graph.nodes[gS(t)[0]])),a=n.map((t=>gS(t)[0]));let i=a.map((t=>this.graph.nodes[t]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=hN(t,i,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=gS(e),s=[];s[r]=t[e],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(o,p,e,d,g,m,a,f,u);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((t=>!mN(t)&&!dS(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${t}`)}return d}processStack(t,e,n,r,s,o,a,i,u){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&pS("isConstant",t.node,r,n)&&([c]=fS(t.node.name,n)),null==r[t.node.name]){const h=lN(t.node,r,n,this._resourceManager);c||([c]=fS(t.node.name,n));const p=n.currentContext;Wt(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,t.node,r,n,o,a,i),this.processChildNodes(t.node,e,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,o,a,i),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return l}processChildNodes(t,e,n,r,s,o){t.children.forEach((t=>{const[a]=fS(t.name,n);!s[a]&&o.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!dS(t,r,n)))&&(s[a]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!dS(t,r,n)))&&(s[a]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=gS(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;st(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&st(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=gS(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=gS(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class xN{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class wN{constructor(t,e={},n=a){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,null==e&&(this.loadOptions={}),this.resourceManager=new xN}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return Wt(t)?t.then((t=>this.loadSync(t))):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const t=this.artifacts.userDefinedMetadata;null!=t.signature&&(n=t.signature),null!=t.structuredOutputKeys&&(this.structuredOutputKeys=t.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new bN(PS.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=PS.Instance.transformGraph(t.modelInitializer);this.initializer=new bN(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=this.io.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){const n=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){const t={};return(n instanceof eo?[n]:n).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return n}normalizeInputs(t){if(!(t instanceof eo||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function vN(t,e={},n=a){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&"string"==typeof t&&(t=function(t){return t.endsWith("/")||(t+="/"),`${t}model.json?tfjs-format=file`}(t));const r=new wN(t,e,n);return await r.load(),r}function kN(t){if(null==t)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(t instanceof Array){const[n,r]=t;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");e=ni(Ko(n,Jo(n.weightsManifest),r))}else if("load"in t)e=t;else{if(!("modelTopology"in t&&"weightSpecs"in t&&"weightData"in t))throw new Error("Unknown model format");e=ni(t)}const n=new wN(e);return n.load(),n}const IN="3.21.0";function SN(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if($N(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const o in t){const a=SN(t[o],e,n,r);s[o]=a}return r.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function NN(t,e=CN){return TN(t,e)}function TN(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if($N(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const o in r){const r=TN(t.map((t=>t[o])),e,n);s[o]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function CN(t){return null===t?null:$N(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function EN(t,e){const n=new Map;SN(t,e,n);for(const r of Array.from(n.keys())){const t=n.get(r);if(Wt(t)){const e=await t;n.set(r,e)}}return SN(t,e,n)}function $N(t){let e=!1;if(jt().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:r}=n(4977);e=t instanceof r}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof eo)&&!(t instanceof Promise)&&!e)}function RN(t){return t instanceof eo?{value:t.clone(),recurse:!1}:$N(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class AN{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class _N extends AN{constructor(){super(_N.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function MN(t){return new ON(t)}function FN(t){return new LN(t)}_N.INITIAL_CAPACITY=32;class DN{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new GN(this,t)}filter(t){return new VN(this,t)}map(t){return new WN(this,t)}mapAsync(t){return new HN(this,t)}serialMapAsync(t){return new HN(this,t).serial()}flatmap(t){return new qN(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new UN(this,t,e)}columnMajorBatch(t,e=!0,n=CN){return this.rowMajorBatch(t,e).map((t=>NN(t,n)))}concatenate(t,e){return new KN(MN([this,t]),e)}take(t){return t<0||null==t?this:new BN(this,t)}skip(t){return t<0||null==t?this:new zN(this,t)}prefetch(t){return new JN(this,t)}shuffle(t,e){return new ZN(this,t,e)}serial(){return new PN(this)}}class ON extends DN{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,function(t,e){return SN(t,e)}(e,RN)),done:!1};var e}}class LN extends DN{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class PN extends DN{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class zN extends DN{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;gi(t.value)}return this.upstream.next()}}class BN extends DN{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class UN extends DN{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class VN extends DN{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;gi(t.value)}}}class WN extends DN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=go(t.value),n=this.transform(t.value),r=go(n);for(const s of e)mo(s,r)||s.dispose();return{value:n,done:!1}}}class GN extends DN{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class HN extends DN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=go(t.value),n=await this.transform(t.value),r=go(n);for(const s of e)mo(s,r)||s.dispose();return{value:n,done:!1}}}class jN extends DN{constructor(){super(),this.outputQueue=new _N,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class qN extends jN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=go(t.value),n=this.transform(t.value),r=go(n);this.outputQueue.pushAll(n);for(const s of e)mo(s,r)||s.dispose();return!0}}class KN extends DN{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var XN;!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(XN||(XN={}));class YN extends DN{constructor(t,e=XN.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const r=await EN(this.iterators,(function(t){return t instanceof DN?{value:t.next().then((t=>(e++,t.done&&n++,t.value))),recurse:!1}:{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case XN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case XN.SHORTEST:return{value:null,done:!0};case XN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class JN extends DN{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new AN(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class ZN extends JN{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Oh.alea(n||zs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class QN{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return st(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),tT((async()=>(await n.iterator()).columnMajorBatch(t,e,rT)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,tT((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,tT((async()=>(await e.iterator()).filter((e=>mi((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return tT((async()=>(await e.iterator()).map((e=>mi((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return tT((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return tT((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,tT((async()=>{return n=FN((async()=>({value:await e.iterator(),done:!1}))).take(t),new KN(n,r);var n,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,tT((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Oh.alea(e||zs().toString());return tT((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,tT((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function tT(t,e=null){return new class extends QN{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function eT(t){return tT((async()=>MN(t)),t.length)}function nT(t){if(!$N(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return tT((async()=>function(t,e=XN.FAIL){return new YN(t,e)}(await EN(t,(t=>{if(t instanceof QN)return{value:t.iterator(),recurse:!1};if($N(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),XN.SHORTEST)),e)}function rT(t){return null===t?null:null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof eo||Nt(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof eo?xp(t):Po(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}QN.MAX_BUFFER_SIZE=1e4;class sT extends QN{constructor(t){super(),this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t)))}}const oT='"',aT=Symbol("out"),iT=Symbol("field"),uT=Symbol("quote"),lT=Symbol("quoteafterquote"),cT=Symbol("quoteinquote");class hT extends QN{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new sT(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(st(null==e.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&st(t.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce(((t,e)=>(t[e]=t[e]+1||1,t)),{}),n=Object.keys(e).filter((t=>e[t]>1));if(st(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map((t=>this.makeDataElement(t)))}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const o=this.fullColumnNames[s],a=this.columnConfigs?this.columnConfigs[o]:null;if(!this.configuredColumnsOnly||a){const i=e[s];let u=null;if(""===i)if(a&&void 0!==a.default)u=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${o} is empty in this line: ${t}`);u=void 0}else{const t=Number(i);if(isNaN(t))u=a&&"bool"===a.dtype?this.getBoolean(i):i;else if(a&&a.dtype)switch(a.dtype){case"float32":default:u=t;break;case"int32":u=Math.floor(t);break;case"bool":u=this.getBoolean(i)}else u=t}a&&a.isLabel?r[o]=u:n[o]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const s=t.length;let o=aT;for(let a=0;a<s;a++)switch(o){case aT:switch(t.charAt(a)){case oT:r=a+1,o=uT;break;case this.delimiter:if(r=a+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),o=aT;break;default:o=iT,r=a}break;case iT:t.charAt(a)===this.delimiter&&(n.push(t.substring(r,a)),o=aT,r=a+1);break;case uT:t.charAt(a)===oT&&(o=lT);break;case lT:switch(t.charAt(a)){case this.delimiter:n.push(t.substring(r,a-1)),o=aT,r=a+1;break;case oT:o=uT;break;default:o=cT}break;case cT:t.charAt(a)===oT&&(o=uT)}if(o===lT?n.push(t.substring(r,s-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class pT extends DN{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(!jt().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const e=new pT(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(t){throw new Error(`Error thrown while initializing video stream: ${t.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=await this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],e=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:t,timeDataQueue:e}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach(((t,r)=>n.set(t,r*e))),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(ut(e));return n.set(t,n.length-t.length),Po(n,e)}}class dT extends DN{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ip([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,s=n+t,o=e+r;this.cropBox=Sp([r,n,o,s],[1,4])}else this.cropBox=Sp([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(!jt().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new dT(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&st("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=Ui(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{t.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return mi((()=>{const e=Mc(Oa(t,"float32"),0);let n;n=Yd.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Cl(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((t=>t.stop()));try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class fT{}class mT extends DN{split(t){return new gT(this,t)}}class gT extends mT{constructor(t,e){super(),this.upstream=t,this.impl=new yT(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class yT extends jN{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}class bT extends DN{decodeUTF8(){return new xT(this)}}class xT extends mT{constructor(t){super(),this.upstream=t,this.impl=new wT(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class wT extends jN{constructor(t){if(super(),this.upstream=t,jt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(1601);this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let e,n;return!t.done&&(e=t.value,n=jt().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(n),!0)}}class vT extends bT{constructor(t,e={}){super(),this.file=t,this.options=e,st(t instanceof Uint8Array||!!jt().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise(((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(s)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await t,done:!1}}}function kT(t){return"string"==typeof t&&"file://"===t.slice(0,7)}class IT extends fT{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(kT(this.input)&&jt().get("IS_NODE")){const t=n(7792);this.input=t.readFileSync(this.input.slice(7))}return new vT(this.input,this.options)}}class ST extends fT{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return kT(this.url)?new IT(this.url,this.fileOptions).iterator():async function(t,e={},n){let r,s;var o;"string"==typeof t?r=t:(r=t.url,s={method:(o=t).method,headers:o.headers,body:o.body,mode:o.mode,credentials:o.credentials,cache:o.cache,redirect:o.redirect,referrer:o.referrer,integrity:o.integrity});const a=await(n||Bs)(r,s);if(a.ok){const t=new Uint8Array(await a.arrayBuffer());return new vT(t,e)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function NT(t,e={}){return new hT(new ST(t),e)}function TT(t){const e=FN(t);return tT((async()=>e))}function CT(t){return tT((async()=>{const e=await t();return FN((()=>e.next()))}))}async function ET(t,e){return dT.create(t,e)}async function $T(t){return pT.create(t)}const RT="3.21.0";function AT(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&st("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}const _T=Dp;class MT extends K{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new q(this,pi())}nextDataId(){return MT.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,jt().get("IS_NODE")&&cs("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&Et(n[0])){const s=n.map((t=>Us(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Ef(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>Vs(t)));return Da(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Da(t.shape,t.dtype,e)}makeOutput(t,e,n){return pi().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=zs();return t(),{kernelMs:zs()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){AT([t],"where");const e=this.readSync(t.dataId);return _T(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function FT(t,e,n){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;if(AT(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,u=i.data.get(a.dataId).values,l=ut(a.shape),c=n||a.dtype,h=vt(c,l);for(let t=0;t<l;++t)h[t]=e(u[t],s);return i.makeTensorInfo(a.shape,c,h)}}function DT(t,e,n){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;if(AT(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,u=i.data.get(a.dataId).values,l=n||a.dtype,c=e(u,l,s);return i.makeTensorInfo(a.shape,l,c)}}MT.nextDataId=0,Ni("cpu",(()=>new MT),1);const OT=FT(Ke,(t=>t>=0?t:Math.exp(t)-1)),LT={kernelName:Ke,backendName:"cpu",kernelFunc:OT};function PT(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const zT={kernelName:pn,backendName:"cpu",kernelFunc:PT};function BT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r;AT([s],"leakyRelu");const a=ut(s.shape),i=n.data.get(s.dataId).values,u=wt("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?o*i[l]:i[l];return n.makeTensorInfo(s.shape,"float32",u)}const UT={kernelName:bn,backendName:"cpu",kernelFunc:BT};function VT(t){return(e,n,r,s,o)=>{const a=Di(e,n),i=a.length,u=Ft(a),l=wt(o,ut(a)),c=e.length,h=n.length,p=Ft(e),d=Ft(n),f=Mi(e,a),m=Mi(n,a);if(f.length+m.length===0)for(let g=0;g<l.length;++g)l[g]=t(r[g%r.length],s[g%s.length]);else for(let g=0;g<l.length;++g){const e=Vt(g,i,u),n=e.slice(-c);f.forEach((t=>n[t]=0));const o=Ut(n,c,p),a=e.slice(-h);m.forEach((t=>a[t]=0));const y=Ut(a,h,d);l[g]=t(r[o],s[y])}return[l,a]}}const WT=VT(((t,e)=>t<0?e*t:t));function GT(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;AT([r,s],"prelu");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[i,u]=WT(r.shape,s.shape,o,a,"float32");return n.makeTensorInfo(u,"float32",i)}const HT={kernelName:rr,backendName:"cpu",kernelFunc:GT},jT=FT(cr,(t=>Math.max(0,t))),qT={kernelName:cr,backendName:"cpu",kernelFunc:jT},KT=FT(gr,(t=>Math.min(Math.max(0,t),6))),XT={kernelName:gr,backendName:"cpu",kernelFunc:KT};function YT(t){return(e,n,r)=>{const s=wt(n,e.length);for(let o=0;o<e.length;++o)s[o]=t(e[o],r);return s}}const JT=YT((t=>1/(1+Math.exp(-t)))),ZT=FT(Er,(t=>1/(1+Math.exp(-t)))),QT={kernelName:Er,backendName:"cpu",kernelFunc:ZT};function tC(t,e,n,r,s){if("linear"===n)return PT({inputs:{x:e},backend:t});if("relu"===n)return jT({inputs:{x:e},backend:t});if("elu"===n)return OT({inputs:{x:e},backend:t});if("relu6"===n)return KT({inputs:{x:e},backend:t});if("prelu"===n)return GT({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return BT({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return ZT({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function eC(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(s.shape,"float32",a)},i}const nC={kernelName:Ie,backendName:"cpu",kernelFunc:eC};function rC(t,e,n="float32"){if("complex64"===n)return eC({inputs:{real:rC(t,e,"float32"),imag:rC(t,e,"float32")},backend:t});const r=Pt(ut(e),n);return t.makeTensorInfo(e,n,r)}function sC(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const oC={kernelName:ur,backendName:"cpu",kernelFunc:sC};function aC(t,e,n,r){if("int32"===r)return[e,"int32",Int32Array.from(t)];if("bool"===r){const r=Ps([0],n),[s,o]=VT(((t,e)=>t!==e?1:0))(e,[],t,r,"bool");return[o,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function iC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return PT({inputs:{x:s},backend:n});const t=rC(n,s.shape,s.dtype),e=iC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=eC({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=sC({inputs:{input:s},backend:n}),e=iC({inputs:{x:t},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(t),e}if(!St(s.dtype,o)){const t=PT({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:o}}const a=n.data.get(s.dataId).values,[i,u,l]=aC(a,s.shape,s.dtype,o);return n.makeTensorInfo(i,u,l)}const uC={kernelName:we,backendName:"cpu",kernelFunc:iC};function lC(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:o,b:a}=n,i=s;AT([o,a],t);const u=i.data.get(o.dataId).values,l=i.data.get(a.dataId).values,c="string"===o.dtype?om(u):u,h="string"===o.dtype?om(l):l,p=r||o.dtype,[d,f]=e(o.shape,a.shape,c,h,p);return i.makeTensorInfo(f,p,d)}:({inputs:t,backend:s})=>{const{a:o,b:a}=t,i=s;if("complex64"===o.dtype||"complex64"===a.dtype){const t=iC({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),e=i.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(s.dataId).values,c=iC({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),h=i.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(d.dataId).values,[g,y,b]=n(o.shape,a.shape,u,l,f,m),x=i.makeTensorInfo(b,"float32",g),w=i.makeTensorInfo(b,"float32",y),v=eC({inputs:{real:x,imag:w},backend:i});return i.disposeIntermediateTensorInfo(t),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(w),v}{const t=i.data.get(o.dataId).values,n=i.data.get(a.dataId).values,s=r||o.dtype,[u,l]=e(o.shape,a.shape,t,n,s);return i.makeTensorInfo(l,s,u)}}}function cC(t){return(e,n,r,s,o,a)=>{const i=Di(e,n),u=ut(i),l=i.length,c=Ft(i),h=wt("float32",u),p=wt("float32",u),d=Mi(e,i),f=Mi(n,i),m=Ef(r,s),g=Ef(o,a),y=e.length,b=Ft(e),x=n.length,w=Ft(n);if(d.length+f.length===0)for(let v=0;v<h.length;v++){const e=v%m.length,n=v%g.length,r=t(m[2*e],m[2*e+1],g[2*n],g[2*n+1]);h[v]=r.real,p[v]=r.imag}else for(let v=0;v<h.length;v++){const e=Vt(v,l,c),n=e.slice(-y);d.forEach((t=>n[t]=0));const r=Ut(n,y,b),s=e.slice(-x);f.forEach((t=>s[t]=0));const o=Ut(s,x,w),a=t(m[2*r],m[2*r+1],g[2*o],g[2*o+1]);h[v]=a.real,p[v]=a.imag}return[h,p,i]}}const hC=VT(((t,e)=>t+e)),pC=cC(((t,e,n,r)=>({real:t+n,imag:e+r}))),dC=lC(te,hC,pC),fC={kernelName:te,backendName:"cpu",kernelFunc:dC};function mC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:o}=r,a=ut(s.shape),i=yt(o,a),u=ut(i);st(a===u,(()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=i,e.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const gC={kernelName:hr,backendName:"cpu",kernelFunc:mC};function yC(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;AT([s,o],"matMul");const u=s.shape.length,l=o.shape.length,c=a?s.shape[u-2]:s.shape[u-1],h=i?o.shape[l-1]:o.shape[l-2],p=a?s.shape[u-1]:s.shape[u-2],d=i?o.shape[l-2]:o.shape[l-1],f=s.shape.slice(0,-2),m=o.shape.slice(0,-2),g=ut(f),y=ut(m),b=Di(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,d]);st(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`));const x=i?[y,d,h]:[y,h,d],w=mC({inputs:{x:s},backend:n,attrs:{shape:a?[g,c,p]:[g,p,c]}}),v=mC({inputs:{x:o},backend:n,attrs:{shape:x}}),k=a?w.shape[1]:w.shape[2],I=a?w.shape[2]:w.shape[1],S=i?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,E=Ft(w.shape),$=Ft(v.shape),[R,A,_]=a?[E[0],1,E[1]]:[E[0],E[1],1],[M,F,D]=i?[1,$[1],$[0]]:[$[1],1,$[0]],O=I*S,L=Da([N,I,S],w.dtype),P=L.values,z=n.blockSize;for(let B=0;B<N;B++)for(let t=0;t<I;t+=z)for(let e=0;e<S;e+=z)for(let n=0;n<k;n+=z){const r=Math.min(t+z,I),s=Math.min(e+z,S),o=Math.min(n+z,k);for(let a=t;a<r;a++)for(let t=e;t<s;t++){let e=0;for(let r=n;r<o;r++){const n=Math.min(B,g-1)*R,s=Math.min(B,y-1)*D;e+=T[n+a*A+r*_]*C[r*M+t*F+s]}P[B*O+(a*S+t)]+=e}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const bC={kernelName:me,backendName:"cpu",kernelFunc:yC},xC={kernelName:is,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=yC({inputs:{a:s,b:o},attrs:{transposeA:u,transposeB:l},backend:n}),a&&(d=dC({inputs:{a:p,b:a},backend:n}),m.push(p),p=d),c&&(f=tC(n,p,c,i,h),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}};function wC(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const vC={kernelName:Jt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;AT(e,"abs");let r=new Float32Array(ut(e.shape));return r=wC(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},kC=FT(Zt,(t=>Math.acos(t))),IC={kernelName:Zt,backendName:"cpu",kernelFunc:kC},SC=FT(Qt,(t=>Math.acosh(t))),NC={kernelName:Qt,backendName:"cpu",kernelFunc:SC},TC={kernelName:ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;AT(e,"addN");const s=r.map((t=>n.data.get(t.dataId).values)),o=Da(r[0].shape,r[0].dtype),a=o.values;for(let i=0;i<r.length;i++){const t=s[i];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function CC(t,e,n,r,s){const o=e.length,a=ut(e),i=Ft(e),u=Ft(s),l=wt(n,ut(s));for(let c=0;c<a;++c){const e=Vt(c,o,i),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];l[Ut(n,o,u)]=t[c]}return l}function EC(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:o}=n;AT(s,"transpose");const a=s.shape.length,i=new Array(a);for(let l=0;l<i.length;l++)i[l]=s.shape[o[l]];const u=CC(r.data.get(s.dataId).values,s.shape,s.dtype,o,i);return{dataId:r.write(u,i,s.dtype),shape:i,dtype:s.dtype}}const $C={kernelName:Zr,backendName:"cpu",kernelFunc:EC},RC={kernelName:ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;AT(s,"all");const i=bt(o,s.shape);let u=i;const l=Ic(u,s.shape.length);let c=s;null!=l&&(c=EC({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Nc(u.length,s.shape.length)),kc("all",u,c.shape.length);const[h,p]=wc(c.shape,u),d=ut(p),f=Pt(ut(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const t=y*d;let e=m[t];for(let n=0;n<d;++n){const r=m[t+n];e=e&&r}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=mC({inputs:{x:g},backend:n,attrs:{shape:vc(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},AC={kernelName:re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;AT(s,"any");const i=bt(o,s.shape);let u=i;const l=Ic(u,s.shape.length);let c=s;null!=l&&(c=EC({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Nc(u.length,s.shape.length)),kc("any",u,c.shape.length);const[h,p]=wc(c.shape,u),d=ut(p),f=Pt(ut(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const t=y*d;let e=m[t];for(let n=0;n<d;++n){const r=m[t+n];e=e||r}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=mC({inputs:{x:g},backend:n,attrs:{shape:vc(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},_C={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;AT(s,"argMax");let a=bt(o,s.shape);const i=Ic(a,s.shape.length);let u=s;const l=[];null!=i&&(u=EC({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Nc(a.length,u.shape.length)),a=[a[0]],kc("argMax",a,u.shape.length);const[c,h]=wc(u.shape,a),p=Pt(ut(c),"int32"),d=ut(h),f=n.data.get(u.dataId).values;for(let m=0;m<p.length;++m){const t=m*d;let e=f[t],n=0;for(let r=0;r<d;++r){const s=f[t+r];s>e&&(e=s,n=r)}p[m]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},MC={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;AT(s,"argMin");let a=bt(o,s.shape);const i=Ic(a,s.shape.length);let u=s;const l=[];null!=i&&(u=EC({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Nc(a.length,u.shape.length)),a=[a[0]],kc("argMin",a,u.shape.length);const[c,h]=wc(u.shape,a),p=Pt(ut(c),"int32"),d=ut(h),f=n.data.get(u.dataId).values;for(let m=0;m<p.length;++m){const t=m*d;let e=f[t],n=0;for(let r=0;r<d;++r){const s=f[t+r];s<e&&(e=s,n=r)}p[m]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},FC=FT(ae,(t=>Math.asin(t))),DC={kernelName:ae,backendName:"cpu",kernelFunc:FC},OC=FT(ie,(t=>Math.asinh(t))),LC={kernelName:ie,backendName:"cpu",kernelFunc:OC},PC=FT(ue,(t=>Math.atan(t))),zC={kernelName:ue,backendName:"cpu",kernelFunc:PC},BC=VT(((t,e)=>Math.atan2(t,e))),UC=lC(ce,BC),VC={kernelName:ce,backendName:"cpu",kernelFunc:UC},WC=FT(le,(t=>Math.atanh(t))),GC={kernelName:le,backendName:"cpu",kernelFunc:WC};function HC(t,e,n,r,s,o){const a=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Da(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let w=0;w<s.batchSize;++w){const e=w*y,n=w*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const w=y*a-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=e+y*b;for(let e=0;e<s.outWidth;++e){const a=e*i-d,c=Math.max(0,a),p=Math.min(s.inWidth,h+a);let y=f,b=0,w=0;for(let e=v;e<k;e+=u){const s=n+e*r[1];for(let e=c;e<p;e+=l){const n=t[s+e*r[2]+m];"max"===o&&n>y?y=n:"avg"===o&&(b+=n,w++)}if(isNaN(y))break}g[I+e*x+m]="avg"===o?b/w:y}}}return m}function jC(t,e,n,r,s=!1,o=!1){const a=Da(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Da(e,n,t);for(let g=0;g<r.batchSize;++g)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*i-d;let y=n;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+n);for(let i=0;i<r.outWidth;++i){const h=i*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let e=y;e<b;e+=l){const a=e-n;for(let n=d;n<x;n+=c){const i=n-h,u=m.get(g,e,n,t);u>w&&(w=u,v=s?o?((g*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:a*p+i)}}a.set(v,g,e,i,t)}}return a}function qC(t,e,n,r,s,o){const a=s.strideDepth,i=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Da(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let N=0;N<s.batchSize;++N){const e=N*v,n=N*r[0];for(let x=0;x<s.inChannels;++x)for(let v=0;v<s.outDepth;++v){const N=v*a-m;let T=N;for(;T<0;)T+=l;const C=Math.min(s.inDepth,p+N),E=e+v*k;for(let e=0;e<s.outHeight;++e){const a=e*i-g;let p=a;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+a),v=E+e*I;for(let e=0;e<s.outWidth;++e){const a=e*u-y;let i=a;for(;i<0;)i+=h;const d=Math.min(s.inWidth,f+a),g=v+e*S;let k=b,I=0,N=0;for(let e=T;e<C;e+=l){const s=n+e*r[1];for(let e=p;e<m;e+=c){const n=s+e*r[2];for(let e=i;e<d;e+=h){const s=t[n+e*r[3]+x];if("max"===o&&s>k?k=s:"avg"===o&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===o?I/N:k}}}}return x}const KC={kernelName:he,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;AT(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r;st(Sl(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=fl(s.shape,o,a,1,i,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))c=PT({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=Ft(s.shape),r=HC(t,s.shape,s.dtype,e,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},XC={kernelName:de,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=r;AT(s,"avgPool3d");const c=ml(s.shape,o,a,1,i,u,l),h=qC(n.data.get(s.dataId).values,s.shape,s.dtype,Ft(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},YC={kernelName:fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=r;AT([s,o],"avgPool3DGrad");const c=ml(o.shape,a,i,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=Da(o.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(s);for(let $=0;$<c.batchSize;++$)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=e-I,o=n-N,a=r-S;let i=0;for(let e=0;e<w;e+=y){const n=(s+e)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let e=0;e<v;e+=b){const r=(o+e)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let e=0;e<k;e+=x){const s=(a+e)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=E.get($,n,r,s,t))}}}T.set(i*C,$,e,n,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},JC={kernelName:pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o;AT([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=fl(a.shape,i,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Da(a.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,S=Da(s.shape,"float32",I);for(let N=0;N<c.batchSize;++N)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inHeight;++e)for(let n=0;n<c.inWidth;++n){const r=e-w,s=n-x;let o=0;for(let e=0;e<y;e+=m){const n=(r+e)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let e=0;e<b;e+=g){const r=(s+e)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(o+=S.get(N,n,r,t))}}v.set(o*k,N,e,n,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},ZC={kernelName:an,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:o,offset:a,mean:i,variance:u}=e;st(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),st(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),st(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),AT([s,i,u,o,a],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=n.data.get(u.dataId).values,d=o?n.data.get(o.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let S=0;S<c.length;++S)m[S]=f[w++]+(c[S]-h[v++])*d[k++]/Math.sqrt(p[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function QC(t,e,n,r,s){const o=su(r,e,n),a=ut(n),i=Ft(r);if(o){const n=ou(e,i);return"string"===s?t.slice(n,n+a):t.subarray(n,n+a)}const u=Da(r,s,"string"===s?om(t):t),l=Da(n,s);for(let c=0;c<l.size;++c){const t=l.indexToLoc(c),n=t.map(((t,n)=>t+e[n]));l.set(u.get(...n),...t)}return"string"===s?am(l.values):l.values}function tE(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:a}=r;AT(s,"slice");const[i,u]=au(s,o,a);ji(s,i,u);const l=QC(n.data.get(s.dataId).values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const eE={kernelName:Sr,backendName:"cpu",kernelFunc:tE},nE={kernelName:ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:a}=r;AT([s],"batchToSpaceND");const i=o.reduce(((t,e)=>t*e)),u=mf(s.shape,o,i),l=gf(u.length,o.length),c=yf(s.shape,o,i),h=bf(a,o.length),p=xf(c,a,o.length),d=mC({inputs:{x:s},backend:n,attrs:{shape:u}}),f=EC({inputs:{x:d},backend:n,attrs:{perm:l}}),m=mC({inputs:{x:f},backend:n,attrs:{shape:c}}),g=tE({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function rE(t,e,n,r,s){const o=ut(r),a=Pt(s,n);for(let i=0;i<t.length;i++){const n=t[i];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(a[n]+=o>0?e[i]:1)}return a}function sE(t,e,n,r=!1){const s=t.shape[0],o=t.shape[1],a=Da([s,n],e.dtype);for(let i=0;i<s;i++)for(let s=0;s<o;s++){const o=t.get(i,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?a.set(1,i,o):e.size>0?a.set(a.get(i,o)+e.get(i,s),i,o):a.set(a.get(i,o)+1,i,o))}return a}const oE={kernelName:ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a}=r,i=rE(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,i)}},aE={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=Di(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},iE=YT((t=>Math.ceil(t))),uE=DT(ve,iE),lE={kernelName:ve,backendName:"cpu",kernelFunc:uE},cE=FT(ke,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),hE={kernelName:ke,backendName:"cpu",kernelFunc:cE},pE={kernelName:Se,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(ut(e.shape)),s=n.data.get(e.dataId),o=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,i=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values;for(let l=0;l<i.length;l++){const t=i[l],e=u[l];r[l]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")}};function dE(t,e,n,r){const s=vt(n,ut(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=ut(t.shape);s.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const o="string"===n?om(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const i=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[i+e]=o[a++]}r+=t.shape[1]}))}return s}function fE(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const mE={kernelName:fn,backendName:"cpu",kernelFunc:fE};function gE(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=bt(s,e[0].shape)[0];sf(e.map((t=>t.shape)),o);let a=of(e.map((t=>t.shape)),o);if(0===ut(a))return n.makeTensorInfo(a,e[0].dtype,[]);const i=e.filter((t=>ut(t.shape)>0));if(1===i.length)return PT({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const t=i.map((t=>sC({inputs:{input:t},backend:n}))),e=i.map((t=>fE({inputs:{input:t},backend:n}))),r=gE({inputs:t,backend:n,attrs:{axis:o}}),s=gE({inputs:e,backend:n,attrs:{axis:o}}),a=eC({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const u=i.map((t=>{const e=ut(t.shape.slice(o));return mC({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),l=u.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=of(u.map((t=>t.shape)),1);const c=1===u[0].shape[0],h=dE(l,a,e[0].dtype,c),p=of(i.map((t=>t.shape)),o),d=n.makeTensorInfo(p,e[0].dtype,h);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}const yE={kernelName:Ne,backendName:"cpu",kernelFunc:gE};function bE(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r;AT([s,o],"conv2d");const h=Nl(u),p=gl(s.shape,o.shape,a,l,i,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new Js(p.outShape,s.dtype),v=Ft(s.shape),k=Ft(o.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],E=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,R=x?1:w.strides[1],A=n.data.get(s.dataId).values,_=n.data.get(o.dataId).values,M=w.values;for(let F=0;F<p.batchSize;++F){const t=F*I,e=F*C;for(let n=0;n<p.outHeight;++n){const r=e+n*E,s=n*p.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const o=e*k[0],a=t+n*S;for(let t=0;t<p.outWidth;++t){const e=r+t*$,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const s=a+r*N;let i=o+t*k[1];for(let t=0;t<p.inChannels;++t){const n=A[s+t*T];for(let t=0;t<p.outChannels;++t)M[e+t*R]+=n*_[i+t];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}const xE={kernelName:Te,backendName:"cpu",kernelFunc:bE},wE={kernelName:Ce,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;AT([s,o],"conv2dBackpropFilter");const h=Nl(u),p=gl(s.shape,c,a,1,i,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Js(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(o.dataId).values,I=new Js(s.shape,s.dtype,v),S=new Js(o.shape,o.dtype,k);for(let N=0;N<m;++N){const t=Math.max(0,Math.ceil((w-N)/d)),e=Math.min(p.outHeight,(p.inHeight+w-N)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(p.outWidth,(p.inWidth+x-n)/f);for(let o=0;o<p.inChannels;++o)for(let a=0;a<p.outChannels;++a){let i=0;for(let u=0;u<p.batchSize;++u)for(let l=t;l<e;++l){const t=N+l*d-w;for(let e=r;e<s;++e){const r=n+e*f-x;i+=y?I.get(u,t,r,o)*S.get(u,l,e,a):I.get(u,o,t,r)*S.get(u,a,l,e)}}b.set(i,N,n,o,a)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},vE={kernelName:Ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r;AT([s,o],"conv2dBackpropInput");const h=Ft(o.shape),p=Ft(s.shape);let d=Nl(l);const f=gl(a,o.shape,i,1,u,c,!1,d),m=new Js(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(o.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:E,outHeight:$,outWidth:R,strideHeight:A,strideWidth:_}=f;d=f.dataFormat;const M=I-1-f.padInfo.top,F=S-1-f.padInfo.left,D="channelsLast"===d,O=m.strides[0],L=D?m.strides[1]:m.strides[2],P=D?m.strides[2]:1,z=D?1:m.strides[1],B=p[0],U=D?p[1]:p[2],V=D?p[2]:1,W=D?1:p[1];for(let G=0;G<k;++G)for(let t=0;t<N;++t)for(let e=0;e<T;++e){const n=e-M,r=Math.max(0,Math.ceil(n/A)),s=Math.min($,(I+n)/A);for(let o=0;o<C;++o){const a=o-F,i=Math.max(0,Math.ceil(a/_)),u=Math.min(R,(S+a)/_);let l=0;for(let e=r;e<s;++e){const r=e*A-n;for(let n=i;n<u;++n){const s=B*G+U*e+V*n,o=x*(I-1-r)+w*(S-1-(n*_-a))+v*t;for(let t=0;t<E;++t)l+=y[s+W*t]*b[o+t]}}g[O*G+L*e+P*o+z*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},kE={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r;AT([s,o],"conv3d");const l=yl(s.shape,o.shape,a,u,i),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new Js(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(o.dataId).values,I=w.values,S=Ft(s.shape),N=Ft(o.shape);for(let T=0;T<l.batchSize;++T){const t=T*S[0],e=T*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=e+n*w.strides[1],s=n*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=l.inDepth)continue;const o=e*N[0],a=t+n*S[1];for(let t=0;t<l.outHeight;++t){const e=r+t*w.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=l.inHeight)continue;const s=o+t*N[1],i=a+r*S[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-b;for(let t=0;t<p;++t){const e=r+t*m;if(e<0||e>=l.inWidth)continue;const o=s+t*N[2],a=i+e*l.inChannels;let u=o;for(let t=0;t<l.inChannels;++t){const e=v[a+t];for(let t=0;t<l.outChannels;++t)I[n+t]+=e*k[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},IE={kernelName:Re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r;AT([s,o],"conv3dBackpropFilterV2");const l=Ft(s.shape),c=Ft(o.shape),h=yl(s.shape,u,a,1,i),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Js(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(o.dataId).values,[N,T,C,E]=c,$=n.data.get(s.dataId).values,[R,A,_,M]=l,F=h.padInfo.front,D=h.padInfo.left,O=h.padInfo.top;for(let L=0;L<m;++L){const t=Math.max(0,Math.ceil((F-L)/p)),e=Math.min(h.outDepth,(h.inDepth+F-L)/p),n=L*w;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((O-r)/d)),o=Math.min(h.outHeight,(h.inHeight+O-r)/d),a=r*v+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((D-n)/f)),u=Math.min(h.outWidth,(h.inWidth+D-n)/f),l=n*k+a;for(let a=0;a<h.inChannels;++a){const c=a*I+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*R,g=c*N;for(let c=t;c<e;++c){const t=(L+c*p-F)*A+h,e=c*T+g;for(let c=s;c<o;++c){const s=(r+c*d-O)*_+t,o=c*C+e;for(let t=i;t<u;++t){const e=t*E+o;m+=$[(n+t*f-D)*M+s+a]*S[e+l]}}}}x[c+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},SE={kernelName:Ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r;AT([s],"conv3dBackpropInputV2");const l=Ft(s.shape),c=Ft(o.shape),h=yl(u,o.shape,i,1,a),p=new Js(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,I=n.data.get(o.dataId).values,[S,N,T,C]=c,{batchSize:E,filterDepth:$,filterHeight:R,filterWidth:A,inChannels:_,inDepth:M,inHeight:F,inWidth:D,outChannels:O,outDepth:L,outHeight:P,outWidth:z,strideDepth:B,strideHeight:U,strideWidth:V}=h,W=$-1-h.padInfo.front,G=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let j=0;j<E;++j)for(let t=0;t<_;++t)for(let e=0;e<M;++e){const n=e-W,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,($+n)/B);for(let o=0;o<F;++o){const a=o-G,i=Math.max(0,Math.ceil(a/U)),u=Math.min(P,(R+a)/U);for(let l=0;l<D;++l){const c=l-H,h=Math.max(0,Math.ceil(c/V)),p=Math.min(z,(A+c)/V);let E=0;for(let e=r;e<s;++e){const r=e*B-n;for(let n=i;n<u;++n){const s=n*U-a;for(let o=h;o<p;++o){const a=x*j+w*e+v*n+k*o,i=S*($-1-r)+N*(R-1-s)+T*(A-1-(o*V-c))+C*t;for(let t=0;t<O;++t)E+=b[a+t]*I[i+t]}}}d[f*j+m*e+g*o+y*l+t]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},NE=FT(_e,(t=>Math.cos(t))),TE={kernelName:_e,backendName:"cpu",kernelFunc:NE},CE=FT(Me,(t=>Math.cosh(t))),EE={kernelName:Me,backendName:"cpu",kernelFunc:CE},$E={kernelName:Oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=r,[c,h,p,d]=s.shape,f=o.shape[0],[m,g]=i,y=Da([f,m,g,d],"float32"),b=n.data.get(o.dataId).values,x=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,v=Ft(s.shape),k=Ft(y.shape);for(let I=0;I<f;I++){const t=4*I,e=b[t],n=b[t+1],r=b[t+2],s=b[t+3],o=x[I];if(o>=c)continue;const a=m>1?(r-e)*(h-1)/(m-1):0,i=g>1?(s-n)*(p-1)/(g-1):0;for(let c=0;c<m;c++){const t=m>1?e*(h-1)+c*a:.5*(e+r)*(h-1);if(t<0||t>h-1)for(let e=0;e<g;e++)for(let t=0;t<d;t++){const n=t+e*k[2]+c*k[1]+I*k[0];y.values[n]=l}else if("bilinear"===u){const e=Math.floor(t),r=Math.ceil(t),a=t-e;for(let t=0;t<g;t++){const u=g>1?n*(p-1)+t*i:.5*(n+s)*(p-1);if(u<0||u>p-1){for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const h=Math.floor(u),f=Math.ceil(u),m=u-h;for(let n=0;n<d;n++){let s=n+h*v[2]+e*v[1]+o*v[0];const i=w[s];s=n+f*v[2]+e*v[1]+o*v[0];const u=w[s];s=n+h*v[2]+r*v[1]+o*v[0];const l=w[s];s=n+f*v[2]+r*v[1]+o*v[0];const p=i+(u-i)*m,d=l+(w[s]-l)*m;s=n+t*k[2]+c*k[1]+I*k[0],y.values[s]=p+(d-p)*a}}}else for(let e=0;e<g;++e){const r=g>1?n*(p-1)+e*i:.5*(n+s)*(p-1);if(r<0||r>p-1){for(let t=0;t<d;t++){const n=t+e*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const a=Math.round(r),u=Math.round(t);for(let t=0;t<d;t++){const n=t+a*v[2]+u*v[1]+o*v[0],r=t+e*k[2]+c*k[1]+I*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},RE={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;AT(s,"cumprod");const u=Ic([o],s.shape.length);let l=s;null!=u&&(l=EC({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Nc(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=co(l.dtype,"int32"),p=Lt(ut(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let y=0;y<d.length;y+=f)for(let t=0;t<f;t++){const e=m(y,t);if(0===t)p[e]=a?1:d[e];else{const n=m(y,t-1);p[e]=a?d[n]*p[n]:d[e]*p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const t=EC({inputs:{x:g},backend:n,attrs:{perm:Sc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}},AE={kernelName:De,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;AT(s,"cumsum");const u=Ic([o],s.shape.length);let l=s;null!=u&&(l=EC({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Nc(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=co(l.dtype,"int32"),p=Pt(ut(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let y=0;y<d.length;y+=f)for(let t=0;t<f;t++){const e=m(y,t);if(0===t)p[e]=a?0:d[e];else{const n=m(y,t-1);p[e]=a?d[n]+p[n]:d[e]+p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const t=EC({inputs:{x:g},backend:n,attrs:{perm:Sc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}},_E={kernelName:Le,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(1===s.shape.length){const t=rE(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,t)}if(2===s.shape.length){const t=sE(n.bufferSync(s),n.bufferSync(o),a,i);return n.makeTensorInfo(t.shape,o.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},ME={kernelName:Pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:a}=r;st("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const i=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*o,p=l*o,d=c/(o*o),f=n.data.get(s.dataId).values,m=new Float32Array(i*h*p*d);let g=0;for(let y=0;y<i;++y)for(let t=0;t<h;++t){const e=Math.floor(t/o),n=t%o;for(let t=0;t<p;++t){const r=Math.floor(t/o),s=(n*o+t%o)*d;for(let t=0;t<d;++t){const n=t+s+c*(r+l*(e+u*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,p,d],s.dtype,m)}};function FE(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=r;AT([s,o],"depthwiseConv2DNative");const c=Ft(s.shape),h=Ft(o.shape);let p=u;null==p&&(p=[1,1]),st(Sl(a,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`));const d=gl(s.shape,o.shape,a,p,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new Js(d.outShape,s.dtype),I=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,N=k.values;for(let T=0;T<d.batchSize;++T){const t=T*c[0],e=T*k.strides[0];for(let n=0;n<d.outHeight;++n){const r=e+n*k.strides[1],s=n*d.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const o=e*h[0],a=t+n*c[1];for(let t=0;t<d.outWidth;++t){const e=r+t*k.strides[2],n=t*d.strideWidth-x;for(let t=0;t<m;++t){const r=n+t*y;if(r<0||r>=d.inWidth)continue;const s=o+t*h[1],i=a+r*d.inChannels;let u=e,l=s;for(let t=0;t<d.inChannels;++t){const e=I[i+t];for(let t=0;t<v;++t)N[u+t]+=e*S[l+t];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const DE={kernelName:ze,backendName:"cpu",kernelFunc:FE},OE={kernelName:Be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r;AT([s,o],"depthwiseConv2dNativeBackpropFilter");const h=gl(s.shape,c,a,i,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Js(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Js(s.shape,s.dtype,w),k=n.data.get(o.dataId).values,I=new Js(o.shape,o.dtype,k);for(let S=0;S<f;++S){const t=Math.max(0,Math.ceil((b-S)/p)),e=Math.min(h.outHeight,(h.inHeight+b-S)/p);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/d)),s=Math.min(h.outWidth,(h.inWidth+y-n)/d);for(let o=0;o<h.outChannels;++o){const a=Math.trunc(o/x),i=o%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let i=t;i<e;++i){const t=S+i*p-b;for(let e=r;e<s;++e){const r=n+e*d-y;u+=v.get(l,t,r,a)*I.get(l,i,e,o)}}g.set(u,S,n,a,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},LE={kernelName:Ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r;AT([s,o],"depthwiseConv2DNativeBackpropInput");const h=Ft(s.shape),p=Ft(o.shape),d=gl(c,o.shape,a,i,u,l,!0),f=new Js(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(o.dataId).values,[S,N,T]=p,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:R,inHeight:A,inWidth:_,outChannels:M,outHeight:F,outWidth:D,strideHeight:O,strideWidth:L}=d,P=E-1-d.padInfo.top,z=$-1-d.padInfo.left,B=M/R;for(let U=0;U<C;++U)for(let t=0;t<R;++t)for(let e=0;e<A;++e){const n=e-P,r=Math.max(0,Math.ceil(n/O)),s=Math.min(F,(E+n)/O);for(let o=0;o<_;++o){const a=o-z,i=Math.max(0,Math.ceil(a/L)),u=Math.min(D,($+a)/L);let l=0;for(let e=r;e<s;++e){const r=e*O-n;for(let n=i;n<u;++n){const s=w*U+v*e+k*n,o=S*(E-1-r)+N*($-1-(n*L-a))+T*t;for(let e=0;e<B;++e)l+=x[s+(t*B+e)]*I[o+e]}}m[g*U+y*e+b*o+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},PE={kernelName:Ve,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=ut(r.shape),o=n.data.get(r.dataId).values,a=Da([s,s],r.dtype),i=a.values;for(let l=0;l<o.length;l++)i[l*s+l]=o[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,a.dtype,a.values)}},zE={kernelName:We,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:o,pad:a,dilations:i}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=dl(r.shape,s.shape,o,a,"NHWC",i),C=ut(T),E=T.length,$=vt(r.dtype,C);for(let R=0;R<d;++R)for(let t=0;t<y;++t){const e=t*w-x.top;for(let n=0;n<b;++n){const o=n*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const n=e+t*S;if(n>=0&&n<f)for(let e=0;e<I;++e){const u=o+e*N;if(u>=0&&u<m){const o=Ut([R,n,u,a],c,Ft(r.shape)),d=Ut([t,e,a],p,Ft(s.shape)),f=l[o]+h[d];f>i&&(i=f)}}}$[Ut([R,t,n,a],E,Ft(T))]=i}}}return{dataId:u.write(Ps($,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},BE={kernelName:He,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:o}=t,{strides:a,pad:i,dilations:u}=n,l=e,c=Ot(r.shape,l.data.get(r.dataId).values),h=Ot(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=dl(r.shape,s.shape,a,i,"NHWC",u);st(o.rank===N.length,(()=>`Error in ${He}, dy must have the same rank as output ${N.length}, but got ${o.rank}`));const T=Ot(N,l.data.get(o.dataId).values),C=zt(s.shape,s.dtype);for(let E=0;E<p;++E)for(let t=0;t<g;++t){const e=t*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let o=Number.MIN_SAFE_INTEGER,a=0,i=0;for(let t=0;t<v;++t){const n=e+t*I;if(n>=0&&n<d)for(let e=0;e<k;++e){const u=r+e*S;if(u>=0&&u<f){const r=c[E][n][u][s]+h[t][e][s];r>o&&(o=r,a=t,i=e)}}}C[a][i][s]+=T[E][t][n][s]}}}return{dataId:l.write(Ps(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},UE={kernelName:Ge,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:o}=t,{strides:a,pad:i,dilations:u}=n,l=e,c=Ot(r.shape,l.data.get(r.dataId).values),h=Ot(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=dl(r.shape,s.shape,a,i,"NHWC",u);st(o.rank===N.length,(()=>`Error in ${Ge}, dy must have the same rank as output ${N.length}, but got ${o.rank}`));const T=Ot(N,l.data.get(o.dataId).values),C=zt(r.shape,r.dtype);for(let E=0;E<p;++E)for(let t=0;t<g;++t){const e=t*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let o=Number.MIN_SAFE_INTEGER,a=e<0?0:e,i=r<0?0:r;for(let t=0;t<v;++t){const n=e+t*I;if(n>=0&&n<d)for(let e=0;e<k;++e){const u=r+e*S;if(u>=0&&u<f){const r=c[E][n][u][s]+h[t][e][s];r>o&&(o=r,a=n,i=u)}}}C[E][a][i][s]+=T[E][t][n][s]}}}return{dataId:l.write(Ps(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},VE=VT(((t,e)=>t*e)),WE=cC(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),GE=lC(Hn,VE,WE),HE={kernelName:Hn,backendName:"cpu",kernelFunc:GE};function jE(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;let i;AT(s,"sum"),i="bool"===s.dtype?iC({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):PT({inputs:{x:s},backend:n});const u=i.shape.length,l=bt(o,i.shape),c=Ic(l,u);let h=l,p=i;null!=c&&(p=EC({inputs:{x:i},backend:n,attrs:{perm:c}}),h=Nc(h.length,u)),kc("sum",h,p.shape.length);const[d,f]=wc(p.shape,h);let m=rC(n,d,co(p.dtype,"int32"));const g=ut(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let x=0;x<y.length;++x){const t=x*g;let e=0;for(let n=0;n<g;++n)e+=b[t+n];y[x]=e}if(a){const t=m;m=mC({inputs:{x:m},backend:n,attrs:{shape:vc(m.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(p),m}const qE={kernelName:Ar,backendName:"cpu",kernelFunc:jE},KE={kernelName:qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=Lf(s,o.length);zf(a.length,u,o);const{path:l,steps:c}=Bf(i,u),h=c.length;let p=null,d=a.length;const f=[];for(let m=0;m<h;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=Pf(d,u[t]);let s;Uf(e)?s=o[t]:(s=EC({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);ct(s.shape,a)||(s=mC({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===p?p=s:(p=GE({inputs:{a:s,b:p},backend:n}),f.push(p))}m<h-1&&(l[m]>=0&&(p=jE({inputs:{x:p},backend:n,attrs:{axis:l[m]-(a.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},XE={kernelName:Xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;AT([r,s],"eluGrad");const o=new Float32Array(ut(s.shape)),a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let u=0;u<a.length;++u){const t=a[u];o[u]=t>=1?i[u]:i[u]*(t+1)}return n.makeTensorInfo(s.shape,"float32",o)}},YE=VT(((t,e)=>t===e?1:0)),JE=lC(Je,YE,null,"bool"),ZE={kernelName:Je,backendName:"cpu",kernelFunc:JE},QE=kf,t$=If,e$=Sf,n$=Nf,r$=Tf,s$=Cf,o$=FT(Ye,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+QE*n);return e*(1-((((s$*r+r$)*r+n$)*r+e$)*r+t$)*r*Math.exp(-n*n))})),a$={kernelName:Ye,backendName:"cpu",kernelFunc:o$},i$=YT((t=>Math.exp(t))),u$=DT(Ze,i$,"float32"),l$={kernelName:Ze,backendName:"cpu",kernelFunc:u$};function c$(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:o}=r,a=s.shape.length,i=s.shape.slice();let u=o;return o<0&&(st(-(a+1)<=o,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),u=a+o+1),i.splice(u,0,1),mC({inputs:{x:s},backend:n,attrs:{shape:i}})}const h$={kernelName:Qe,backendName:"cpu",kernelFunc:c$},p$=YT((t=>Math.expm1(t))),d$=DT(tn,p$),f$={kernelName:tn,backendName:"cpu",kernelFunc:d$},m$=VT(((t,e)=>t/e)),g$=lC(je,m$),y$={kernelName:je,backendName:"cpu",kernelFunc:g$},b$=VT(((t,e)=>t-e)),x$=cC(((t,e,n,r)=>({real:t-n,imag:e-r}))),w$=lC(jr,b$,x$),v$={kernelName:jr,backendName:"cpu",kernelFunc:w$};function k$(t,e,n){const r=t.shape,s=r[0],o=r[1],a=n.data.get(t.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[s,o],c=ut(l),h=wt("float32",c),p=wt("float32",c);for(let g=0;g<s;g++){const t=tE({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,o]}}),r=tE({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,o]}}),s=eC({inputs:{real:t,imag:r},backend:n}),{real:a,imag:l}=I$(s,e,n),c=Ef(a,l);for(let e=0;e<o;e++){const t=_f(c,e);h[g*o+e]=t.real,p[g*o+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=eC({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function I$(t,e,n){const r=ut(t.shape),s=n.data.get(t.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((i=r)&i-1)){const s=S$(o,a,r,e,n),i=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(i,"float32",s.real),e=n.makeTensorInfo(i,"float32",s.imag),o=n.makeTensorInfo([],"float32",Ls(r,"float32")),a=PT({inputs:{x:o},backend:n}),u=y$.kernelFunc({inputs:{a:t,b:o},backend:n}),l=y$.kernelFunc({inputs:{a:e,b:a},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let o=0,a=0;for(let r=0;r<e;r++){const i=Df(s*r,e,n),u=_f(t,r);o+=u.real*i.real-u.imag*i.imag,a+=u.real*i.imag+u.imag*i.real}n&&(o/=e,a/=e),Mf(r,o,a,s)}return r}(Ef(o,a),r,e);return $f(t)}var i}function S$(t,e,n,r,s){if(1===n)return{real:t,imag:e};const o=Ef(t,e),a=n/2,i=Rf(o),u=i.real,l=i.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=eC({inputs:{real:h,imag:p},backend:s}),f=Af(o),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=eC({inputs:{real:b,imag:x},backend:s}),v=S$(u,l,a,r,s),k=v.real,I=v.imag,S=[k.length],N=s.makeTensorInfo(S,"float32",k),T=s.makeTensorInfo(S,"float32",I),C=eC({inputs:{real:N,imag:T},backend:s}),E=S$(m,g,a,r,s),$=E.real,R=E.imag,A=[$.length],_=s.makeTensorInfo(A,"float32",$),M=s.makeTensorInfo(A,"float32",R),F=eC({inputs:{real:_,imag:M},backend:s}),D=Ff(n,r),O=[D.real.length],L=s.makeTensorInfo(O,"float32",D.real),P=s.makeTensorInfo(O,"float32",D.imag),z=eC({inputs:{real:L,imag:P},backend:s}),B=GE({inputs:{a:z,b:F},backend:s}),U=dC({inputs:{a:C,b:B},backend:s}),V=w$({inputs:{a:C,b:B},backend:s}),W=sC({inputs:{input:U},backend:s}),G=sC({inputs:{input:V},backend:s}),H=fE({inputs:{input:U},backend:s}),j=fE({inputs:{input:V},backend:s}),q=gE({inputs:[W,G],backend:s,attrs:{axis:0}}),K=gE({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const N$={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=ut(r.shape),o=r.shape[r.shape.length-1],a=mC({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),i=k$(a,!1,n),u=mC({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}};function T$(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:o}=n,a=o||At(s),i=vt(a,ut(r));return function(t,e,n){t.fill(e)}(i,s),e.makeTensorInfo(r,a,i)}const C$={kernelName:nn,backendName:"cpu",kernelFunc:T$},E$={kernelName:rn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,o=wt(r.dtype,ut(r.shape)),[a,i,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let h=0;h<a;h++){const t=h*u*i*l;for(let e=0;e<i;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const a=Math.round(u-e-1),i=t+n+r+s;let h=c[i];a>=0&&a<u&&(h=c[t+n+a*l+s]),o[i]=h}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$$=YT((t=>Math.floor(t))),R$=DT(sn,$$),A$={kernelName:sn,backendName:"cpu",kernelFunc:R$},_$=VT(((t,e)=>Math.floor(t/e))),M$=lC(on,_$,null,"int32"),F$={kernelName:on,backendName:"cpu",kernelFunc:M$},D$={kernelName:us,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=bE({inputs:{x:s,filter:o},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(a){const t=m;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const t=mC({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=dC({inputs:{a:m,b:t},backend:n}),n.disposeIntermediateTensorInfo(t)}else m=dC({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(t)}if(d){const t=m;if("NCHW"===c&&"prelu"===d&&1===i.shape.length&&1!==i.shape[0]){const t=mC({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=tC(n,m,d,t,f),n.disposeIntermediateTensorInfo(t)}else m=tC(n,m,d,i,f);n.disposeIntermediateTensorInfo(t)}return m}},O$={kernelName:ls,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=FE({inputs:{x:s,filter:o},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(a){const t=m;m=dC({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=tC(n,m,d,i,f),n.disposeIntermediateTensorInfo(t)}return m}};function L$(t,e,n,r,s,o,a,i,u){const l=Da([r,o],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let e=0;e<s;e++){const o=t[c*s+e];r+=o*a[e],n.push(o)}if(r<0||r>=u/o)throw new Error(`Invalid indices: ${n} does not index into ${i}`);for(let t=0;t<o;t++)l.values[c*o+t]=e.get(...e.indexToLoc(r*o+t))}return l}const P$={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=ut(r.shape),a=s.shape,i=a[a.length-1],[u,l,c,h]=Vi(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=L$(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,p.values)}};function z$(t,e,n){const r=Da(n,t.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),o=n[0],a=n[2],i=e.locToIndex([o,a]);n[2]=e.values[i];const u=t.locToIndex(n);0<=u&&u<t.values.length&&(r.values[s]=t.values[u])}return r}const B$={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:a,batchDims:i}=r;AT([s,o],"gatherV2");const u=bt(a,s.shape)[0],l=n.data.get(o.dataId).values,c=s.shape[u];for(let x=0;x<l.length;++x){const t=l[x];st(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=i;null==i&&(h=0);const p=ut(o.shape),d=sm(s,o,u,h),f=mC({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=mC({inputs:{x:o},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=z$(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},U$=VT(((t,e)=>t>e?1:0)),V$=lC(cn,U$,null,"bool"),W$={kernelName:cn,backendName:"cpu",kernelFunc:V$},G$=VT(((t,e)=>t>=e?1:0)),H$=lC(hn,G$,null,"bool"),j$={kernelName:hn,backendName:"cpu",kernelFunc:H$},q$={kernelName:dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=ut(r.shape),o=r.shape[r.shape.length-1],a=mC({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),i=k$(a,!0,n),u=mC({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}},K$=FT(mn,(t=>Number.isFinite(t)?1:0),"bool"),X$={kernelName:mn,backendName:"cpu",kernelFunc:K$},Y$=FT(gn,(t=>Math.abs(t)===1/0?1:0),"bool"),J$={kernelName:gn,backendName:"cpu",kernelFunc:Y$},Z$=FT(yn,(t=>Number.isNaN(t)?1:0),"bool"),Q$={kernelName:yn,backendName:"cpu",kernelFunc:Z$},tR=VT(((t,e)=>t<e?1:0)),eR=lC(xn,tR,null,"bool"),nR={kernelName:xn,backendName:"cpu",kernelFunc:eR},rR=VT(((t,e)=>t<=e?1:0)),sR=lC(wn,rR,null,"bool"),oR={kernelName:wn,backendName:"cpu",kernelFunc:sR};function aR(t,e,n){const r=(e-t)/(n-1),s=Pt(n,"float32");s[0]=t;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}const iR={kernelName:vn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,a=aR(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}},uR=YT((t=>Math.log(t))),lR=DT(kn,uR),cR={kernelName:kn,backendName:"cpu",kernelFunc:lR},hR=FT(In,(t=>Math.log1p(t))),pR={kernelName:In,backendName:"cpu",kernelFunc:hR},dR=VT(((t,e)=>t&&e)),fR=lC(Sn,dR,null,"bool"),mR={kernelName:Sn,backendName:"cpu",kernelFunc:fR},gR=FT(Nn,(t=>t?0:1),"bool"),yR={kernelName:Nn,backendName:"cpu",kernelFunc:gR},bR=VT(((t,e)=>t||e)),xR=lC(Tn,bR,null,"bool"),wR={kernelName:Tn,backendName:"cpu",kernelFunc:xR},vR={kernelName:Rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r;AT(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,p=ut(s.shape),d=new Float32Array(p);function f(t){const e=t%l;let n=t-e+Math.max(0,e-o);const r=t-e+Math.min(e+o,c);let s=0;for(;n<=r;n++){const t=h[n];s+=t*t}return s}for(let m=0;m<p;m++){const t=f(m),e=h[m]*Math.pow(a+i*t,-u);d[m]=e}return n.makeTensorInfo(s.shape,s.dtype,d)}},kR={kernelName:An,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:c}=r;AT(a,"LRNGrad");const h=ut(a.shape),p=a.shape[3],d=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(o.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const t=b%p,e=b-t+Math.max(0,t-i),n=b-t+Math.min(p,t+i+1);let r=0;for(let s=e;s<n;s++)r+=Math.pow(f[s],2);r=l*r+u;for(let s=e;s<n;s++){let t=-2*l*c*f[s]*m[b]/r;b===s&&(t+=Math.pow(r,-c)),t*=d[b],g[s]+=t}}return n.makeTensorInfo(a.shape,s.dtype,g)}};function IR(t,e,n,r){const s=wt(r,ut(n));for(let o=0;o<s.length;++o){const n=o*e;let r=t[n];for(let s=0;s<e;++s){const e=t[n+s];(Number.isNaN(e)||e>r)&&(r=e)}s[o]=r}return s}function SR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=n;let u=s.shape;const l=u.length,c=bt(o,u);let h=c;const p=Ic(h,l);let d=i.data.get(s.dataId).values;if(null!=p){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=u[p[e]];d=CC(d,u,s.dtype,p,t),h=Nc(h.length,l),u=t}AT(s,"max"),kc("max",h,l);const[f,m]=wc(u,h),g=IR(d,ut(m),f,s.dtype),y=i.write(g,f,s.dtype);let b=f;return a&&(b=vc(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const NR={kernelName:_n,backendName:"cpu",kernelFunc:SR},TR=VT(((t,e)=>Math.max(t,e))),CR=lC(Mn,TR),ER={kernelName:Mn,backendName:"cpu",kernelFunc:CR},$R={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;AT(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r;st(Sl(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=fl(s.shape,o,a,1,i,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))c=PT({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=Ft(s.shape),r=HC(t,s.shape,s.dtype,e,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},RR={kernelName:On,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=r;AT(s,"maxPool3d");const c=ml(s.shape,o,a,1,i,u,l),h=qC(n.data.get(s.dataId).values,s.shape,s.dtype,Ft(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},AR={kernelName:Ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=r;AT([s,o],"maxPool3DGrad");const c=ml(o.shape,a,i,1,u,l),h=function(t,e){const n=Da(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=a;const w=Math.min(e.inDepth,l+b);for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=i;const v=Math.min(e.inHeight,c+l);for(let s=0;s<e.outWidth;++s){const d=s*o-f;let k=d;for(;k<0;)k+=u;const I=Math.min(e.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let e=x;e<w;e+=a){const n=e-b;for(let r=p;r<v;r+=i){const s=r-l;for(let o=k;o<I;o+=u){const a=o-d,i=t.get(m,e,r,o,g);i>=S&&(S=i,N=n*c*h+s*c+a)}}}n.set(N,m,y,r,s,g)}}}return n}(n.bufferSync(o),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=Da(o.shape,"float32"),N=n.bufferSync(s);for(let T=0;T<c.batchSize;++T)for(let t=0;t<c.inChannels;++t)for(let e=0;e<c.inDepth;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=e-v,o=n-I,a=r-k;let i=0;for(let e=0;e<b;e+=m){const n=(s+e)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){const s=(o+r)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let o=0;o<w;o+=y){const u=(a+o)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=b*x*w-1-h.get(T,n,s,u,t)===e*x*w+r*w+o?1:0;0!==l&&(i+=N.get(T,n,s,u,t)*l)}}}S.set(i,T,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},_R={kernelName:Dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:a}=e,i=o;AT([o,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=fl(i.shape,u,l,1,c,h),d=n.data.get(i.dataId).values,f=Da(p.outShape,i.dtype,jC(d,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=Da(i.shape,"float32"),S=n.data.get(s.dataId).values,N=Da(s.shape,"float32",S);for(let T=0;T<p.batchSize;++T)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inHeight;++e)for(let n=0;n<p.inWidth;++n){const r=e-k,s=n-v;let o=0;for(let e=0;e<x;e+=y){const n=(r+e)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){const a=(s+r)/g;if(a<0||a>=p.outWidth||Math.floor(a)!==a)continue;const i=x*w-1-f.get(T,n,a,t)===e*w+r?1:0;0!==i&&(o+=N.get(T,n,a,t)*i)}}I.set(o,T,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},MR={kernelName:Pn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=n;AT(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=fl(r.shape,s,o,[1,1],a),[h,p]=function(t,e,n,r,s){const o=HC(t,0,n,Ft(e),s,"max"),a=jC(t,e,n,s,!0,r);return[o.values,a.values]}(l,r.shape,r.dtype,i,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},FR={kernelName:zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=bt(o,s.shape),u=ut(wc(s.shape,i)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=iC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=g$({inputs:{a:h,b:c},backend:n});l.push(p);const d=jE({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:a}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},DR={kernelName:Bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;AT(s,"min");const i=bt(o,s.shape);let u=i;const l=Ic(u,s.shape.length);let c=s;null!=l&&(c=EC({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Nc(u.length,s.shape.length)),kc("min",u,c.shape.length);const[h,p]=wc(c.shape,u),d=ut(p),f=Pt(ut(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const t=y*d;let e=m[t];for(let n=0;n<d;++n){const r=m[t+n];(Number.isNaN(r)||r<e)&&(e=r)}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const t=mC({inputs:{x:g},backend:n,attrs:{shape:vc(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},OR=VT(((t,e)=>Math.min(t,e))),LR=lC(Un,OR),PR={kernelName:Un,backendName:"cpu",kernelFunc:LR},zR={kernelName:Vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,mode:a}=r;AT(s,"mirrorPad");const i=o.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=o.map((t=>t[0])),l=o.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=Ft(s.shape),f=ut(i),m=i.length,g=Ft(i),y=wt(s.dtype,f);for(let b=0;b<f;b++){let t=Vt(b,m,g);for(let n=0;n<m;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-c:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+c);t=t.map(((t,e)=>t-u[e]));const e=Ut(t,p,d);y[b]=h[e]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},BR=VT(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),UR=lC(Wn,BR),VR={kernelName:Wn,backendName:"cpu",kernelFunc:UR};function WR(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,a=s.shape.length;let i=o;if(-1===i&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const u=bt([i],s.shape),l=SR({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=vc(l.shape,u),h=mC({inputs:{x:l},backend:n,attrs:{shape:c}}),p=w$({inputs:{a:s,b:h},backend:n}),d=u$({inputs:{x:p},backend:n}),f=jE({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=mC({inputs:{x:f},backend:n,attrs:{shape:c}}),g=g$({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const GR={kernelName:Fr,backendName:"cpu",kernelFunc:WR},HR={kernelName:Gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r;AT(s,"multinomial");const u=i?s:WR({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,o],d=Pt(ut(p),"int32");for(let f=0;f<l;++f){const t=f*c,e=new Float32Array(c-1);e[0]=h[t];for(let s=1;s<e.length;++s)e[s]=e[s-1]+h[t+s];const n=Oh.alea(a.toString()),r=f*o;for(let s=0;s<o;++s){const t=n();d[r+s]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){d[r+s]=n;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}};function jR(t,e,n){const r=Ls(-1,n);return VE([],e,r,t,n)}const qR={kernelName:jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;AT(r,"neg");const s=n.data.get(r.dataId).values,[o,a]=jR(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,o)}},KR=fd,XR={kernelName:Kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r;AT(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,{selectedIndices:h}=KR(l,c,a,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},YR=md,JR={kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r;AT(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,{selectedIndices:p,validOutputs:d}=YR(c,h,a,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},ZR=gd,QR={kernelName:Yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r;AT(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=a,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=ZR(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},tA=VT(((t,e)=>t!==e?1:0)),eA=lC(qn,tA,null,"bool"),nA={kernelName:qn,backendName:"cpu",kernelFunc:eA},rA={kernelName:Zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r;AT(s,"oneHot");const l=ut(s.shape),c=new Float32Array(l*a);c.fill(u);const h=n.data.get(s.dataId).values;for(let p=0;p<l;++p)h[p]>=0&&h[p]<a&&(c[p*a+h[p]]=i);return n.makeTensorInfo([...s.shape,a],o,c)}};function sA(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=sC({inputs:{input:r},backend:n}),e=sA({inputs:{x:t},backend:n}),s=fE({inputs:{input:r},backend:n}),o=sA({inputs:{x:s},backend:n}),a=eC({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),a}return T$({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const oA={kernelName:rs,backendName:"cpu",kernelFunc:sA},aA={kernelName:Jn,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=sC({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),o=fE({inputs:{input:s},backend:r}),a=sA({inputs:{x:o},backend:r}),i=eC({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(a),i}return T$({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function iA(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return c$({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach((t=>{ot(o,t.shape,"All tensors passed to stack must have matching shapes"),st(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=gE({inputs:e.map((t=>{const e=c$({inputs:{input:t},backend:n,attrs:{dim:s}});return i.push(e),e})),backend:n,attrs:{axis:s}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}const uA={kernelName:Qn,backendName:"cpu",kernelFunc:iA},lA={kernelName:tr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:a}=r;AT(s,"pad");const i=o.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=o.map((t=>t[0])),l=n.data.get(s.dataId).values,c=ut(s.shape),h=s.shape.length,p=Ft(s.shape),d=ut(i),f=i.length,m=Ft(i),g=wt(s.dtype,d);0!==a&&g.fill(a);for(let y=0;y<c;y++)g[Ut(Vt(y,h,p).map(((t,e)=>t+u[e])),f,m)]=l[y];return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},cA=VT(((t,e)=>Math.pow(t,e))),hA=lC(nr,cA),pA={kernelName:nr,backendName:"cpu",kernelFunc:hA};function dA(t,e,n,r){const[s,o]=wc(t,r),a=co(e,"int32"),i=Pt(ut(s),a),u=ut(o);for(let l=0;l<i.length;++l){const t=l*u;let e=1;for(let r=0;r<u;++r)e*=n[t+r];i[l]=e}return{outVals:i,outShape:s,outDtype:a}}const fA={kernelName:sr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;AT(s,"prod");const i=s.shape.length,u=bt(o,s.shape),l=Ic(u,i);let c=u,h=s;const p=[];null!=l&&(h=EC({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(h),c=Nc(c.length,i));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=dA(h.shape,h.dtype,d,c);let y=m;return a&&(y=vc(m,u)),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,f)}};function mA(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function gA(t,e,n,r,s,o,a,i){if(0===t.length)throw new Error("paramsNestedSplits must be non empty");if(0===e[0].length)throw new Error("Split tensors must not be scalars");if(function(t,e,n){t.forEach(((t,r)=>{if(t<0||t>=n){const s=Vt(r,e.length,Ft(e)).join(",");throw new Error(`indices[${s}] = ${t} is not in [0, ${n})`)}}))}(o,a,e[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=function(t,e,n,r){const s=[];let o=0;const a=e.length-1+n.length,i=new Array(a).fill(null).map((()=>[0]));!function(t,e){for(let n=0;n<t.length;++n){const r=t[n],s=n===t.length-1?e:t[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let t=1;t<r.length;++t)if(r[t-1]>r[t])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let l=0;l<e.length-1;++l){u*=e[l];const t=e[l+1];for(let e=1;e<u+1;++e)i[l].push(e*t)}for(let l=0;l<t.length;++l){let r=t[l],a=t[l]+1;for(let t=0;t<n.length;++t){const s=n[t],o=t+e.length-1;if(o>=0){const t=i[o],e=t[t.length-1]-s[r];for(let n=r;n<a;++n)i[o].push(s[n+1]+e)}r=s[r],a=s[a]}a!==r&&(s.push([r,a]),o+=a-r)}return{outSplits:i,valueSlices:s,numValues:o}}(o,a,t,u),p=function(t){const e=[];for(let n=0;n<t.length;++n){const r=vt("int32",t[n].length);e.push(r),t[n].forEach(((t,e)=>r[e]=t))}return e}(l),d=function(t,e,n,r,s){const o=e.slice();o[0]=s;const a=vt(n,ut(o)),i=t.length;return function(t,e,n,r,s,o){const a=mA(e,2)[1],i=mA(o,2)[1];let u=0;for(const l of n)for(let e=l[0];e<l[1];++e){for(let n=0;n<r;++n)s[u*i+n]=t[e*a+n];++u}}(t,e,r,0===i?0:i/e[0],a,o),[a,o]}(n,r,s,c,h);return[p,d[0],d[1]]}const yA={kernelName:or,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map((t=>n.data.get(t.dataId).values)),l=s.map((t=>t.shape)),c=n.data.get(o.dataId).values,h=n.data.get(a.dataId).values,[p,d,f]=gA(u,l,c,o.shape,o.dtype,h,a.shape),m=p.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,o.dtype,d);return m.concat([g])}};var bA=af;class xA{constructor(t,e,n,r,s,o,a,i,u,l){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=lf(l),this.raggedRank=cf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===bA.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===bA.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case bA.VALUE_ROWIDS:return xA.getMaxWidthValueRowID(e);case bA.ROW_SPLITS:return xA.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${bA[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let n=0;for(let r=0;r<e-1;++r){const e=t[r+1]-t[r];e>n&&(n=e)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let n=0,r=t[0],s=0;for(let o=1;o<e;++o){const e=t[o];e!==r&&(r=e,s=Math.max(o-n,s),n=o)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return vA(t,n)}calculateOutputSize(t){const e=this.valuesShape;hf(this.defaultValueShape,e);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=uf(this.raggedRank,n,e);r[0]<0&&(r[0]=t);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(t,e,n){const r=Math.min(t,n),s=[];let o=0;for(let a=0;a<r;++a,o+=e)s.push(o);for(let a=r;a<t;++a)s.push(-1);return st(s.length===t,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(t,e,n,r){const s=t.length,o=[];for(let a=0;a<s-1;++a){const s=t[a+1]-t[a];let i=Math.min(r,s),u=e[a];-1===u&&(i=0);for(let t=0;t<i;++t)o.push(u),u+=n;for(let t=0;t<s-i;++t)o.push(-1)}if(s>0&&o.length!==t[s-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,n,r){const s=t.length,o=[];if(0===s)return[];let a=0,i=t[0];if(i>=e.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${e.length}`);let u=e[i];o.push(u);for(let l=1;l<s;++l){const s=t[l];if(s===i)u>=0&&(++a,a<r?u+=n:u=-1);else{if(a=0,i=s,s>=e.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${e.length}`);u=e[s]}o.push(u)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,n,r){const s=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case bA.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,r);case bA.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,r);default:throw new Error(`Unsupported partition type: ${bA[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case bA.FIRST_DIM_SIZE:return t[0];case bA.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case bA.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${bA[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let o=n.length-2;o>=0;--o)n[o]=n[o+1]*e[o+1];const r=vA(e,!1),s=vt(this.valuesDType,ut(r));if(n[0]*e[0]>0){let o=this.calculateFirstParentOutputIndex(t,n[0],e[0]);for(let t=1;t<=this.raggedRank;++t)o=this.calculateOutputIndex(t-1,o,n[t],e[t]);this.setOutput(this.raggedRank,o,s,r)}return[r,s]}setOutput(t,e,n,r){if(0===n.length)return;const s=this.values,o=n;let a=r.slice();a=a.slice(t+1);const i=ut(a),u=e.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const t=this.defaultValueShape;mi((()=>{const e=Cl(l,t),n=Vl(e,a);l=n.dataSync()}))}let c=0,h=0,p=0;for(let d=0;d<=u;++d){let t=d<u?e[d]:-1;if(t!==p){if(h<p){const t=s.subarray(c*i);wA(o.subarray(h*i),t,(p-h)*i)}if(d>=u){const e=n.length;t=Math.floor(e/i)}if(t>p)if(1===this.defaultValue.length)o.subarray(p*i,t*i).fill(this.defaultValue[0]),p=t;else for(;t>p;)wA(o.slice(p*i),l,i),++p;t<0?(c=d+1,h=p):(c=d,h=p,p=h+1)}else++p}}}function wA(t,e,n){for(let r=0;r<n;r++)t[r]=e[r]}function vA(t,e){const n=[];for(let r of t){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function kA(t,e,n,r,s,o,a,i,u,l){return new xA(t,e,n,r,s,o,a,i,u,l).compute()}const IA={kernelName:ar,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,h=n.data.get(a.dataId).values,p=i.map((t=>n.data.get(t.dataId).values)),d=i.map((t=>t.shape)),[f,m]=kA(l,s.shape,c,o.shape,o.dtype,h,a.shape,p,d,u);return n.makeTensorInfo(f,o.dtype,m)}};function SA(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return Pt(0,r);const s=Pt(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let o=1;o<s.length;o++)s[o]=s[o-1]+n;return s}const NA={kernelName:ir,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:o,step:a}=n,i=SA(r,s,a,o);return e.makeTensorInfo([i.length],o,i)}},TA=FT(lr,(t=>1/t)),CA={kernelName:lr,backendName:"cpu",kernelFunc:TA},EA={kernelName:fr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;AT(s,"resizeBilinear");const u=Ft(s.shape),[l,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(ut([h,l,c,f])),y=[o&&l>1?p-1:p,o&&c>1?d-1:d],b=[o&&l>1?l-1:l,o&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<h;k++)for(let t=0;t<l;t++){let e;e=a?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,s=Math.min(p-1,Math.ceil(e)),o=k*u[0]+n*u[1],i=k*u[0]+s*u[1];for(let t=0;t<c;t++){let e;e=a?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),s=e-n,l=Math.min(d-1,Math.ceil(e)),c=o+n*u[2],h=i+n*u[2],p=o+l*u[2],y=i+l*u[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],o=e+(m[p+t]-e)*s,a=o+(n+(m[y+t]-n)*s-o)*r;g[x++]=a}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},$A={kernelName:mr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r;AT([o,s],"resizeBilinearGrad");const i=Ft(s.shape),[u,l,c,h]=s.shape,[,p,d]=o.shape,f=new Float32Array(u*l*c*h),m=[a&&p>1?l-1:l,a&&d>1?c-1:c],g=[a&&p>1?p-1:p,a&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(o.dataId).values;let w=0;for(let v=0;v<u;v++){const t=v*i[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),o=t+r*i[1],a=t+s*i[1],u=n-r,p=1-u;for(let t=0;t<d;t++){const e=t*b,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),s=e-n,l=1-s,d=o+n*i[2],m=o+r*i[2],g=a+n*i[2],y=a+r*i[2],v=p*l,k=p*s,I=u*l,S=u*s;for(let t=0;t<h;t++){const e=x[w++];f[d+t]+=e*v,f[m+t]+=e*k,f[g+t]+=e*I,f[y+t]+=e*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},RA={kernelName:pr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;AT(s,"resizeNearestNeighbor");const u=Ft(s.shape),[l,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[o&&l>1?p-1:p,o&&c>1?d-1:d],b=[o&&l>1?l-1:l,o&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let k=0;k<h;k++){const t=k*u[0];for(let e=0;e<l;e++){const n=a?x*(e+.5):x*e;let r=Math.min(p-1,o?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=t+r*u[1];for(let t=0;t<c;t++){const e=a?w*(t+.5):w*t;let n=Math.min(d-1,o?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=s+n*u[2];for(let t=0;t<f;t++){const e=m[r+t];g[v++]=e}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}},AA={kernelName:dr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r;AT([o,s],"resizeNearestNeighborGrad");const i=Ft(s.shape),u=Ft(o.shape),[l,c,h,p]=s.shape,[,d,f]=o.shape,m=new Float32Array(l*c*h*p),g=n.data.get(o.dataId).values,y=[a&&d>1?c-1:c,a&&f>1?h-1:h],b=[a&&d>1?d-1:d,a&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let N=0;N<l;N++){const t=N*i[0];for(let e=0;e<c;e++){const n=t+e*i[1],r=Math.floor(e*v),s=Math.floor(r-I/2);for(let o=0;o<h;o++){const r=n+o*i[2],l=Math.floor(o*k),y=Math.floor(l-S/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<I;r++){const l=r+s;if(l<0||l>=d)continue;const p=t+l*u[1],m=l*x;if(e===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<S;t++){const e=t+y;if(e<0||e>=f)continue;const r=p+e*u[2],s=e*w;o===Math.min(h-1,a?Math.round(s):Math.floor(s))&&(i+=g[r+n])}}m[r+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},_A={kernelName:yr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r;AT(s,"reverse");const a=s.shape.length,i=bt(o,s.shape);if(0===a)return PT({inputs:{x:s},backend:n});const u=new Js(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const t=u.indexToLoc(c),e=t.slice();i.forEach((t=>e[t]=s.shape[t]-1-e[t])),u.set(l.get(...e),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},MA={kernelName:as,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:a}=e,i=n,u=wt(r.dtype,ut(r.shape)),[l,c,h,p]=r.shape,[d,f]=ff(a,c,h),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let b=0;b<l;b++){const t=b*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let a=0;a<p;a++){const i=[l,e,r,a],b=i[2],x=i[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=o;"number"!=typeof o&&(k=3===a?255:o[a]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*p)+w*p+a]),u[t+n+s+a]=k}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},FA=FT(br,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),DA={kernelName:br,backendName:"cpu",kernelFunc:FA},OA=YT((t=>1/Math.sqrt(t))),LA=DT(xr,OA),PA={kernelName:xr,backendName:"cpu",kernelFunc:LA};function zA(t,e,n,r,s,o,a,i,u,l){const c=[r/s,s],h=t.values,p=e.values;if(0===r)return Da(n,e.dtype);const d=Da(c,e.dtype);"string"==typeof u||"number"==typeof u?d.values.fill(u):"boolean"==typeof u&&d.values.fill(+u);for(let f=0;f<o;f++){const t=[];let o=0;for(let e=0;e<a;e++){const n=h[f*a+e];t.push(n),o+=n*i[e]}if(o<0||o>=r/s)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[o*s+n]+=p[f*s+n]:d.values[o*s+n]=0===e.rank?p[0]:p[f*s+n]}return d}const BA={kernelName:wr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Hi(0,s,a),p=zA(n.bufferSync(s),n.bufferSync(o),a,h,l,u,i,c,0,!0);return n.makeTensorInfo(a,p.dtype,p.values)}};function UA(t,e){let n=0,r=t.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),t[s]<e?n=s+1:r=s;return r}function VA(t,e){let n=0,r=t.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),t[s]<=e?n=s+1:r=s;return r}const WA={kernelName:vr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:a}=r,i=function(t,e,n,r,s,o){const a=vt("int32",n*s);for(let i=0;i<n;++i){const n=t.slice(i*r,(i+1)*r),u=i*s;for(let t=0;t<s;++t)a[u+t]="left"===o?UA(n,e[t+u]):VA(n,e[t+u])}return a}(n.data.get(s.dataId).values,n.data.get(o.dataId).values,s.shape[0],s.shape[1],o.shape[1],a);return n.makeTensorInfo(o.shape,"int32",i)}},GA={kernelName:kr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e;AT([r,s,o],"select");const a=r.shape.length,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,c=co(s.dtype,o.dtype),h=Pt(ut(s.shape),c);let p=0;const d=0===a||a>1||1===s.shape.length?1:ut(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let t=0;t<d;t++)1===i[f]?h[p++]=u[f]:h[p++]=l[f];return n.makeTensorInfo(s.shape,c,h)}},HA=wf,jA=vf,qA=FT(Ir,(t=>t>=0?jA*t:HA*(Math.exp(t)-1))),KA={kernelName:Ir,backendName:"cpu",kernelFunc:qA},XA=FT(Cr,(t=>t<0?-1:t>0?1:0)),YA={kernelName:Cr,backendName:"cpu",kernelFunc:XA},JA=FT(Nr,(t=>Math.sin(t))),ZA={kernelName:Nr,backendName:"cpu",kernelFunc:JA},QA=FT(Tr,(t=>Math.sinh(t))),t_={kernelName:Tr,backendName:"cpu",kernelFunc:QA},e_=Math.log(1.1920928955078125e-7)+2,n_=FT($r,(t=>{const e=t>-e_,n=t<e_,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),r_={kernelName:$r,backendName:"cpu",kernelFunc:n_},s_={kernelName:_r,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:a}=r;AT([s],"spaceToBatchND");const i=ut(o),u=[[0,0]];u.push(...a);for(let g=1+o.length;g<s.shape.length;++g)u.push([0,0]);const l=lA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=mf(l.shape,o,i,!1),h=gf(c.length,o.length,!1),p=yf(l.shape,o,i,!1),d=mC({inputs:{x:l},backend:n,attrs:{shape:c}}),f=EC({inputs:{x:d},backend:n,attrs:{perm:h}}),m=mC({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function o_(t,e,n,r,s,o,a){const i=e[0],u=o[0],l=new Array(u),c=new Array(i),h=e[1];if(0===u){if(0!==i)throw new Error(Gf(i));return[vt(n,0),[0,h],vt(s,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const e=t[g*h];if(e<0)throw new Error(Hf(g,e));if(e>=u)throw new Error(jf(g,e,u));++f[e],p=p&&e>=d,d=e}let m=!0;for(let g=0;g<u;++g){const t=0===f[g];l[g]=t,m=m&&!t,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const e=t,n=r;for(let t=0;t<i;++t)c[t]=t;return[e,[i,h],n,l,c]}{const e=f[u-1],o=vt(n,e*h),p=vt(s,e),d=new Array(u).fill(0);for(let n=0;n<i;++n){const e=t[n*h],s=d[e],a=(0===e?0:f[e-1])+s;d[e]++;for(let r=0;r<h;++r)o[a*h+r]=t[n*h+r];p[a]=r[n],c[n]=a}for(let t=0;t<u;++t)if(0===d[t]){const e=0===t?0:f[t-1];o[e*h+0]=t;for(let t=1;t<h;++t)o[e*h+t]=0;p[e]=a}return[o,[e,h],p,l,c]}}const a_={kernelName:Dr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${o.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values[0],[h,p,d,f,m]=o_(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function i_(t,e,n,r,s){const o=ut(r),a=e[0],i=s.length,u=[];let l=1,c=-1;for(let m=0;m<i;++m){const t=s[m];if(-1===t){if(-1!==c)throw new Error(qf(c,m));c=m,u.push(1)}else{if(t<0)throw new Error(Kf(m,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(o/l);if(l*t!==o)throw new Error(Yf(r,u));u[c]=t}if(ut(u)!==o)throw new Error(Jf(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let t=h-2;t>=0;--t)p[t]=p[t+1]*r[t+1]}const d=[];if(i>0){d[i-1]=1;for(let t=i-2;t>=0;--t)d[t]=d[t+1]*u[t+1]}const f=vt(n,a*i);for(let m=0;m<a;++m){let e=0;for(let n=0;n<h;++n)e+=t[m*h+n]*p[n];for(let t=0;t<i;++t)f[m*i+t]=Math.trunc(e/d[t]),e%=d[t]}return[f,[a,i],u]}const u_={kernelName:Or,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:o}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(o.dataId).values),[l,c,h]=i_(i,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}};function l_(t,e,n,r,s,o=!1,a=0){const i=r.length,u=[e[0],t.length/e[0]],l=u[1],c=i>0?s[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=e.slice();h[0]=c;const p=vt(n,h.reduce(((t,e)=>t*e),1));if(0===i)return c>0&&p.fill(a),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=s[d];for(;;){let e=0;if(f<i){if(e=s[f],g===e){++f;continue}if(g>=e)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(tm(g,c));g>m&&p.fill(a,m*l,g*l);for(let n=d;n<f;++n){const e=r[n];if(e<0||e>=u[0])throw new Error(em(n,r[n],u[0]));for(let n=0;n<l;n++)p[g*l+n]+=t[e*l+n]}if(o)for(let t=0;t<l;t++)p[g*l+t]/=f-d;if(d=f,++f,m=g+1,g=e,f>i)break}return m<c&&p.fill(a,m*l,c*l),[p,h]}const c_={kernelName:Lr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,[l,c]=l_(a,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},h_={kernelName:Pr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,[l,c]=l_(a,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}},p_={kernelName:zr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=Hi(0,s,i),d=!1,f=n.bufferSync(s);let m;switch(o.dtype){case"bool":m=zA(f,n.bufferSync(o),i,p,c,l,u,h,Boolean(n.data.get(a.dataId).values[0]),d);break;case"float32":case"int32":m=zA(f,n.bufferSync(o),i,p,c,l,u,h,n.data.get(a.dataId).values[0],d);break;case"string":m=zA(f,n.bufferSync(o),i,p,c,l,u,h,Vs(n.data.get(a.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}},d_={kernelName:Mr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=bt(a,s.shape)[0],u=Wf(s,o,i),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((t=>{const e=[...c];e[i]=t;const r=tE({inputs:{x:s},backend:n,attrs:{begin:l,size:e}});return l[i]+=t,r}))}},f_=YT((t=>Math.sqrt(t))),m_=FT(Rr,(t=>Math.sqrt(t))),g_={kernelName:Rr,backendName:"cpu",kernelFunc:m_},y_={kernelName:Ur,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;AT(n,"square");const s=r.data.get(n.dataId).values,o=new Float32Array(s.length);for(let a=0;a<s.length;++a){const t=s[a];o[a]=t*t}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},b_=VT(((t,e)=>{const n=t-e;return n*n})),x_=lC(Br,b_),w_={kernelName:Br,backendName:"cpu",kernelFunc:x_},v_=FT(ss,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),k_={kernelName:ss,backendName:"cpu",kernelFunc:v_};function I_(t,e,n,r){const s=Da(t,e.dtype);for(let o=0;o<s.size;o++){const t=s.indexToLoc(o),a=new Array(t.length);for(let e=0;e<a.length;e++)a[e]=t[e]*n[e]+r[e];s.set(e.get(...a),...t)}return s}const S_={kernelName:Vr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;AT(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=iu(s.shape,o,a,i,u,l,c,h,p);let v;if(m)v=mC({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){st(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const t=Ki(b,x,w),e=tE({inputs:{x:s},backend:n,attrs:{begin:b,size:t}});v=mC({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else{const t=I_(d,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,t.dtype,t.values)}return v}};class N_{constructor(t,e,n,r,s,o){this.separator=Us(t),this.nGramWidths=e,this.leftPad=Us(n),this.rightPad=Us(r),this.padWidth=s,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,s,o){for(let a=0;a<s;++a){const i=this.getPadWidth(o),u=Math.max(0,i-a),l=Math.max(0,i-(s-(a+1))),c=o-(u+l),h=e+(u>0?0:a-i);let p=0;p+=u*this.leftPad.length;for(let e=0;e<c;++e)p+=t[h+e].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+a]=new Uint8Array(p);const d=n[r+a];let f=0;const m=t=>t.forEach((t=>d[f++]=t));for(let t=0;t<u;++t)m(this.leftPad),m(this.separator);for(let e=0;e<c-1;++e)m(t[h+e]),m(this.separator);if(c>0){m(t[h+c-1]);for(let t=0;t<l;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<l-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let s=1;s<r;++s){let r=e[s]>=t;if(r=r&&e[s]<=n,!r)throw new Error(`Invalid split value ${e[s]}, must be in [${t}, ${n}]`);t=e[s]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const s=r-1,o=vt("int32",r);if(0===n||0===r){const t=new Array(n);for(let e=0;e<=s;++e)o[e]=0;return[t,o]}o[0]=0;for(let i=1;i<=s;++i){const t=e[i]-e[i-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),o[i]=o[i-1]+n}const a=new Array(o[s]);for(let i=0;i<s;++i){const n=e[i];let r=o[i];if(this.nGramWidths.forEach((s=>{const o=e[i+1]-e[i],u=this.getNumNGrams(o,s);this.createNGrams(t,n,a,r,u,s),r+=u})),this.preserveShort&&r===o[i]){const s=e[i+1]-e[i];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(t,n,a,r,u,o)}}return[a,o]}}function T_(t,e,n,r,s,o,a,i){return new N_(n,r,s,o,a,i).compute(t,e)}const C_={kernelName:Wr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=e,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=T_(p,d,s,o,a,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function E_(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let o=t.indexOf(s);for(;-1!==o;){const e=t.subarray(0,o);n&&0===e.length||r.push(e),o=(t=t.subarray(o+1)).indexOf(s)}return void(n&&0===t.length||r.push(t))}let s=0;for(let o=0;o<t.length+1;o++)if(o===t.length||-1!==e.indexOf(t[o])){const e=t.subarray(s,o);n&&0===e.length||r.push(e),s=o+1}}function $_(t,e,n){const r=t.length,s=[];let o=0,a=0;const i=new Array(r);for(let p=0;p<r;++p){const r=s.length;E_(t[p],e,n,s);const u=s.length-r;i[p]=u,o+=u,a=Math.max(a,u)}const u=vt("int32",2*o),l=new Array(o),c=[r,a];let h=0;for(let p=0;p<r;++p)for(let t=0;t<i[p];++t)u[2*h]=p,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}const R_={kernelName:Gr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values[0],[l,c,h]=$_(i,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function A_(t,e){const n=vt("int32",t.length);for(let r=0;r<t.length;++r)n[r]=Os(t[r]).modulo(e).getLowBitsUnsigned();return n}const __={kernelName:Hr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:o}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=A_(n.data.get(o.dataId).values,s);return n.makeTensorInfo(o.shape,"int32",a)}},M_=FT(qr,(t=>Math.tan(t))),F_={kernelName:qr,backendName:"cpu",kernelFunc:M_},D_=FT(Kr,(t=>Math.tanh(t)));function O_(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=Da(n,t.dtype);for(let s=0;s<r.values.length;++s){const e=r.indexToLoc(s),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const o=t.locToIndex(n);r.values[s]=t.values[o]}return r}const L_={kernelName:Xr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;AT(s,"tile");const a=O_(n.bufferSync(s),o);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},P_=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function z_(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,o=e-n+1,a=Math.log(s),i=.5*Math.exp(2*a/3),u=.5*Math.sqrt(a*i*(s-i)/s)*Math.sign(o-s/2);z_(t,e,Math.max(n,Math.floor(e-o*i/s+u)),Math.min(r,Math.floor(e+(s-o)*i/s+u)))}const s=t[e];let o=n,a=r;for(tt(t,n,e),P_(t[r],s)>0&&tt(t,n,r);o<a;){for(tt(t,o,a),o++,a--;P_(t[o],s)<0;)o+=1;for(;P_(t[a],s)>0;)a-=1}0===P_(t[n],s)?tt(t,n,a):(a+=1,tt(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function B_(t,e,n,r,s){const o=e[e.length-1],[a,i]=[t.length/o,o],u=wt(n,a*r),l=wt("int32",a*r);for(let h=0;h<a;h++){const e=h*i,n=t.subarray(e,e+i);let o=new Array(n.length);n.forEach(((t,e)=>o[e]={value:t,index:e})),r<o.length&&(z_(o,r),o=o.slice(0,r)),s&&o.sort(P_);const a=h*r,c=u.subarray(a,a+r),p=l.subarray(a,a+r);for(let t=0;t<r;t++)c[t]=o[t].value,p[t]=o[t].index}const c=e.slice();return c[c.length-1]=r,[Da(c,n,u),Da(c,"int32",l)]}const U_={kernelName:Yr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:a}=r;AT(s,"topk");const i=n.data.get(s.dataId).values,[u,l]=B_(i,s.shape,s.dtype,o,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},V_={kernelName:Jr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=Ft(s.shape),b=y[0],x=y[1],w=y[2],v=Ft(g),k=v[0],I=v[1],S=v[2],N=wt(s.dtype,ut(g));N.fill(u);const T=r.data.get(s.dataId).values,C=r.data.get(o.dataId).values;for(let E=0;E<c;++E){const t=1===o.shape[0]?C:C.subarray(8*E,8*E+8);for(let e=0;e<f;++e)for(let n=0;n<m;++n)for(let r=0;r<d;++r){let s;const o=t[6]*n+t[7]*e+1;if(0===o)continue;const l=(t[0]*n+t[1]*e+t[2])/o,c=(t[3]*n+t[4]*e+t[5])/o,d=W_(l,p,i),f=W_(c,h,i);switch(a){case"nearest":s=H_(T,h,p,b,x,w,E,f,d,r,u);break;case"bilinear":s=j_(T,h,p,b,x,w,E,f,d,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}N[E*k+e*I+n*S+r]=s}return r.makeTensorInfo(g,s.dtype,N)}return{dataId:r.write(N,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function W_(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return Z(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return Z(0,n,e-1)}(t,e);case"nearest":return function(t,e){return Z(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function G_(t,e,n,r,s,o,a,i,u,l,c){return 0<=i&&i<e&&0<=u&&u<n?t[a*r+i*s+u*o+l]:c}function H_(t,e,n,r,s,o,a,i,u,l,c){return G_(t,e,n,r,s,o,a,Math.round(i),Math.round(u),l,c)}function j_(t,e,n,r,s,o,a,i,u,l,c){const h=Math.floor(i),p=Math.floor(u),d=h+1,f=p+1;return(d-i)*((f-u)*G_(t,e,n,r,s,o,a,h,p,l,c)+(u-p)*G_(t,e,n,r,s,o,a,h,f,l,c))+(i-h)*((f-u)*G_(t,e,n,r,s,o,a,d,p,l,c)+(u-p)*G_(t,e,n,r,s,o,a,d,f,l,c))}function q_(t,e,n,r){const s=bt(e,n)[0],o=[1,n[0],1];for(let f=0;f<s;f++)o[0]*=n[f];o[1]=n[s];for(let f=s+1;f<n.length;f++)o[2]*=n[f];const a={},i=new Int32Array(n[s]),u=new Js(o,r,t),l=[],c=1===o[0]&&1===o[2];for(let f=0;f<n[s];f++){let e;if(c)e=t[f].toString();else{const t=[];for(let e=0;e<o[0];e++)for(let n=0;n<o[2];n++)t.push(u.get(e,f,n));e=t.join(",")}if(void 0!==a[e])i[f]=a[e];else{const t=Object.keys(a).length;a[e]=t,i[f]=t,l.push(f)}}const h=o.slice();h[1]=Object.keys(a).length;const p=new Js(h,r);l.forEach(((t,e)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)p.set(u.get(n,t,r),n,e,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:i}}const K_={kernelName:Qr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:o}=e;AT(o,"unique");const a=r.data.get(o.dataId).values,{outputValues:i,outputShape:u,indices:l}=q_(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},X_={kernelName:ts,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s.shape.length,i=s.shape[o],u=new Array(a-1);let l=0;for(let d=0;d<a;d++)d!==o&&(u[l++]=s.shape[d]);const c=new Array(a).fill(0),h=s.shape.slice();h[o]=1;const p=new Array(i);for(let d=0;d<p.length;d++){c[o]=d;const t=tE({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[d]=mC({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},Y_={kernelName:es,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:a}=r;AT(s,"unsortedSegmentSum");const i=[],u=[],l=s.shape.length-o.shape.length;let c=o;for(let p=0;p<l;++p){const t=c$({inputs:{input:c},backend:n,attrs:{dim:p+1}});c=t,u.push(t)}for(let p=0;p<a;++p){const t=Ls(p,"int32"),e=n.makeTensorInfo([],"int32",t),r=JE({inputs:{a:e,b:c},backend:n}),o=iC({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=GE({inputs:{a:o,b:s},backend:n}),l=jE({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),u.push(e),u.push(r),u.push(o),u.push(a),u.push(l)}const h=iA({inputs:i,backend:n,attrs:{axis:0}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},J_=[xC,vC,IC,NC,fC,TC,RC,AC,_C,MC,DC,LC,zC,VC,GC,KC,XC,YC,JC,bC,ZC,nE,oE,aE,uC,lE,hE,nC,pE,yE,xE,wE,vE,kE,IE,SE,TE,EE,$E,RE,AE,_E,ME,DE,OE,LE,PE,zE,BE,UE,KE,LT,XE,ZE,a$,l$,h$,f$,N$,C$,E$,A$,F$,D$,O$,P$,B$,W$,j$,zT,q$,mE,X$,J$,Q$,UT,nR,oR,iR,cR,pR,mR,yR,wR,vR,kR,NR,ER,$R,RR,AR,_R,MR,FR,DR,PR,zR,VR,HR,HE,qR,XR,JR,QR,nA,rA,aA,uA,lA,pA,HT,fA,yA,IA,NA,oC,y$,CA,qT,XT,gC,EA,$A,RA,AA,_A,MA,DA,PA,BA,WA,GA,KA,QT,YA,ZA,t_,eE,GR,r_,s_,a_,u_,c_,h_,p_,d_,g_,y_,w_,k_,S_,C_,R_,__,v$,qE,F_,{kernelName:Kr,backendName:"cpu",kernelFunc:D_},L_,U_,V_,$C,K_,X_,Y_,oA];for(const rV of J_)ys(rV);const Z_={},Q_={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function tM(t,e){if(!(t in Z_)||null!=e){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t):e;return n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete Z_[t]}),!1),jt().getBool("SOFTWARE_WEBGL_ENABLED")&&(Q_.failIfMajorPerformanceCaveat=!1),1===t?n.getContext("webgl",Q_)||n.getContext("experimental-webgl",Q_):n.getContext("webgl2",Q_)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;Z_[t]=n}const n=Z_[t];return null==n||n.isContextLost()?(delete Z_[t],tM(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Z_[t])}var eM,nM,rM;function sM(t,e){return[e,t]}function oM(t){const e=ut(t);return dt(Math.ceil(e/4))}function aM(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function iM(t,e){const n=t;let r,s,o,a,i,u,l,c,h,p;return 2===jt().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,o=n.RGBA16F,a=n.RGBA32F,i=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=t.RGBA,s=t.RGBA,o=t.RGBA,a=n.RGBA,i=t.RGBA,l=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT,u=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function uM(t,e){const n=e();return jt().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function lM(t){return!!(jt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function cM(t,e){return xM(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(eM||(eM={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(nM||(nM={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(rM||(rM={}));const hM=/ERROR: [0-9]+:([0-9]+):/g;function pM(t,e){const n=hM.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),o=s.length.toString().length+2,a=s.map(((t,e)=>mt((e+1).toString(),o)+t));let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const u=a.slice(0,r-1),l=a.slice(r-1,r),c=a.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${mt(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function dM(t,e){if(uM(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function fM(t,e,n,r,s,o,a){const i=t.getAttribLocation(e,n);return-1!==i&&(uM(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),uM(t,(()=>t.vertexAttribPointer(i,s,t.FLOAT,!1,o,a))),uM(t,(()=>t.enableVertexAttribArray(i))),!0)}function mM(t,e,n,r){uM(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),uM(t,(()=>t.activeTexture(t.TEXTURE0+n))),uM(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),uM(t,(()=>t.uniform1i(n,r)))}function gM(t,e,n){uM(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),uM(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function yM(t,e){uM(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),uM(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function bM(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function xM(t,e,n){const r=uM(t,(()=>e()));if(null==r)throw new Error(n);return r}function wM(t,e=2){return ut(t.slice(0,t.length-e))}function vM(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function kM(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[wM(t),...vM(t)]),e}function IM(t){return t%2==0}function SM(t,e){if(ct(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(IM(n)&&IM(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&IM(t[0])&&IM(e[0])}let NM,TM;function CM(t,e){return null!=t.getExtension(e)}function EM(t){try{if(null!=tM(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function $M(t){const e=iM(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function RM(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&st("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const AM=jt();function _M(){let t,e,n,r,s,o,a,i,u,l;return 2===jt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=jt().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function MM(t,e,n="index"){const r=Ft(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function FM(t,e,n="index"){const r=Ft(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * outShapeStrides[${s}]`:`index -= ${t[s]} * outShapeStrides[${s}]`};`)).join("")}function DM(t){const e=Ft(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}AM.registerFlag("HAS_WEBGL",(()=>AM.getNumber("WEBGL_VERSION")>0)),AM.registerFlag("WEBGL_VERSION",(()=>EM(2)?2:EM(1)?1:0)),AM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),AM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===AM.get("WEBGL_VERSION"))),AM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),AM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),AM.registerFlag("WEBGL_PACK",(()=>AM.getBool("HAS_WEBGL"))),AM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_CLIP",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_PACK_REDUCE",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_CONV_IM2COL",(()=>AM.getBool("WEBGL_PACK"))),AM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==NM){const e=tM(t);NM=e.getParameter(e.MAX_TEXTURE_SIZE)}return NM}(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==TM){const e=tM(t);TM=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,TM)}(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=AM.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=tM(t);return e=CM(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:CM(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),AM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>AM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!To())),AM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=tM(t);if(1===t){if(!CM(e,"OES_texture_float"))return!1}else if(!CM(e,"EXT_color_buffer_float"))return!1;return $M(e)}(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!AM.getBool("WEBGL_FORCE_F16_TEXTURES")&&AM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),AM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=tM(t);if(1!==t){if(CM(e,"EXT_color_buffer_float"))return $M(e);const t="EXT_color_buffer_half_float";if(CM(e,t)){const n=e.getExtension(t);return function(t,e){const n=iM(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),o}(e,n)}return!1}return!!CM(e,"OES_texture_float")&&!!CM(e,"WEBGL_color_buffer_float")&&$M(e)}(AM.getNumber("WEBGL_VERSION")))),AM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=AM.getNumber("WEBGL_VERSION"))&&null!=tM(t).fenceSync;var t})),AM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>AM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),AM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),AM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>To()?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)})),AM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),AM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),AM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),AM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),AM.registerFlag("WEBGL_EXP_CONV",(()=>!1)),AM.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>AM.getBool("IS_TEST"))),AM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),AM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),AM.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1));const OM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:LM}=y;function PM(t,e,n){const r=[];if(t.forEach((t=>{const e=ut(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=KM(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)}));const s=r.join("\n"),o=t.map((t=>function(t,e,n=!1,r){let s="";s+=n?BM(t,r):zM(t,r);const o=t.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(s+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=LM(t.shapeInfo.logicalShape,e.logicalShape),u=qM(a),l=a-o;let c;const h=["x","y","z","w","u","v"];c=0===o?"":a<2&&i.length>=1?"coords = 0;":i.map((t=>`coords.${h[t+l]} = 0;`)).join("\n");let p="";p=a<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+l]}`)).join(", ");let d="return outputValue;";const f=1===ut(t.shapeInfo.logicalShape),m=1===ut(e.logicalShape);if(1!==o||f||m){if(f&&!m)d=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const t=o-2,e=o-1;i.indexOf(t)>-1&&i.indexOf(e)>-1?d="return vec4(outputValue.x);":i.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===u&&null==t.shapeInfo.flatOffset&&ct(a,o))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=qM(u),c=LM(t.shapeInfo.logicalShape,e.logicalShape),h=u-i;let p;const d=["x","y","z","w","u","v"];p=0===i?"":u<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${d[t+h]} = 0;`)).join("\n");let f="";return f=u<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(t,e)),s}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=e.texShape,i=_M(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let l,c,h=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${UM}\n    ${VM}\n    ${WM}\n  `}(i);return e.isPacked?(l=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ct(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),o=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),o=s*Math.ceil(t[t.length-2]/2);let a=o,i="",u="b, r, c";for(let l=2;l<t.length-1;l++)a*=t[t.length-l-1],i=`\n      int b${l} = index / ${a};\n      index -= b${l} * ${a};\n    `+i,u=`b${l}, `+u;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${u});\n    }\n  `}(t,e,n)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(i)):(l=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){return 1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){return ct(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${FM(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=MM(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${FM(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=MM(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=MM(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=MM(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,a,n.enableShapeUniforms),c=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),n.packedInputs&&(h+=GM),[h,u,c,s,l,o,n.userCode].join("\n")}function zM(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,o]=t.shapeInfo.texShape;if(1===s&&1===o)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=HM(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${jM(t)}\n      }\n    `;const s=t.shapeInfo.texShape,o=s[0],a=s[1];if(1===a&&1===o)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=HM(n);return 1===a?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===o?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape;if(null!=o&&ct(n,o)){if(e)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=o[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=xt(n),u=a;if(u.length<n.length){const n=["row","col"];return`\n      ${zM(XM(t,u),e)}\n      float ${s}(int row, int col) {\n        return ${s}(${YM(n,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${jM(t)}\n      }\n    `;const l=o[0],c=o[1],h=HM(r);return 1===c?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],a=n[2],{newShape:i,keptDims:u}=xt(n),l=i;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${zM(XM(t,l),e)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${YM(n,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${a}, 1)));\n        ${jM(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],p=c[1],d=t.shapeInfo.flatOffset;if(p===o&&null==d)return e?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===a&&null==d)return e?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=HM(r);return e?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],a=n[2]*o,i=n[1]*a,{newShape:u,keptDims:l}=xt(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${zM(XM(t,u),e)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${YM(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${o}, 1)));\n        ${jM(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===i&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===o&&null==c)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=HM(r);return e?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:l}=xt(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${zM(XM(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${YM(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${a}, ${o}, ${s})) +\n          depth3;\n        ${jM(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];return d===i&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:d===s&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} + depth * ${o} +\n          depth2 * ${s} + depth3 + ${HM(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=xt(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${zM(XM(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${YM(e,o)});\n      }\n    `}const a=e[5],i=e[4]*a,u=e[3]*i,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${jM(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];return f===c&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${i}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===a&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${i} + depth3 * ${a} + depth4 + ${HM(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function BM(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${_M().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,o=_M();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,a=o[0],i=o[1],u=_M();if(null!=o&&ct(n,o))return e?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===n[0]){const r=[1,2],o=["b","row","col"];return`\n        ${BM(XM(t,n.slice(1)),e)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${YM(o,r)});\n        }\n      `}const i=_M();if(e)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=a[0],l=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=_M();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const o=t.shapeInfo.logicalShape,a=o.length,i=t.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],h=Math.ceil(o[a-1]/2);let p=h*Math.ceil(o[a-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<a-1;m++)d=`int b${m}, `+d,p*=o[a-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const UM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",VM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",WM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",GM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function HM(t){return`offset${t}`}function jM(t){const e=t.name,n=ut(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function qM(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function KM(t,e,n){const{newShape:r,keptDims:s}=xt(e),o=e.length,a=t&&3===o&&1===e[0],i=a?e.slice(1):r,u=!t&&o>1&&!ct(e,n)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function XM(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function YM(t,e){return e.map((e=>t[e])).join(", ")}function JM(t,e,n){const r={},s={},o={},a=[];let i,u,l,c=null,h=null;h=t.getUniformLocation(n,"NAN",!1),1===jt().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let d=0;d<e.variableNames.length;d++){const a=e.variableNames[d];r[a]=t.getUniformLocation(n,a,p),r[`offset${a}`]=t.getUniformLocation(n,`offset${a}`,p),e.enableShapeUniforms&&(s[`${a}Shape`]=t.getUniformLocation(n,`${a}Shape`,p),o[`${a}TexShape`]=t.getUniformLocation(n,`${a}TexShape`,p))}return e.enableShapeUniforms&&(i=t.getUniformLocation(n,"outShape",p),l=t.getUniformLocation(n,"outShapeStrides",p),u=t.getUniformLocation(n,"outTexShape",p)),e.customUniforms&&e.customUniforms.forEach(((e,r)=>{a[r]=t.getUniformLocation(n,e.name,p)})),{uniformLocations:r,customUniformLocations:a,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}}function ZM(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],o=s.shape;if(!ct(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(t.isUniform&&s.isUniform)return;const a=t.texShape,i=s.isUniform?null:s.texData.texShape;if(!ct(a,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${i} must match`)}))}function QM(t){return jt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class tF{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=eM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=_M();this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?FM(["r","c","d"],t):MM(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class eF{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=eM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=_M();this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?FM(["r","c","d"],t):MM(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class nF{constructor(t){this.variableNames=["A"],this.outTexUsage=nM.DOWNLOAD;const e=_M();this.outputShape=t,this.userCode=`\n      ${OM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class rF{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=nM.DOWNLOAD;const e=_M();this.outputShape=t,this.userCode=`\n      ${OM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class sF{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=_M();this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":DM(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class oF{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=_M();this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length);let r="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let e=0;e<=1;e++){const s=2*o+e;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${e};\n          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${o};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":DM(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function aF(t,e,n,r,s,o){!function(t,e){const n=jt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return xM(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),i=t.TEXTURE_2D;return uM(t,(()=>t.bindTexture(i,a))),uM(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),uM(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),uM(t,(()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST))),uM(t,(()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===jt().getNumber("WEBGL_VERSION")?uM(t,(()=>t.texImage2D(i,0,r,e,n,0,s,o,null))):uM(t,(()=>t.texStorage2D(i,1,r,e,n))),uM(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:a,texShape:[n,e]}}function iF(t){return t.internalFormatFloat}function uF(t){return t.internalFormatHalfFloat}function lF(t){return t.downloadTextureFormat}function cF(t){return t.internalFormatPackedFloat}function hF(t){return t.internalFormatPackedHalfFloat}class pF{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=jt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Z_[t]=e}(e,t)):this.gl=tM(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===jt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=cM(this.gl,t),CM(this.gl,e))this.textureHalfFloatExtension=cM(this.gl,e);else if(jt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),CM(this.gl,r))this.colorBufferHalfFloatExtension=cM(this.gl,r);else if(jt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",CM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!CM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=xM(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return uM(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),uM(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=xM(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return uM(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),uM(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return xM(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=iM(this.gl,this.textureHalfFloatExtension)}get debug(){return jt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;uM(t,(()=>t.finish())),uM(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),uM(t,(()=>t.deleteFramebuffer(this.framebuffer))),uM(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),uM(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),uM(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,o]=sM(e,n);return aF(t,s,o,iF(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,o]=sM(e,n);return aF(t,s,o,uF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,o]=sM(e,n);return aF(t,s,o,lF(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){uM(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===jt().getNumber("WEBGL_VERSION")?uM(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):uM(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===jt().getNumber("WEBGL_VERSION")?uM(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):uM(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),uM(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,o){let a,i,u;uM(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),i=t.UNSIGNED_BYTE,u=t.RGBA):(a=new Float32Array(n*r*4),i=t.FLOAT,u=o.internalFormatPackedFloat),a.set(s),2===jt().getNumber("WEBGL_VERSION")?uM(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,i,a))):uM(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,i,a))),uM(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,o]=aM(e,n);return aF(t,s,o,hF(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,o]=aM(e,n);return aF(t,s,o,cF(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(yM(this.gl,this.framebuffer),this.outputTexture=null),uM(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,o]=sM(e,n),a=new Uint8Array(e*n*4);return uM(t,(()=>t.readPixels(0,0,s,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,o){return function(t,e,n,r,s,o,a,i){const u=t,l=new Float32Array(function(t,e){const[n,r]=aM(t,e);return n*r*4}(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,t,0,0,0,s,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();uM(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const o=16*e*n;return uM(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ))),uM(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),uM(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(jt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return uM(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function(t){const e=_M();return function(t,e){const n=xM(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(uM(t,(()=>t.shaderSource(n,e))),uM(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const n=function(t){return xM(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return uM(e,(()=>e.attachShader(n,this.vertexShader))),uM(e,(()=>e.attachShader(n,t))),function(t,e){if(uM(t,(()=>t.linkProgram(e))),!jt().get("ENGINE_COMPILE_ONLY")&&!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n),this.debug&&dM(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(t,e,n){return uM(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),fM(t,e,"clipSpacePos",n,3,20,0)&&fM(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&uM(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&dM(this.gl,this.program),uM(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return xM(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),uM(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),mM(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=aM(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&dM(this.gl,this.program),bM(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),uM(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),uM(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=cM(this.gl,2===jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await gt((()=>this.disposed||this.isQueryAvailable(t,jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in jt().platform&&(n=jt().platform.setTimeoutCustom.bind(jt().platform)),gt((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),gM(this.gl,t,this.framebuffer),this.debug&&bM(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(gM(this.gl,this.outputTexture,this.framebuffer),this.debug&&bM(this.gl)):yM(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;gM(r,t,this.framebuffer),this.debug&&bM(r),this.outputTexture=t,uM(r,(()=>r.viewport(0,0,e,n))),uM(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),uM(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:dF,bincountImpl:fF,bincountReduceImpl:mF,castImpl:gF,ceilImpl:yF,concatImpl:bF,equalImpl:xF,expImpl:wF,expm1Impl:vF,floorImpl:kF,gatherNdImpl:IF,gatherV2Impl:SF,greaterImpl:NF,greaterEqualImpl:TF,lessImpl:CF,lessEqualImpl:EF,linSpaceImpl:$F,logImpl:RF,maxImpl:AF,maximumImpl:_F,minimumImpl:MF,multiplyImpl:FF,negImpl:DF,notEqualImpl:OF,prodImpl:LF,raggedGatherImpl:PF,raggedTensorToTensorImpl:zF,rangeImpl:BF,rsqrtImpl:UF,scatterImpl:VF,sigmoidImpl:WF,simpleAbsImpl:GF,sliceImpl:HF,sparseFillEmptyRowsImpl:jF,sparseReshapeImpl:qF,sparseSegmentReductionImpl:KF,sqrtImpl:XF,stridedSliceImpl:YF,stringNGramsImpl:JF,stringSplitImpl:ZF,stringToHashBucketFastImpl:QF,subImpl:tD,tileImpl:eD,topKImpl:nD,transposeImpl:rD,uniqueImpl:sD}=j;function oD(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function aD(t,e){return 1===e?[t]:oD(t,e)}class iD{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=QM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=aD("rc",this.rank),e=qM(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)s=`${t[t.length-1-e]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class uD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length);let n="";for(let o=0;o<4;o++){let t="thisRC = rc;";o%2==1&&(t+="thisRC.z += 1;"),o>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${o}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${o>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=e,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(t,e,n="index"){const r=function(t,e){const n=t.length,r=t.map((t=>`${e}[${t}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let o=n-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}(t.map(((t,e)=>e)),e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${r[s]}`:`index -= ${t[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):MM(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":DM(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class lD{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=hD(e,n),s=pD(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const o=cD(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return r===rM.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===rM.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===rM.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===rM.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===rM.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=hD(n,r),o=pD(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]);const a=cD(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=jt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[o],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function cD(t,e,n,r,s){const o=function(t,e){switch(t){case rM.PACKED_2X2_FLOAT32:return cF(e);case rM.PACKED_2X2_FLOAT16:return hF(e);case rM.UNPACKED_FLOAT32:return iF(e);case rM.UNPACKED_FLOAT16:return uF(e);case rM.PACKED_4X1_UNSIGNED_BYTE:return lF(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let a;if(s){const[e,n]=aM(t[0],t[1]);a=e*n}else{const[e,n]=sM(t[0],t[1]);a=e*n}const i=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}(n,o);return a*i}function hD(t,e){if(t===nM.UPLOAD)return rM.PACKED_2X2_FLOAT32;if(t===nM.RENDER||null==t)return function(t){return jt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?rM.PACKED_2X2_FLOAT32:rM.UNPACKED_FLOAT32:t?rM.PACKED_2X2_FLOAT16:rM.UNPACKED_FLOAT16}(e);if(t===nM.DOWNLOAD||t===nM.PIXELS)return rM.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function pD(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class dD{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const fD="return abs(x);",mD="return x;";class gD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class yD{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length);const e=t.length,n=aD("rc",e),r=qM(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),o=n.slice(-2),a=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const bD=Dp,xD={},wD=jt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class vD extends K{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!jt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof pF)e=t;else{const n=tM(jt().getNumber("WEBGL_VERSION"),t);e=new pF(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=tM(jt().getNumber("WEBGL_VERSION"));e=new pF(t),this.binaryCache=((n=jt().getNumber("WEBGL_VERSION"))in xD||(xD[n]={}),xD[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new lD(this.gpgpu),this.numMBBeforeWarning=null==jt().global.screen?1024:jt().global.screen.height*jt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new q(this,pi())}nextDataId(){return vD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((jt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||jt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:nM.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,s){if(jt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:nM.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:o,shape:a,isPacked:i}=e;if(null!=o){let e;e=i?new gD(a,mD):new dD(a,mD);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=zs()),c="complex64"===r?Ef(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),u&&(this.downloadWaitMs+=zs()-l),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:o,complexTensorInfos:a,isPacked:i}=e;if(null!=s){let e;e=i?new gD(r,mD):new dD(r,mD);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:o}],o),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(jt().getBool("DEBUG")&&!jt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===jt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==o&&jt().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture.texture,...oM(r))}if(this.pendingRead.set(t,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);l=Ef(t[0],t[1])}else if(null==c)l=this.getValuesFromTexture(t);else{const t=ut(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const t=this.gpgpu.gl;uM(t,(()=>t.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(t,l),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&pi().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:s,slice:o,dtype:a,isPacked:i,texture:u}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=i?new gD(s,mD):new dD(s,mD);const r=this.runWebGLProgram(n,[{dataId:t,shape:s,dtype:a}],a),o=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),o}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),c=pi().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const n=e.map((t=>Vs(t)));return Da(t.shape,t.dtype,n)}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Da(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!lM(n)){if(jt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=ut(e);if(jt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...oM(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),o}const o=jt().getBool("WEBGL_PACK")&&!0===r,a=o?kM(e):e,i=o?new rF(a):new nF(a),u=this.runWebGLProgram(i,[{shape:a,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=it(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),o=it(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);a.kernelMs=et(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:o[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:zs(),endMs:null}}endTimer(t){return jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=zs(),t)}async getQueryTime(t){if(jt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:o,slice:a}=this.texData.get(t),i=a&&a.origDataId||t,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,o)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=wD){return jt().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&ut(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){cs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return bD(t.shape,e)}packedUnaryOp(t,e,n){const r=new gD(t.shape,e),s=this.compileAndRun(r,[t],n);return pi().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=GF(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(jt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,fD,t.dtype);const e=new dD(t.shape,fD),n=this.compileAndRun(e,[t]);return pi().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&Et(n[0])){const s=n.map((t=>Us(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){return pi().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new yD(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new iD(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[wM(t.shape),...vM(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[wM(e),...vM(e)],o=new uD(s,n),a=[n],i=this.runWebGLProgram(o,[r],t.dtype,a,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:s,dtype:o}=n;null!=e&&st(ut(s)<=e[0]*e[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const a=kM(s);let i;i=r?new eF(a):new tF(a);const u=[null!=e?e:oM(a)];return{dtype:o,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:o,dataId:t}],o,u,!0,e).dataId}}runWebGLProgram(t,e,n,r,s=!1,o){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===eM.DENSE){const e=null!=o?o:oM(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===ut(a.shape))return i.values=wt(a.dtype,0),a;const u=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&ut(e.shape)<=jt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!SM(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:i,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach((e=>{const s=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const o=e.texData.texShape,{useSqueezeShape:a,uniformShape:i,keptDims:u}=KM(t.packedInputs,e.shape,o);let l="",c="",h="";if(1===i.length&&t.packedInputs){const t=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];l=`${t[0]>1}_${t[1]>1}`}else if(2!==i.length||t.packedInputs){if(i.length>2&&!t.packedInputs){const t=Ft(i);h=`${t[0]===o[1]}_${t[t.length-1]===o[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const p=e.shape.length,d=2===i.length&&ct(e.shape,o),f=1===ut(e.shape),m=Mi(e.shape,n.shape),g=!t.packedInputs&&p===n.shape.length&&ct(o,n.texData.texShape),y=t.packedInputs||i.length>2?"":`${o[0]>1}_${o[1]>1}`;r+=`${p}_${g}_${a?u:""}_${i.length}_${f}_${m}_${d}_${l}_${c}_${h}_${y}_${s}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${s}`}}));const s=t.userCode;let o=t.constructor.name;return o+="_"+r+"_"+s+`${jt().getNumber("WEBGL_VERSION")}`,o}(t,l,c),p=this.getAndSaveBinary(h,(()=>function(t,e,n,r){const s=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),o=s.map((t=>t.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=PM(s,a,e),u=function(t,e){const n=xM(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(uM(t,(()=>t.shaderSource(n,e))),uM(t,(()=>t.compileShader(n))),jt().get("ENGINE_COMPILE_ONLY"))return n;if(!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw pM(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,i),l=t.createProgram(u);return jt().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:a},JM(t,e,l))}(this.gpgpu,t,l,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),jt().get("ENGINE_COMPILE_ONLY")||function(t,e,n,r,s){e.program.enableShapeUniforms||(ZM(e.inShapeInfos,n),ZM([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):t.setOutputMatrixTexture(o.texture,a[0],a[1]),t.setProgram(e.webGLProgram),1===jt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],o=e.uniformLocations[s],a=e.uniformLocations[`offset${s}`],i=e.inShapesLocations[`${s}Shape`],u=e.inTexShapesLocations[`${s}TexShape`];if(i){const{uniformShape:r}=KM(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(i,new Int32Array(r));break;case 2:t.gl.uniform2iv(i,new Int32Array(r));break;case 3:t.gl.uniform3iv(i,new Int32Array(r));break;case 4:t.gl.uniform4iv(i,new Int32Array(r))}}if(u&&t.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=o)if(n.isUniform)if(ut(n.shape)<2)t.gl.uniform1f(o,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(o,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,o,r)}));const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:t.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(i,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=Ft(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach(((n,r)=>{const o=e.customUniformLocations[r],a=s[r];if("float"===n.type)t.gl.uniform1fv(o,a);else if("vec2"===n.type)t.gl.uniform2fv(o,a);else if("vec3"===n.type)t.gl.uniform3fv(o,a);else if("vec4"===n.type)t.gl.uniform4fv(o,a);else if("int"===n.type)t.gl.uniform1iv(o,a);else if("ivec2"===n.type)t.gl.uniform2iv(o,a);else if("ivec3"===n.type)t.gl.uniform3iv(o,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(o,a)}})),t.executeProgram()}(this.gpgpu,p,l,c,r),u.forEach((t=>this.disposeIntermediateTensorInfo(t))),d&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=jt().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=zs();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!jt().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(jt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=mi((()=>{if(!jt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=jt().getBool("DEBUG");jt().set("DEBUG",!1);const e=this.abs(Bu(1e-8)).dataSync()[0];if(jt().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:o,usage:a,isPacked:i}=e;if(null!=o)return;const u=null!=this.activeTimers;let l;u&&(l=zs());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=jt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=jt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&jt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n*=2,r*=2,1===(t=t.map(((e,n)=>n>=t.length-2?Q(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=xt(t);t=e.newShape}let s=ut(t),o=null;t.length<=1&&s<=n?o=[1,s]:2===t.length&&t[0]<=n&&t[1]<=n?o=t:3===t.length&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:3===t.length&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const a=null!=o&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(null==o||a)if(e){const e=wM(t);let n=2,r=2;t.length&&([n,r]=vM(t)),s=e*(n/2)*(r/2),o=dt(s).map((t=>2*t))}else o=dt(s);return o}(n,i),e.texShape=c),null!=s){const t=kM(n);let o,a=c[1],h=c[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!i&&p||([a,h]=aM(c[0],c[1])),o=i?new oF(t,p):new sF(t,p);const d=p?[h,a]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?nM.PIXELS:nM.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,s);const g=[[h,a]],y=!0,b=this.runWebGLProgram(o,[f],r,g,y),x=this.texData.get(b.dataId);e.texShape=x.texShape,e.isPacked=x.isPacked,e.usage=x.usage,jt().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(e.texture=x.texture,e.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=zs()-l)}else{const t=this.acquireTexture(c,a,r,i);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Tt(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise((t=>{try{this.checkCompletion_(e),t(!0)}catch(t){throw t}}));t.push(n)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await rf(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw pM(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}=JM(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=r,t.nanLoc=s,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=i,t.outShapeStridesLocation=u,t.outTexShapeLocation=l}}}vD.nextDataId=0,Co()&&Ni("webgl",(()=>new vD),2);class kD{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Di(e,n),this.enableShapeUniforms=QM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class ID{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Di(e,n);const s=this.outputShape.length;this.enableShapeUniforms=QM(s);let o="";if(r)if(0===s||1===ut(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o=`\n          ${qM(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=aD("coords",s);this.enableShapeUniforms?o+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:o+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function SD(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ND={kernelName:pn,backendName:"webgl",kernelFunc:SD};function TD(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(o.dataId),i=SD({inputs:{x:r},backend:n}),u=SD({inputs:{x:s},backend:n});return a.complexTensorInfos={real:i,imag:u},o}const CD={kernelName:Ie,backendName:"webgl",kernelFunc:TD},ED="return (a < 0.) ? b * a : a;",$D="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",RD={kernelName:bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r,a=n.makeTensorInfo([],"float32",Ls(o,"float32")),i=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ID($D,s.shape,a.shape):new kD(ED,s.shape,a.shape),u=n.runWebGLProgram(i,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),u}},AD="return (a < 0.) ? b * a : a;",_D="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",MD={kernelName:rr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,o=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ID(_D,r.shape,s.shape):new kD(AD,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],"float32")}};function FD({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&null!=n){const t=i.texData.get(a.dataId),e=n(t.values,u);return i.makeTensorInfo(a.shape,u,e)}let l;return l=jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new gD(a.shape,e):new dD(a.shape,t),i.runWebGLProgram(l,[a],u)}}function DD({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:l}=a,c=i;if(r&&"complex64"===u.dtype){const e=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:r.dataId,dtype:r.dtype,shape:l.shape},a=new kD(t,u.shape,l.shape);return c.runWebGLProgram(a,[s,o],co(n.dtype,r.dtype))})),o=TD({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),o}const h=o||co(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const t=c.texData.get(u.dataId).values,e=c.texData.get(l.dataId).values,n="string"===u.dtype?om(t):t,r="string"===u.dtype?om(e):e,[o,a]=s(u.shape,l.shape,n,r,h),i=c.makeTensorInfo(a,h);return c.texData.get(i.dataId).values=o,i}let p;return p=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new ID(e,u.shape,l.shape,n):new kD(t,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function OD(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?_D:AD;if("leakyrelu"===t)return e?$D:ED;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class LD{constructor(t,e,n,r=!1,s=!1,o=!1,a=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=QM(this.outputShape.length);const l=r?t[1]:t[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const y=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class PD{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Di(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const zD="return a * b;";function BD(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,o=co(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),o=new PD("return areal * breal - aimag * bimag;",r.shape,s.shape),a=new PD("return areal * bimag + aimag * breal;",r.shape,s.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(o,i,"float32"),l=n.runWebGLProgram(a,i,"float32"),c=TD({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[a,i]=FF(r.shape,s.shape,t.values,e.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=a,u}let a;return a=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ID(zD,r.shape,s.shape):new kD(zD,r.shape,s.shape),n.runWebGLProgram(a,[r,s],o)}const UD={kernelName:Hn,backendName:"webgl",kernelFunc:BD};function VD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:o}=r,a=n,i=ut(s.shape),u=yt(o,i),l=ut(u);st(i===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||SM(s.shape,u)||null!==c.texture&&SM(c.shape,u)?(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(t,e,n){const r=[wM(t.shape),...vM(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},o=[wM(e),...vM(e)],a=new uD(o,r),i=[r],u=n.runWebGLProgram(a,[s],t.dtype,i,!0);return{dataId:u.dataId,shape:e,dtype:u.dtype}}(s,u,a)}const WD={kernelName:hr,backendName:"webgl",kernelFunc:VD};class GD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:o}=t;this.outputShape=[r,o];const a=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${ht(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class HD{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:o}=t;this.outputShape=[r,o];let a="0.0",i="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",i="min"):"max"===e&&(a="-1.0 / 1e-20",i="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function jD(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=df(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let o=t;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:l}=s[a];let c,h;c="mean"===n?0===a?new GD({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:l},i):new GD({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:l}):new HD({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:l},n),h=o,o=r.runWebGLProgram(c,[o],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return o}class qD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const r=qM(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class KD{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=qM(this.rank),s=oD("rc",this.rank),o=new Array(this.rank);for(let l=0;l<e.length;l++)o[e[l]]=s[l];const a=`vec2(${o.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function XD(t,e,n){const r=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KD(t.shape,e):new qD(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function YD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;return function(t,e,n,r){const s=e,o=t.shape.length,a=bt(s,t.shape);let i=a;const u=Ic(i,o),l=null!=u;let c=t;l&&(c=XD(t,u,r),i=Nc(i.length,o)),kc("sum",i,o);const[h,p]=wc(c.shape,i);let d=h;n&&(d=vc(h,a));const f=ut(p),m=VD({inputs:{x:c},attrs:{shape:[ut(t.shape)/f,f]},backend:r}),g=jD(m,ho(t.dtype),"sum",r),y=VD({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(s,o,a,n)}const JD={kernelName:Ar,backendName:"webgl",kernelFunc:YD};function ZD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:o}=r,a=n,i=s.shape.length,u=new Array(i);for(let c=0;c<u.length;c++)u[c]=s.shape[o[c]];let l;if(a.shouldExecuteOnCPU([s])){const t=a.texData.get(s.dataId).values,e=rD(t,s.shape,s.dtype,o,u);l=a.makeTensorInfo(u,s.dtype),a.texData.get(l.dataId).values=e}else l=XD(s,o,a);return l}const QD={kernelName:Zr,backendName:"webgl",kernelFunc:ZD};function tO({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const l=t.shape.length,c=e.shape.length,h=n?t.shape[l-2]:t.shape[l-1],p=r?e.shape[c-1]:e.shape[c-2],d=n?t.shape[l-1]:t.shape[l-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=ut(m),b=ut(g),x=Di(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,f]);st(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],v=r?[b,f,p]:[b,p,f],k=VD({inputs:{x:t},backend:s,attrs:{shape:w}}),I=VD({inputs:{x:e},backend:s,attrs:{shape:v}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=o,E=null!=a,$="leakyrelu"===u,R=null!=u?OD(u,!0):null;let A;if((1===d||1===f)&&T>1e3&&!1===(C||E||$||null!=R)){let t=k,e=I;n&&(t=ZD({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(t)),r&&(e=ZD({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(e));const o=1===f;let a=t;1!==f&&(a=VD({inputs:{x:t},backend:s,attrs:{shape:[N,T,1]}}),S.push(a));const i=1===f?2:1;let u=e;o&&(u=VD({inputs:{x:e},backend:s,attrs:{shape:[N,1,T]}}),S.push(u));const l=BD({inputs:{a:a,b:u},backend:s});A=YD({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),S.push(l)}else{const u=co(t.dtype,e.dtype),l=new LD(w,v,[N,d,f],n,r,C,R,E,$),c=[k,I];if(null!=o&&c.push(o),E&&c.push(a),$){const t=s.makeTensorInfo([],"float32",Ls(i,"float32"));c.push(t),S.push(t)}A=s.runWebGLProgram(l,c,u)}const _=VD({inputs:{x:A},backend:s,attrs:{shape:x}});S.push(A);for(const M of S)s.disposeIntermediateTensorInfo(M);return _}const eO={kernelName:is,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return tO({a:s,b:o,transposeA:u,transposeB:l,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}},nO="return abs(x);",rO={kernelName:Jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=GF(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new gD(r.shape,nO):new dD(r.shape,nO),n.runWebGLProgram(s,[r],r.dtype)}},sO=FD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),oO={kernelName:Zt,backendName:"webgl",kernelFunc:sO},aO=FD({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),iO={kernelName:Qt,backendName:"webgl",kernelFunc:aO},uO="return a + b;",lO=DD({opSnippet:uO,packedOpSnippet:uO,supportsComplex:!0,cpuKernelImpl:dF}),cO={kernelName:te,backendName:"webgl",kernelFunc:lO};class hO{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class pO{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const dO={kernelName:ee,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return SD({inputs:{x:s[0]},backend:r});if(s.length>jt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),o=t({inputs:s.slice(e),backend:r});return t({inputs:[n,o],backend:r})}const o=s.map((t=>t.dtype)).reduce(((t,e)=>co(t,e))),a=s.map((t=>t.shape)),i=jt().getBool("WEBGL_PACK")?new pO(s[0].shape,a):new hO(s[0].shape,a);return r.runWebGLProgram(i,s,o)}},fO={kernelName:ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=bt(o,s.shape);let l=u;const c=Ic(l,i);let h=s;null!=c&&(h=ZD({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Nc(l.length,i)),kc("all",l,i);const[p,d]=wc(h.shape,l),f=VD({inputs:{x:h},backend:n,attrs:{shape:[-1,ut(d)]}}),m=jD(f,f.dtype,"all",n);let g;return g=VD(a?{inputs:{x:m},backend:n,attrs:{shape:vc(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},mO={kernelName:re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=bt(o,s.shape);let l=u;const c=Ic(l,i);let h=s;null!=c&&(h=ZD({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Nc(l.length,i)),kc("any",l,i);const[p,d]=wc(h.shape,l),f=VD({inputs:{x:h},backend:n,attrs:{shape:[-1,ut(d)]}}),m=jD(f,f.dtype,"any",n);let g;return g=VD(a?{inputs:{x:m},backend:n,attrs:{shape:vc(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class gO{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,o];const a="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class yO{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,st(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],o=Math.ceil(s/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,i=a.length,u=qM(i),l=aD("coords",i);let c,h;if(1===o){h=i+1;const t=qM(h);c=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[i-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[i-2]};`}else h=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((t=>"int "+t)),m=aD("sourceLocR",h-1).concat("inIdx.r"),g=aD("sourceLocG",h-1).concat("inIdx.g"),y=aD("sourceLocB",h-1).concat("inIdx.b"),b=aD("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${a[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${a[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function bO(t,e,n,r=null){let s=e.shape[0],o=e.shape[1];null!=r&&(s=r.shape[0],o=r.shape[1]);const a=df(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new gO(i,n,null==r),l=[e];null!=r&&l.push(r);const c=t.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=bO(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function xO(t,e,n,r=null){const s=null!=r?r.shape:e.shape,o=df(s[s.length-1]),a=new yO(s,o,n,null==r),i=null==r?[e]:[e,r],u=t.runWebGLProgram(a,i,"int32");if(u.shape.length===e.shape.length){const r=xO(t,e,n,u);return t.disposeIntermediateTensorInfo(u),r}return u}function wO(t,e,n,r){const s=[n];if(kc("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!jt().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],o=t.texData.get(e.dataId);let a=e;null!==o&&o.isPacked&&(a=t.unpackTensor(e),n.push(a));const[i,u]=wc(a.shape,s),l=ut(u),c=VD({inputs:{x:a},backend:t,attrs:{shape:[-1,l]}});n.push(c);const h=bO(t,c,r);n.push(h);const p=VD({inputs:{x:h},backend:t,attrs:{shape:i}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),p}return xO(t,e,r)}const vO={kernelName:se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=bt(o,s.shape);const i=Ic(a,s.shape.length);let u=s;const l=[];null!=i&&(u=ZD({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Nc(a.length,u.shape.length)),kc("argMax",[a[0]],u.shape.length);const c=wO(n,u,a[0],"max");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},kO={kernelName:oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=bt(o,s.shape);const i=Ic(a,s.shape.length);let u=s;const l=[];null!=i&&(u=ZD({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Nc(a.length,u.shape.length)),kc("argMin",[a[0]],u.shape.length);const c=wO(n,u,a[0],"min");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},IO=FD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),SO={kernelName:ae,backendName:"webgl",kernelFunc:IO},NO=FD({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),TO={kernelName:ie,backendName:"webgl",kernelFunc:NO},CO=FD({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),EO={kernelName:ue,backendName:"webgl",kernelFunc:CO},$O=DD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),RO={kernelName:ce,backendName:"webgl",kernelFunc:$O},AO=FD({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),_O={kernelName:le,backendName:"webgl",kernelFunc:AO};class MO{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,i=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${i});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(o/4),w=o%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class FO{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,i=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(o/4),k=o%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const DO={kernelName:he,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;RM(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r;st(Sl(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=fl(s.shape,o,a,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))return SD({inputs:{x:s},backend:n});const c=new MO(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},OO={kernelName:de,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=ml(s.shape,o,a,[1,1,1],i,u,l),h=new FO(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class LO{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,i=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=i-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${o}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PO{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,o=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zO={kernelName:fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,h=ml(a.shape,i,u,[1,1,1],l,c),p=new PO(h);return n.runWebGLProgram(p,[s],a.dtype)}},BO={kernelName:pe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o;RM([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=fl(a.shape,i,u,1,l),h=new LO(c);return n.runWebGLProgram(h,[s],a.dtype)}},UO={kernelName:me,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return tO({a:s,b:o,transposeA:a,transposeB:i,backend:n})}};class VO{constructor(t,e,n,r,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],Di(t,e),Di(t,n);let a="0.0";null!=r&&(Di(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Di(t,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class WO{constructor(t,e,n,r,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Di(t,e),Di(t,n);let a="vec4(0.0)";null!=r&&(Di(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Di(t,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const GO={kernelName:an,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=t;st(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),st(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),st(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,o];let c=null;null!=a&&(c=a.shape,l.push(a));let h=null;null!=i&&(h=i.shape,l.push(i));const p=jt().getBool("WEBGL_PACK_NORMALIZATION")?new WO(r.shape,s.shape,o.shape,c,h,u):new VO(r.shape,s.shape,o.shape,c,h,u);return e.runWebGLProgram(p,l,l[0].dtype)}};class HO{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=qM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return jO.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${jO[e]} = start[${e}] + coords.${jO[e]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const jO=["x","y","z","w","u","v"];class qO{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=qM(this.rank),n=aD("coords",this.rank),r=aD("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${o};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${a}\n        ${i}\n        setOutput(result);\n      }\n    `}}function KO(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:a}=r,[i,u]=au(s,o,a);if(ji(s,i,u),0===ut(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=HF(t.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,e)}const{isPacked:l}=n.texData.get(s.dataId),c=su(s.shape,i,u);if(l||!c){const t=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qO(u):new HO(u),e=[i];return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,r){const s=r.texData.get(t.dataId),o=r.makeTensorInfo(n,t.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=t.dtype;let i=ou(e,Ft(t.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||t.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}(s,i,u,n)}const XO={kernelName:Sr,backendName:"webgl",kernelFunc:KO},YO={kernelName:ge,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:a}=r;st(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((t,e)=>t*e)),u=mf(s.shape,o,i),l=gf(u.length,o.length),c=yf(s.shape,o,i),h=bf(a,o.length),p=xf(c,a,o.length),d=[],f=VD({inputs:{x:s},backend:n,attrs:{shape:u}}),m=ZD({inputs:{x:f},backend:n,attrs:{perm:l}}),g=VD({inputs:{x:m},backend:n,attrs:{shape:c}}),y=KO({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},JO={kernelName:ye,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a}=r,i=n.readSync(s.dataId),u=n.readSync(o.dataId),l=fF(i,u,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,l)}},ZO={kernelName:xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,o=n.readSync(r.dataId),a=n.readSync(s.dataId),i=Di(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},QO=DD({opSnippet:"return float(a != b);",cpuKernelImpl:OF,dtype:"bool"}),tL={kernelName:qn,backendName:"webgl",kernelFunc:QO};function eL(t){const{inputs:e,backend:n}=t,{input:r}=e;return SD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const nL={kernelName:ur,backendName:"webgl",kernelFunc:eL},rL={kernelName:we,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:o}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===o.dtype)return SD({inputs:{x:o},backend:r});const e=ph(o.shape),n=t({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),s=TD({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const e=eL({inputs:{input:o},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!St(o.dtype,a)){const t=SD({inputs:{x:o},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if(r.shouldExecuteOnCPU([o])){const t=r.texData.get(o.dataId).values,[e,n,s]=gF(t,o.shape,o.dtype,a);return r.makeTensorInfo(e,n,s)}if("int32"===a)return function(t,e){const n=new dD(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",wt("bool",1)),e=QO({inputs:{a:o,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${a}`)}},sL="return ceil(x);",oL=FD({opSnippet:sL,packedOpSnippet:sL,cpuKernelImpl:yF}),aL={kernelName:ve,backendName:"webgl",kernelFunc:oL};class iL{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class uL{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const lL={kernelName:ke,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;i=jt().getBool("WEBGL_PACK_CLIP")?new uL(s.shape):new iL(s.shape);const u=[[o],[a]];return n.runWebGLProgram(i,[s],s.dtype,u)}};class cL{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function hL(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const pL={kernelName:Se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),o=new cL(r.shape),a=[hL(r,s.complexTensorInfos.real),hL(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(o,a,a[0].dtype)}};class dL{constructor(t){this.outputShape=[],this.outputShape=of(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++){const t=e[o-1];n.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${t}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class fL{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=of(t,e);const n=this.outputShape,r=n.length,s=qM(r),o=aD("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const i=new Array(t.length-1);i[0]=t[0][e];for(let f=1;f<i.length;f++)i[f]=i[f-1]+t[f][e];const u=a[e],l=a.slice(-2),c=a.join();let h=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let f=1;f<i.length;f++){const t=i[f-1];h+=`\n        if (${u} < ${i[f]}  && ${u} >= ${i[f-1]}) {\n          return getChannel(\n            getT${f}(${mL(a,u,t)}),\n            vec2(${mL(l,u,t)}));\n        }`}const p=i.length,d=i[i.length-1];h+=`\n        return getChannel(\n          getT${p}(${mL(a,u,d)}),\n          vec2(${mL(l,u,d)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function mL(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function gL(t){const{inputs:e,backend:n}=t,{input:r}=e;return SD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const yL={kernelName:fn,backendName:"webgl",kernelFunc:gL};function bL(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>eL({inputs:{input:t},backend:n}))),s=t.map((t=>gL({inputs:{input:t},backend:n}))),o=bL(r,e,n),a=bL(s,e,n),i=TD({inputs:{real:o,imag:a},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),i}let s=n.shouldExecuteOnCPU(t);if("string"===r&&(s=!0),s){const s=t.map((t=>{const r=ut(t.shape.slice(e));return VD({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})})),o=s.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),a=of(s.map((t=>t.shape)),1),i=1===s[0].shape[0],u=bF(o,a,r,i),l=of(t.map((t=>t.shape)),e),c=n.makeTensorInfo(l,r,u);return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}const o=jt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(t.length>o){const r=[];for(let a=0;a<t.length;a+=o){const s=t.slice(a,a+o);r.push(bL(s,e,n))}const s=bL(r,e,n);for(const t of r)n.disposeIntermediateTensorInfo(t);return s}if(jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new fL(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const{tensors2D:a,outShape:i}=function(t,e,n){const r=of(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>VD({inputs:{x:t},attrs:{shape:[-1,ut(t.shape.slice(e))]},backend:n}))),outShape:r}}(t,e,n),u=new dL(a.map((t=>t.shape))),l=n.runWebGLProgram(u,a,r);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const c=VD({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),c}function xL(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=bt(s,e[0].shape)[0];sf(e.map((t=>t.shape)),o);const a=of(e.map((t=>t.shape)),o);if(0===ut(a))return n.makeTensorInfo(a,e[0].dtype,[]);const i=e.filter((t=>ut(t.shape)>0));return 1===i.length?SD({inputs:{x:i[0]},backend:n}):bL(i,o,n)}const wL={kernelName:Ne,backendName:"webgl",kernelFunc:xL};class vL{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class kL{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,o=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${o}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IL{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=QM(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,i=t.dilationWidth,u=t.filterHeight,l=t.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let m=0;m<l;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const e=2*m;if(h+=`\n           xC = xCCorner + ${e*i};\n           `,1===a){if(e<l&&(o%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n               `,h+=1===i&&e>0?`\n                 xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                   } else {\n                     xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 xC${e} = xTexelC${e};\n                 `,e+1<l)){const t=o%2==0?Q(i):i;i%2==0&&o%2==1||i%2!=0&&o%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                     xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${e+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${e+1}Ready = 1;\n                   }\n                   `,h+=i>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                     } else {\n                      xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                     }\n                     `:`\n                     xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                     `):h+=1===t?`\n                     xC${e+1} = xTexelC${e};\n                     `:`\n                     xCOffset = xC + ${t};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                       xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${e+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${e+1}Ready = 1;\n                     }\n\n                     xC${e+1} = xTexelC${e+1};\n                     `}}else e<l&&(o%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                   xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${e+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${e+1}Ready = 1;\n                 }\n\n                 xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n               `,e+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                   xTexelC${e} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${e}.zw = vec2(0.0);\n                   }\n                   xTexelC${e}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                   xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${e+1}.zw = vec2(0.);\n                   }\n                   xTexelC${e+1}Ready = 1;\n                 }\n\n                 xC${e} = vec4(\n                   xTexelC${e}.xy, xTexelC${e+1}.xy);\n               `,e+1<l&&(h+=`\n                   xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                 `)));e<l&&(h+=`\n             wTexel = getW(r, ${e}, d1, d2);\n             dotProd += xC${e}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${e}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,e+1<l&&(h+=`\n               wTexel = getW(r, ${e+1}, d1, d2);\n               dotProd += xC${e+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${e+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}class SL{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=QM(this.outputShape.length);const{dataFormat:n}=e,r=_M(),s="channelsLast"===n,o=s?1:2,a=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${l};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${o}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function NL(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&1===n&&t[0]>1?[t[0],1]:null}function TL({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=t.shape,l=r.texData.get(t.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=o){const t=NL(o.shape,d);null!=t&&(o=VD({inputs:{x:o},backend:r,attrs:{shape:t}}),m.push(o))}if(null!=s){const t=NL(s.shape,d);null!=t&&(s=VD({inputs:{x:s},backend:r,attrs:{shape:t}}),m.push(s))}if((1!==h&&1!==p||!(c>1e3))&&l.isPacked&&d&&null!=l.texture&&u[2]%2!=0&&ct(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,st(SM(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const d=VD({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=tO({a:h,b:d,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),y=r.texData.get(g.dataId);st(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,y.shape=n.outShape,f=SD({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=VD({inputs:{x:t},backend:r,attrs:{shape:d?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=VD({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=tO({a:d?l:c,b:d?c:l,transposeA:!d,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});f=VD({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const g of m)r.disposeIntermediateTensorInfo(g);return f}function CL({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[n.batchSize,m,g],b=[];if(null!=o){const t=NL(o.shape,f);null!=t&&(o=VD({inputs:{x:o},backend:r,attrs:{shape:t}}),b.push(o))}if(null!=s){const t=NL(s.shape,f);null!=t&&(s=VD({inputs:{x:s},backend:r,attrs:{shape:t}}),b.push(s))}const x=VD({inputs:{x:e},backend:r,attrs:{shape:[1,m,ut(e.shape)/m]}});b.push(x);const w=new SL(y,n),v=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[t],"float32",v),I=VD({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);const S=null!=s,N=null!=o,T="leakyrelu"===i,C=i?OD(i,!0):null,E=new LD(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,T),$=f?[I,x]:[x,I];if(s&&$.push(s),N&&$.push(o),T){const t=r.makeTensorInfo([],"float32",Ls(a,"float32"));$.push(t),b.push(t)}const R=r.runWebGLProgram(E,$,"float32"),A=VD({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});b.push(R);for(const _ of b)r.disposeIntermediateTensorInfo(_);return A}const EL={kernelName:Te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Nl(u),p=gl(s.shape,o.shape,a,l,i,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&jt().getBool("WEBGL_EXP_CONV")){const t=new IL(p),e=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(t,[s,o],"float32",e)}else if(jt().getBool("WEBGL_CONV_IM2COL"))d=CL({x:s,filter:o,convInfo:p,backend:n});else{const t=new vL(p);d=n.runWebGLProgram(t,[s,o],"float32")}else d=TL({x:s,filter:o,convInfo:p,backend:n});const f=VD({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class $L{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,o="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${o}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RL{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,o="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,u=o?1:2,l=o?2:3,c=o?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${o}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AL{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${o};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _L{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,o=t.strideHeight,a=t.strideWidth,i=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ML={kernelName:Ce,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Nl(u),p=gl(s.shape,c,a,1,i,l,!1,h),d=new $L(p);return n.runWebGLProgram(d,[s,o],"float32")}},FL={kernelName:Ee,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Nl(l),p=gl(a,o.shape,i,1,u,c,!1,h),d=new RL(p);return n.runWebGLProgram(d,[s,o],"float32")}},DL={kernelName:$e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,l=yl(s.shape,o.shape,a,u,i),c=new kL(l);return n.runWebGLProgram(c,[s,o],"float32")}},OL={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,l=yl(s.shape,u,a,1,i),c=new AL(l);return n.runWebGLProgram(c,[s,o],"float32")}},LL={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,l=yl(u,o.shape,i,1,a),c=new _L(l);return n.runWebGLProgram(c,[s,o],"float32")}},PL=FD({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),zL={kernelName:_e,backendName:"webgl",kernelFunc:PL},BL=FD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),UL={kernelName:Me,backendName:"webgl",kernelFunc:BL};class VL{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,i,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[a-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(i-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const WL={kernelName:Oe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=r,c=new VL(s.shape,o.shape,i,u,l);return n.runWebGLProgram(c,[s,o,a],"float32")}};var GL;!function(t){t.Prod="*",t.Sum="+"}(GL||(GL={}));class HL{constructor(t,e,n,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,o=this.op===GL.Prod?"1.0":"0.0",a=n?o:`getX(${jL(s,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(i-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${qM(s)} coords = getOutputCoords();\n        int end = ${qL(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${qL(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${jL(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function jL(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function qL(t,e,n){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function KL(t,e,n,r,s,o){const a=e.shape.length,i=Ic([r],a);let u=e;null!=i&&(u=ZD({inputs:{x:e},backend:n,attrs:{perm:i}}));const l=Nc(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=SD({inputs:{x:u},backend:n});for(let p=0;p<=Math.ceil(Math.log2(c))-1;p++){const e=new HL(t,u.shape,!1,o),r=[[p]],s=h;h=n.runWebGLProgram(e,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const e=new HL(t,u.shape,s,o),r=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=i){const t=ZD({inputs:{x:h},backend:n,attrs:{perm:Sc(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),t}return h}const XL={kernelName:Fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return KL(GL.Prod,s,n,o,a,i)}},YL={kernelName:De,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return KL(GL.Sum,s,n,o,a,i)}},JL={kernelName:Le,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(o.dataId),r=fF(t,e,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(o),r=mF(t,e,a,i);return n.makeTensorInfo(r.shape,o.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class ZL{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const QL={kernelName:Pe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=("NHWC"===a?s.shape[1]:s.shape[2])*o,l=("NHWC"===a?s.shape[2]:s.shape[3])*o,c=("NHWC"===a?s.shape[3]:s.shape[1])/(o*o),h=new ZL("NHWC"===a?[i,u,l,c]:[i,c,u,l],o,a);return n.runWebGLProgram(h,[s],s.dtype)}};class tP{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=QM(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,i=t.outChannels/t.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${o}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class eP{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=QM(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,i=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)p+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let g=0;g<c;g++)p+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const t=2*g;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===i){if(t<c&&(a%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=a%2==0?Q(u):u;u%2==0&&a%2==1||u%2!=0&&a%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(a%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const nP={kernelName:ze,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),st(Sl(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=gl(s.shape,o.shape,a,c,i,l,!0);let p;p=jt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new eP(h):new tP(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,o],"float32",d)}};class rP{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${o} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sP{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oP={kernelName:Be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,h=gl(s.shape,c,a,i,u,l,!0),p=new rP(h);return n.runWebGLProgram(p,[s,o],"float32")}},aP={kernelName:Ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,h=gl(c,o.shape,a,i,u,l,!0),p=new sP(h);return n.runWebGLProgram(p,[s,o],"float32")}};class iP{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const uP={kernelName:Ve,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],o=ut(r.shape),a=VD({inputs:{x:r},backend:n,attrs:{shape:[o]}}),i=new iP(o),u=n.runWebGLProgram(i,[a],a.dtype),l=VD({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}};class lP{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:o,filterHeight:a,filterWidth:i,dilationHeight:u,dilationWidth:l}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const cP={kernelName:We,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,l=dl(s.shape,o.shape,a,i,"NHWC",u);let c;const h=new lP(l);c=n.runWebGLProgram(h,[s,o],"float32");const p=VD({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}},hP={kernelName:qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=Lf(s,o.length);zf(a.length,u,o);const{path:l,steps:c}=Bf(i,u),h=c.length;let p=null,d=a.length;const f=[];for(let m=0;m<h;++m){for(const t of c[m]){const{permutationIndices:e,expandDims:r}=Pf(d,u[t]);let s;Uf(e)?s=o[t]:(s=ZD({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);ct(s.shape,a)||(s=VD({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===p?p=s:(p=BD({inputs:{a:s,b:p},backend:n}),f.push(p))}m<h-1&&(l[m]>=0&&(p=YD({inputs:{x:p},backend:n,attrs:{axis:l[m]-(a.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},pP=FD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),dP={kernelName:Ke,backendName:"webgl",kernelFunc:pP},fP={kernelName:Xe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,o=jt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ID("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new kD("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(o,[r,s],r.dtype)}},mP=DD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:xF}),gP={kernelName:Je,backendName:"webgl",kernelFunc:mP},yP=FD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${kf};\n  float a1 = ${If};\n  float a2 = ${Sf};\n  float a3 = ${Nf};\n  float a4 = ${Tf};\n  float a5 = ${Cf};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),bP={kernelName:Ye,backendName:"webgl",kernelFunc:yP},xP=FD({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:wF,dtype:"float32"}),wP={kernelName:Ze,backendName:"webgl",kernelFunc:xP};function vP(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(st(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),u=a+s+1),i.splice(u,0,1),VD({inputs:{x:o},backend:r,attrs:{shape:i}})}const kP={kernelName:Qe,backendName:"webgl",kernelFunc:vP},IP="return exp(x) - 1.0;",SP=FD({opSnippet:IP,packedOpSnippet:IP,cpuKernelImpl:vF}),NP={kernelName:tn,backendName:"webgl",kernelFunc:SP};class TP{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${r}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function CP(t,e,n){const r=n.texData.get(t.dataId),s=ut(t.shape),o=t.shape[t.shape.length-1],a=VD({inputs:{x:t},backend:n,attrs:{shape:[s/o,o]}}),i=a.shape,u=new TP("real",i,e),l=new TP("imag",i,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=TD({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=VD({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(d),f}const EP={kernelName:en,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return CP(r,!1,n)}};class $P{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function RP(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||At(s),"string"===o){const t=vt(o,ut(r));return t.fill(s),e.makeTensorInfo(r,o,t)}{const t=new $P(r,s),n=[[s]];return e.runWebGLProgram(t,[],o,n)}}const AP={kernelName:nn,backendName:"webgl",kernelFunc:RP};class _P{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const MP={kernelName:rn,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new _P(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},FP="return floor(x);",DP=FD({opSnippet:FP,packedOpSnippet:FP,cpuKernelImpl:kF}),OP={kernelName:sn,backendName:"webgl",kernelFunc:DP},LP=DD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),PP={kernelName:on,backendName:"webgl",kernelFunc:LP};class zP{constructor(t){this.variableNames=["A"];const e=_M(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class BP{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=_M(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const UP={kernelName:os,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:o}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,o];if(i||a){const t=jt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=VP&&t===WP||(WP=t,VP=document.createElement("canvas").getContext("2d",{willReadFrequently:WP})),VP.canvas.width=u,VP.canvas.height=l,VP.drawImage(s,0,0,u,l),s=VP.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=nM.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=jt().getBool("WEBGL_PACK")?new BP(h):new zP(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let VP,WP=jt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const GP={kernelName:us,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=Nl(c),g=gl(s.shape,o.shape,u,h,l,p,!1,m);let y;const b=[],x=null!=a,w=null!=i,v="leakyrelu"===d,k=()=>{const t=[s,o],e=(t,e)=>{if("NCHW"===e&&1===t.shape.length&&1!==t.shape[0]){const e=VD({inputs:{x:t},backend:n,attrs:{shape:[t.shape[0],1,1]}});return b.push(e),e}return t};if(x&&t.push(e(a,c)),w&&t.push(e(i,c)),v){const e=n.makeTensorInfo([],"float32",Ls(f,"float32"));t.push(e),b.push(e)}return t};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&jt().getBool("WEBGL_EXP_CONV")){const t=d?OD(d,!0):null,e=new IL(g,x,t,w,v),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(e,s,"float32",r)}else if(jt().getBool("WEBGL_CONV_IM2COL"))y=CL({x:s,filter:o,convInfo:g,backend:n,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{const t=d?OD(d,!1):null,e=new vL(g,x,t,w,v),r=k();y=n.runWebGLProgram(e,r,"float32")}else y=TL({x:s,filter:o,convInfo:g,backend:n,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});const I=VD({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((t=>n.disposeIntermediateTensorInfo(t))),I}},HP={kernelName:ls,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),st(Sl(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=gl(s.shape,o.shape,u,m,l,h,!0),y=jt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?OD(p,y):null,x=[s,o],w=null!=a,v=null!=i,k="leakyrelu"===p;if(w&&x.push(a),v&&x.push(i),k){const t=n.makeTensorInfo([],"float32",Ls(d,"float32"));x.push(t),f.push(t)}let I;I=y?new eP(g,w,b,v,k):new tP(g,w,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class jP{constructor(t,e,n,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=qM(n.length);let o="\n    int index;";for(let a=0;a<this.sliceDim;a++)o+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${o}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const qP={kernelName:ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=ut(r.shape),[u,l,c,h]=Vi(r,s),p=VD({inputs:{x:s},backend:n,attrs:{shape:[l,a]}}),d=VD({inputs:{x:r},backend:n,attrs:{shape:[ut(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const t=n.readSync(s.dataId),e=n.bufferSync(r),o=IF(t,e,r.dtype,l,a,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,o.values)}const f=new jP(a,h,[l,c],r.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=VD({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class KP{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=qM(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<t.length;s++)2===s?r.push("index"):r.push(`${n[s]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function XP(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=bt(a,s.shape)[0];if(jt().get("DEBUG")){const t=n.readSync(o.dataId),e=s.shape[u];for(let n=0;n<t.length;++n){const r=t[n];st(r<=e-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`))}}const l=sm(s,o,u,i),c=ut(o.shape),h=[],p=VD({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=VD({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(p),h.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const t=n.bufferSync(d),e=n.bufferSync(p),r=SF(e,t,f);return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new KP(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=VD({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}const YP={kernelName:un,backendName:"webgl",kernelFunc:XP},JP=DD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:NF,dtype:"bool"}),ZP={kernelName:cn,backendName:"webgl",kernelFunc:JP},QP=DD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:TF}),tz={kernelName:hn,backendName:"webgl",kernelFunc:QP},ez={kernelName:dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return CP(r,!0,n)}},nz=FD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),rz={kernelName:mn,backendName:"webgl",kernelFunc:nz},sz=FD({opSnippet:"return float(isinf(x));",dtype:"bool"}),oz={kernelName:gn,backendName:"webgl",kernelFunc:sz},az=FD({opSnippet:"return float(isnan(x));",dtype:"bool"}),iz={kernelName:yn,backendName:"webgl",kernelFunc:az},uz=DD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:CF,dtype:"bool"}),lz={kernelName:xn,backendName:"webgl",kernelFunc:uz},cz=DD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:EF,dtype:"bool"}),hz={kernelName:wn,backendName:"webgl",kernelFunc:cz},pz={kernelName:vn,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,a=$F(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}},dz=FD({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:RF}),fz={kernelName:kn,backendName:"webgl",kernelFunc:dz},mz=FD({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),gz={kernelName:In,backendName:"webgl",kernelFunc:mz},yz=DD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),bz={kernelName:Sn,backendName:"webgl",kernelFunc:yz},xz=FD({opSnippet:"return float(!(x >= 1.0));"}),wz={kernelName:Nn,backendName:"webgl",kernelFunc:xz},vz=DD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),kz={kernelName:Tn,backendName:"webgl",kernelFunc:vz};class Iz{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const o=e,a=t[3]-1;let i;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class Sz{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,a=t[3]-1;let i;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const Nz={kernelName:Rn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,l=jt().getBool("WEBGL_PACK_NORMALIZATION")?new Sz(s.shape,o,a,i,u):new Iz(s.shape,o,a,i,u);return n.runWebGLProgram(l,[s],s.dtype)}};class Tz{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Cz={kernelName:An,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:c}=r,h=new Tz(s.shape,i,u,l,c);return n.runWebGLProgram(h,[s,o,a],s.dtype)}};function Ez(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=bt(o,s.shape);let l=u;const c=Ic(l,i),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const t=n.texData.get(d.dataId).values,e=new Array(i);for(let n=0;n<e.length;n++)e[n]=s.shape[c[n]];const r=rD(t,s.shape,s.dtype,c,e);d=n.makeTensorInfo(e,s.dtype),n.texData.get(d.dataId).values=r}else d=XD(s,c,n);l=Nc(l.length,i)}kc("max",l,i);const[f,m]=wc(d.shape,l);let g,y=f;if(a&&(y=vc(f,u)),p){const t=n.texData.get(d.dataId).values,e=AF(t,ut(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const s=ut(e),o=VD({inputs:{x:t},attrs:{shape:[ut(t.shape)/s,s]},backend:r}),a=jD(o,t.dtype,"max",r),i=VD({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(a),i}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const $z={kernelName:_n,backendName:"webgl",kernelFunc:Ez},Rz=DD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:_F}),Az={kernelName:Mn,backendName:"webgl",kernelFunc:Rz},_z={kernelName:Fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;RM(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r;st(Sl(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=fl(s.shape,o,a,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&ct(l.inShape,l.outShape))return SD({inputs:{x:s},backend:n});const c=new MO(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},Mz={kernelName:On,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=ml(s.shape,o,a,[1,1,1],i,l,u),h=new FO(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class Fz{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=s-1-t.padInfo.top,i=o-1-t.padInfo.left,u=s*o-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${o} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Dz{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,i=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=i-1-t.padInfo.front,h=u-1-t.padInfo.top,p=l-1-t.padInfo.left,d=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${o}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Oz={kernelName:Ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,h=ml(a.shape,i,u,[1,1,1],l,c),p=new FO(h,"max",!0),d=n.runWebGLProgram(p,[a],a.dtype),f=new Dz(h),m=n.runWebGLProgram(f,[s,d],a.dtype);return n.disposeIntermediateTensorInfo(d),m}},Lz={kernelName:Dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:a}=e,i=o;RM([o,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=fl(i.shape,u,l,1,c,h),d=new MO(p,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new Fz(p),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},Pz={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=n;st(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];st(Sl(o,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const c=fl(r.shape,s,o,l,a),[h,p]=function(t,e,n,r){let s=new MO(n,"max",!1);const o=r.runWebGLProgram(s,[t],"float32");return s=new MO(n,"max",!0,!0,e),[o,r.runWebGLProgram(s,[t],"float32")]}(r,i,c,u);return[h,p]}},zz={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:o}=e,a=n,i=r.shape.length,u=bt(o,r.shape);let l=u;const c=Ic(l,i),h=null!=c,p=a.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const t=a.texData.get(f.dataId).values,e=new Array(i);for(let s=0;s<e.length;s++)e[s]=r.shape[c[s]];const n=rD(t,r.shape,r.dtype,c,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=XD(r,c,a);d.push(f),l=Nc(l.length,i)}kc("sum",l,i);const[m,g]=wc(f.shape,l);let y=m;s&&(y=vc(m,u));const b=function(t,e,n,r){const s=ut(e),o=VD({inputs:{x:t},attrs:{shape:[ut(t.shape)/s,s]},backend:r}),a=jD(o,"float32","mean",r),i=VD({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(a),i}(f,g,y,a);for(const x of d)a.disposeIntermediateTensorInfo(x);return b}},Bz={kernelName:Bn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=bt(o,s.shape);let l=u;const c=Ic(l,i);let h=s;null!=c&&(h=ZD({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Nc(l.length,s.shape.length)),kc("min",l,i);const[p,d]=wc(h.shape,l),f=VD({inputs:{x:h},backend:n,attrs:{shape:[-1,ut(d)]}}),m=jD(f,f.dtype,"min",n);let g;return g=VD(a?{inputs:{x:m},backend:n,attrs:{shape:vc(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Uz=DD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:MF}),Vz={kernelName:Un,backendName:"webgl",kernelFunc:Uz};class Wz{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=qM(r),o=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${o});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Gz{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=qM(r),o=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),i=aD("rc",r),u=aD("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${o});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Hz={kernelName:Vn,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:o}=n,a=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gz(r.shape,s,o):new Wz(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)}},jz=DD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),qz={kernelName:Wn,backendName:"webgl",kernelFunc:jz};class Kz{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const Xz=DD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Yz={kernelName:je,backendName:"webgl",kernelFunc:Xz},Jz="return a - b;",Zz=DD({opSnippet:Jz,packedOpSnippet:Jz,supportsComplex:!0,cpuKernelImpl:tD}),Qz={kernelName:jr,backendName:"webgl",kernelFunc:Zz};function tB(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,a=bt([o],s.shape),i=Ez({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),u=vc(i.shape,a),l=VD({inputs:{x:i},backend:n,attrs:{shape:u}}),c=Zz({inputs:{a:s,b:l},backend:n}),h=xP({inputs:{x:c},backend:n}),p=YD({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),d=VD({inputs:{x:p},backend:n,attrs:{shape:u}}),f=Xz({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const eB={kernelName:Fr,backendName:"webgl",kernelFunc:tB},nB={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:tB({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new Kz(l,c,o),p=[[a]],d=n.runWebGLProgram(h,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),d}},rB={kernelName:jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,s]=DF(t.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,e)}let s;return s=jt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new gD(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new dD(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},sB=fd,oB={kernelName:Kn,backendName:"webgl",kernelFunc:function(t){cs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),{selectedIndices:h}=sB(l,c,a,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},aB=md,iB={kernelName:Xn,backendName:"webgl",kernelFunc:function(t){cs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(o.dataId),{selectedIndices:p,validOutputs:d}=aB(c,h,a,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},uB=gd,lB={kernelName:Yn,backendName:"webgl",kernelFunc:function(t){cs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(o.dataId),p=a,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=uB(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class cB{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const hB={kernelName:Zn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,l=ut(s.shape),c=new cB(l,a,i,u),h=VD({inputs:{x:s},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[h],o);n.disposeIntermediateTensorInfo(h);const d=VD({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(p),d}};function pB(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=eL({inputs:{input:r},backend:n}),e=pB({inputs:{x:t},backend:n}),s=gL({inputs:{input:r},backend:n}),o=pB({inputs:{x:s},backend:n}),a=TD({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),a}return RP({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const dB={kernelName:rs,backendName:"webgl",kernelFunc:pB},fB={kernelName:Jn,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=eL({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),o=gL({inputs:{input:s},backend:r}),a=pB({inputs:{x:o},backend:r}),i=TD({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(a),i}return RP({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},mB={kernelName:Qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return vP({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach((t=>{ot(o,t.shape,"All tensors passed to stack must have matching shapes"),st(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=xL({inputs:e.map((t=>{const e=vP({inputs:{input:t},backend:n,attrs:{dim:s}});return i.push(e),e})),backend:n,attrs:{axis:s}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}};class gB{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=qM(r),o=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${o});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class yB{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=qM(r),o=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),i=aD("rc",r),u=aD("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let f=0,m=1===r?2:4;f<m;f++)d+=`\n        ${h[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${o});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const bB=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:a}=r;if(0===ut(s.shape)){const t=o.map(((t,e)=>t[0]+s.shape[e]+t[1]));return RP({backend:n,attrs:{shape:t,value:a,dtype:s.dtype}})}const i=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yB(s.shape,o,a):new gB(s.shape,o,a),u=[[a]];return n.runWebGLProgram(i,[s],s.dtype,u)},xB={kernelName:tr,backendName:"webgl",kernelFunc:bB},wB=DD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),vB={kernelName:nr,backendName:"webgl",kernelFunc:wB},kB={kernelName:sr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],l=bt(o,s.shape);let c=l;const h=Ic(c,i);let p,d=s;if(null!=h&&(d=ZD({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Nc(c.length,i),u.push(d)),kc("prod",c,i),n.shouldExecuteOnCPU([d])){const t=n.texData.get(d.dataId).values,{outVals:e,outShape:r,outDtype:s}=LF(d.shape,d.dtype,t,c);p=n.makeTensorInfo(r,s,e)}else{const[t,e]=wc(d.shape,c),r=ut(e),o=VD({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),a=jD(o,ho(s.dtype),"prod",n);p=VD({inputs:{x:a},backend:n,attrs:{shape:t}}),u.push(o),u.push(a)}if(a){u.push(p);const t=vc(p.shape,l);p=VD({inputs:{x:p},backend:n,attrs:{shape:t}})}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},IB={kernelName:or,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map((t=>n.readSync(t.dataId))),l=s.map((t=>t.shape)),c=n.readSync(o.dataId),h=n.readSync(a.dataId),[p,d,f]=PF(u,l,c,o.shape,o.dtype,h,a.shape,i),m=p.map((t=>n.makeTensorInfo([t.length],"int32",t))),g=n.makeTensorInfo(f,o.dtype,d);return m.concat([g])}},SB={kernelName:ar,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),h=n.readSync(a.dataId),p=i.map((t=>n.readSync(t.dataId))),d=i.map((t=>t.shape)),[f,m]=zF(l,s.shape,c,o.shape,o.dtype,h,a.shape,p,d,u);return n.makeTensorInfo(f,o.dtype,m)}},NB=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:o,dtype:a}=n,i=BF(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},TB={kernelName:ir,backendName:"webgl",kernelFunc:NB},CB=FD({opSnippet:"return 1.0 / x;"}),EB={kernelName:lr,backendName:"webgl",kernelFunc:CB},$B=FD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),RB={kernelName:cr,backendName:"webgl",kernelFunc:$B},AB=FD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_B={kernelName:gr,backendName:"webgl",kernelFunc:AB};class MB{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[o,a,i,u]=t;this.outputShape=[o,e,n,u];const l=[r&&e>1?a-1:a,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class FB{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,i,u]=t;this.outputShape=[o,e,n,u];const l=[r&&e>1?a-1:a,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const DB={kernelName:fr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,l]=i,c=jt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new FB(s.shape,u,l,o,a):new MB(s.shape,u,l,o,a);return n.runWebGLProgram(c,[s],"float32")}};class OB{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,o,a]=t,i=[n&&o>1?r-1:r,n&&a>1?s-1:s],u=[n&&o>1?o-1:o,n&&a>1?a-1:a],l=i[0]/u[0],c=i[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const LB={kernelName:mr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,i=new OB(o.shape,s.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}};class PB{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[o,a,i,u]=t;this.outputShape=[o,e,n,u];const l=[r&&e>1?a-1:a,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class zB{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,i,u]=t;this.outputShape=[o,e,n,u];const l=[r&&e>1?a-1:a,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const BB={kernelName:pr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,l]=i,c=jt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zB(s.shape,u,l,o,a):new PB(s.shape,u,l,o,a);return n.runWebGLProgram(c,[s],s.dtype)}};class UB{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,o,a]=t,i=[n&&o>1?r-1:r,n&&a>1?s-1:s],u=[n&&o>1?o-1:o,n&&a>1?a-1:a],l=i[0]/u[0],c=i[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const VB={kernelName:dr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,i=new UB(o.shape,s.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}};class WB{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=qM(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class GB{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=aD("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=qM(n);function i(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return i(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const HB={kernelName:yr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r,a=s.shape.length,i=bt(o,s.shape);if(0===a)return SD({inputs:{x:s},backend:n});const u=jt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GB(s.shape,i):new WB(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}};class jB{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let s="";s="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qB={kernelName:as,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:a}=e,i=n,u=new jB(r.shape,o),[l,c]=ff(a,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,h)}},KB=FD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),XB={kernelName:br,backendName:"webgl",kernelFunc:KB},YB=FD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:UF}),JB={kernelName:xr,backendName:"webgl",kernelFunc:YB};class ZB{constructor(t,e,n,r,s,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=qM(s.length),u=qM(o.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const QB={kernelName:wr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Hi(0,s,a),p=[h/l,l];if(0===h)return n.makeTensorInfo(a,s.dtype);const d=VD({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=VD({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new ZB(u,i,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=VD({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class tU{constructor(t,e,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,o=2===jt().getNumber("WEBGL_VERSION")?"while (left < right) {":s,a="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${o}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const eU={kernelName:vr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:a}=r,i=new tU(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return n.runWebGLProgram(i,[s,o],"int32",u)}};class nU{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&o.push(`${n[r]}`);r=o.join(),s=a.join()}const o=qM(n);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const rU={kernelName:kr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e,a=new nU(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,o],co(s.dtype,o.dtype))}},sU=FD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${wf};\n  float scale = ${vf};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),oU={kernelName:Ir,backendName:"webgl",kernelFunc:sU},aU=FD({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:WF}),iU={kernelName:Er,backendName:"webgl",kernelFunc:aU},uU=FD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),lU={kernelName:Cr,backendName:"webgl",kernelFunc:uU},cU=FD({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),hU={kernelName:Nr,backendName:"webgl",kernelFunc:cU},pU=FD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),dU={kernelName:Tr,backendName:"webgl",kernelFunc:pU},fU=FD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),mU={kernelName:$r,backendName:"webgl",kernelFunc:fU},gU={kernelName:_r,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:a}=r;st(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((t,e)=>t*e)),u=[[0,0]];u.push(...a);for(let y=1+o.length;y<s.shape.length;++y)u.push([0,0]);const l=[],c=bB({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=mf(c.shape,o,i,!1),p=gf(h.length,o.length,!1),d=yf(c.shape,o,i,!1),f=VD({inputs:{x:c},backend:n,attrs:{shape:h}}),m=ZD({inputs:{x:f},backend:n,attrs:{perm:p}}),g=VD({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},yU={kernelName:Dr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${o.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const i=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(o.dataId),c=n.readSync(a.dataId)[0],[h,p,d,f,m]=jF(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},bU={kernelName:Or,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:o}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(o.dataId)),[l,c,h]=qF(i,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}},xU={kernelName:Lr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${o.shape}`);const a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=KF(a,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},wU={kernelName:Pr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${o.shape}`);const a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=KF(a,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}},vU={kernelName:zr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=Hi(0,s,i);if("string"===o.dtype){const t=n.bufferSync(s),e=n.bufferSync(o),r=Vs(n.readSync(a.dataId)[0]),d=VF(t,e,i,p,c,l,u,h,r,!1);return n.makeTensorInfo(i,d.dtype,d.values)}const d=new ZB(l,u,s.shape.length,o.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[o,s,a],o.dtype),m=VD({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}},kU={kernelName:Mr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=bt(a,s.shape)[0],u=Wf(s,o,i),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((t=>{const e=[...h];e[i]=t;const r=KO({inputs:{x:s},backend:n,attrs:{begin:c,size:e}});return c[i]+=t,r}))}},IU="return sqrt(x);",SU=FD({opSnippet:IU,packedOpSnippet:IU,cpuKernelImpl:XF}),NU={kernelName:Rr,backendName:"webgl",kernelFunc:SU},TU=FD({opSnippet:"return x * x;"}),CU={kernelName:Ur,backendName:"webgl",kernelFunc:TU},EU="return (a - b) * (a - b);",$U=DD({opSnippet:EU,packedOpSnippet:EU}),RU={kernelName:Br,backendName:"webgl",kernelFunc:$U},AU={kernelName:ss,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,o=new dD(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}};class _U{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=qM(n.length),o=qM(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const MU={kernelName:Vr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=iu(s.shape,o,a,i,u,l,c,h,p);let v;if(m)v=VD({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){st(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const t=Ki(b,x,w),e=KO({inputs:{x:s},backend:n,attrs:{begin:b,size:t}});v=VD({inputs:{x:e},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([s])){const t=n.readSync(s.dataId),e=Da(s.shape,s.dtype,t),r=YF(d,e,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const t=new _U(b,w,d);v=n.runWebGLProgram(t,[s],s.dtype)}const k=VD({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},FU={kernelName:Wr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=e,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=JF(p,d,s,o,a,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},DU={kernelName:Gr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.readSync(o.dataId),u=n.readSync(a.dataId)[0],[l,c,h]=ZF(i,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},OU={kernelName:Hr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:o}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(o.dataId),i=QF(a,s);return n.makeTensorInfo(o.shape,"int32",i)}},LU=FD({opSnippet:"return tan(x);"}),PU={kernelName:qr,backendName:"webgl",kernelFunc:LU},zU=FD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),BU={kernelName:Kr,backendName:"webgl",kernelFunc:zU};class UU{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const r=qM(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function VU(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;if("string"===s.dtype||s.shape.length>5){const t=n.readSync(s.dataId),e="string"===s.dtype?t.map((t=>Vs(t))):t,r=Da(s.shape,s.dtype,e),a=eD(r,o);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new UU(s.shape,o);return n.runWebGLProgram(a,[s],s.dtype)}const WU={kernelName:Xr,backendName:"webgl",kernelFunc:VU};class GU{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class HU{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function jU(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function qU(t){let e=1;for(;e<t;)e*=2;return e}const KU={kernelName:Yr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:a}=r,i=jt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=jt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<i||o>u){const t=n.readSync(s.dataId),[e,r]=nD(t,l,s.dtype,o,a);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,RP({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(s):s,f=ut(l)/c,m=VD({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&jU(n,d);const g=qU(o),y=qU(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(t,e,r)=>{const s=x(),o=new GU(r),a=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],i=b;b=n.runWebGLProgram(o,s,"int32",a),jU(n,i)};for(let N=1;N<g;N*=2){const t=2*N;for(let e=N;e>=1;e/=2)w(t,e,[f,y])}for(let N=y;N>g;N/=2){const t=x(),e=new HU([f,N/2]),r=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(e,t,"int32",r),jU(n,s);const o=g/2,a=2*o;for(let n=o;n>=1;n/=2)w(a,n,b.shape)}let v=b;b=KO({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,o]}}),jU(n,v);let k=XP({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});jU(n,m);const I=l.slice(0,-1);I.push(o),v=b,b=VD({inputs:{x:b},attrs:{shape:I},backend:n}),jU(n,v);const S=k;return k=VD({inputs:{x:k},attrs:{shape:I},backend:n}),jU(n,S),[k,b]}};class XU{constructor(t,e,n,r,s,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const YU={kernelName:Jr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=r,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=new XU(h,p,a,i,u,[c,f,m,d]);return n.runWebGLProgram(g,[s,o],"float32")}},JU={kernelName:Qr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:o}=e;RM(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:l}=sD(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},ZU={kernelName:ts,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],l=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==o&&(l[c++]=a.shape[m]);const h=[],p=new Array(i).fill(0),d=a.shape.slice();d[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[o]=m;const t=KO({inputs:{x:a},backend:n,attrs:{begin:p,size:d}}),e=VD({inputs:{x:t},backend:n,attrs:{shape:l}});f[m]=e,h.push(t)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class QU{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,o=t.numSegments,a=o*Math.ceil(s/n);this.outputShape=[r,a];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const tV={kernelName:es,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let l=0;const c=Ic([l],i);let h=s;null!=c&&(h=ZD({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=Nc(1,i)[0]);const p=rm(h.shape,l,a),d=ut([h.shape[l]]),f=VD({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=ho(s.dtype),g=(t,e,r,s,o)=>{const a=t.shape[0],i=t.shape[1],l=nm(i,o),c=new QU({windowSize:l,inSize:i,batchSize:a,numSegments:o},e),h=n.compileAndRun(c,[t,r],s);if(u.push(h),h.shape[1]===o)return h;const p=NB({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),d=VU({inputs:{x:p},backend:n,attrs:{reps:[i/l]}});return u.push(p),u.push(d),g(h,e,d,s,o)},y=VD({inputs:{x:g(f,"unsortedSegmentSum",o,m,a)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const t=Sc(c);b=ZD({inputs:{x:b},backend:n,attrs:{perm:t}})}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},eV=[eO,rO,oO,iO,cO,dO,fO,mO,vO,kO,SO,TO,EO,RO,_O,DO,OO,zO,BO,UO,GO,YO,JO,ZO,rL,aL,lL,CD,pL,wL,EL,ML,FL,DL,OL,LL,zL,UL,WL,XL,YL,JL,QL,nP,oP,aP,uP,cP,hP,dP,fP,gP,bP,wP,kP,NP,EP,AP,MP,OP,PP,UP,GP,HP,qP,YP,ZP,tz,ND,ez,yL,rz,oz,iz,RD,lz,hz,pz,fz,gz,bz,wz,kz,Nz,Cz,$z,Az,_z,Mz,Oz,Lz,Pz,zz,Bz,Vz,Hz,qz,nB,UD,rB,oB,iB,lB,tL,hB,fB,mB,xB,vB,MD,kB,IB,SB,TB,nL,Yz,EB,RB,_B,WD,DB,LB,BB,VB,HB,qB,XB,JB,QB,eU,rU,oU,iU,lU,hU,dU,XO,eB,mU,gU,yU,bU,xU,wU,vU,kU,NU,CU,RU,AU,MU,FU,DU,OU,Qz,JD,PU,BU,WU,KU,YU,QD,JU,ZU,tV,dB];for(const rV of eV)ys(rV);const nV={"tfjs-core":Nu,"tfjs-backend-cpu":"3.21.0","tfjs-backend-webgl":"3.21.0","tfjs-data":RT,"tfjs-layers":Wx,"tfjs-converter":IN,tfjs:"3.21.0"}},8485:function(t,e,n){"use strict";var r=n(3645),s=n.n(r)()((function(t){return t[1]}));s.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0);z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]),e.Z=s},3645:function(t){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var s={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(s[a]=!0)}for(var i=0;i<t.length;i++){var u=[].concat(t[i]);r&&s[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),e.push(u))}},e}},7676:function(t,e){"use strict";e.Z='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},9894:function(t,e){"use strict";e.Z='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},2810:function(t,e){"use strict";e.Z='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},3720:function(t){t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function r(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},o={};function a(t,e){var n,r,a;return e?(a=0<=(t>>>=0)&&t<256)&&(r=o[t])?r:(n=u(t,(0|t)<0?-1:0,!0),a&&(o[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(r=s[t])?r:(n=u(t,t<0?-1:0,!1),a&&(s[t]=n),n)}function i(t,e){if(isNaN(t))return e?y:g;if(e){if(t<0)return y;if(t>=d)return k}else{if(t<=-f)return I;if(t+1>=f)return v}return t<0?i(-t,e).neg():u(t%p|0,t/p|0,e)}function u(t,e,r){return new n(t,e,r)}n.fromInt=a,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(t.substring(1),e,n).neg();for(var s=i(l(n,8)),o=g,a=0;a<t.length;a+=8){var u=Math.min(8,t.length-a),h=parseInt(t.substring(a,a+u),n);if(u<8){var p=i(l(n,u));o=o.mul(p).add(i(h))}else o=(o=o.mul(s)).add(i(h))}return o.unsigned=e,o}function h(t,e){return"number"==typeof t?i(t,e):"string"==typeof t?c(t,e):u(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=a(1<<24),g=a(0);n.ZERO=g;var y=a(0,!0);n.UZERO=y;var b=a(1);n.ONE=b;var x=a(1,!0);n.UONE=x;var w=a(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var e=i(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=i(l(t,6),this.unsigned),o=this,a="";;){var u=o.div(s),c=(o.sub(u.mul(s)).toInt()>>>0).toString(t);if((o=u).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(t){return r(t)||(t=h(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},S.eq=S.equals,S.notEquals=function(t){return!this.eq(t)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(t){return this.comp(t)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(t){return this.comp(t)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(t){return this.comp(t)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(t){return this.comp(t)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(t){if(r(t)||(t=h(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(t){r(t)||(t=h(t));var e=this.high>>>16,n=65535&this.high,s=this.low>>>16,o=65535&this.low,a=t.high>>>16,i=65535&t.high,l=t.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=o+(65535&t.low))>>>16,p+=(d+=s+l)>>>16,c+=(p+=n+i)>>>16,c+=e+a,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(t){return r(t)||(t=h(t)),this.add(t.neg())},S.sub=S.subtract,S.multiply=function(t){if(this.isZero())return g;if(r(t)||(t=h(t)),e)return u(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(I))return t.isOdd()?I:g;if(t.eq(I))return this.isOdd()?I:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return i(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,o=this.low>>>16,a=65535&this.low,l=t.high>>>16,c=65535&t.high,p=t.low>>>16,d=65535&t.low,f=0,y=0,b=0,x=0;return b+=(x+=a*d)>>>16,y+=(b+=o*d)>>>16,b&=65535,y+=(b+=a*p)>>>16,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=o*p)>>>16,y&=65535,f+=(y+=a*c)>>>16,f+=n*d+s*p+o*c+a*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(t){if(r(t)||(t=h(t)),t.isZero())throw Error("division by zero");var n,s,o;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?u((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return y;if(t.gt(this.shru(1)))return x;o=y}else{if(this.eq(I))return t.eq(b)||t.eq(w)?I:t.eq(I)?b:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?b:w:(s=this.sub(t.mul(n)),o=n.add(s.div(t)));if(t.eq(I))return this.unsigned?y:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();o=g}for(s=this;s.gte(t);){n=Math.max(1,Math.floor(s.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:l(2,a-48),p=i(n),d=p.mul(t);d.isNegative()||d.gt(s);)d=(p=i(n-=c,this.unsigned)).mul(t);p.isZero()&&(p=b),o=o.add(p),s=s.sub(d)}return o},S.div=S.divide,S.modulo=function(t){return r(t)||(t=h(t)),e?u((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(t){return r(t)||(t=h(t)),u(this.low&t.low,this.high&t.high,this.unsigned)},S.or=function(t){return r(t)||(t=h(t)),u(this.low|t.low,this.high|t.high,this.unsigned)},S.xor=function(t){return r(t)||(t=h(t)),u(this.low^t.low,this.high^t.high,this.unsigned)},S.shiftLeft=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?u(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):u(0,this.low<<t-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?u(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):u(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(t){if(r(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return t<32?u(this.low>>>t|e<<32-t,e>>>t,this.unsigned):u(32===t?e:e>>>t-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},S.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,r){return r?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},6377:function(t,e,n){var r=n(4832),s=n(8652),o=n(801),a=n(2030),i=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=s,l.xorwow=o,l.xorshift7=a,l.xor4096=i,l.tychei=u,t.exports=l},4832:function(t,e,n){var r;!function(t,s,o){function a(t){var e,n=this,r=(e=4022871197,function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.alea=u}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var r;!function(t,s,o){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.tychei=u}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var r;!function(t,s,o){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor128=u}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,s,o){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,o=e.i;return e.w=r=r+1640531527|0,n=s[o+34&127],t=s[o=o+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[o]=n^t,e.i=o,n+(r^r>>>16)|0},function(t,e){var n,r,s,o,a,i=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,o=-32;o<u;++o)e&&(r^=e.charCodeAt((o+32)%e.length)),0===o&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(a=a+1640531527|0,s=0==(n=i[127&o]^=r+a)?s+1:0);for(s>=128&&(i[127&(e&&e.length||0)]=-1),s=127,o=512;o>0;--o)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;t.w=a,t.X=i,t.i=s}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xor4096=u}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var r;!function(t,s,o){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorshift7=u}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,o){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,s))||(s.exports=r):this.xorwow=u}(0,t=n.nmd(t),n.amdD)},1971:function(t,e,n){var r;!function(s,o,a){var i,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,p=255;function d(t,e,n){var r=[],p=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(o)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(u):(t=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=s.navigator,n=e&&e.plugins;return[+new Date,s,n,s.screen,b(o)]}}():t,3),r),d=new f(r),x=function(){for(var t=d.g(6),e=l,n=0;t<c;)t=(t+n)*u,e*=u,n=d.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),o),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,d),t.state=function(){return m(d,{})}),n?(a.random=t,e):t})(x,p,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,r=this,s=0,o=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<u;)a[s]=s++;for(s=0;s<u;s++)a[s]=a[o=p&o+t[s%n]+(e=a[s])],a[o]=e;(r.g=function(t){for(var e,n=0,s=r.i,o=r.j,a=r.S;t--;)e=a[s=p&s+1],n=n*u+a[p&(a[s]=a[o=p&o+e])+(a[o]=e)];return r.i=s,r.j=o,n})(u)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function y(t,e){for(var n,r=t+"",s=0;s<r.length;)e[p&s]=p&(n^=19*e[p&s])+r.charCodeAt(s++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(y(a.random(),o),t.exports){t.exports=d;try{i=n(5042)}catch(t){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}("undefined"!=typeof self?self:this,[],Math)},4412:function(t,e,n){"use strict";n.r(e);var r=n(3379),s=n.n(r),o=n(8485);s()(o.Z,{insert:"head",singleton:!1}),e.default=o.Z.locals||{}},3379:function(t,e,n){"use strict";var r,s=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),o=[];function a(t){for(var e=-1,n=0;n<o.length;n++)if(o[n].identifier===t){e=n;break}return e}function i(t,e){for(var n={},r=[],s=0;s<t.length;s++){var i=t[s],u=e.base?i[0]+e.base:i[0],l=n[u]||0,c="".concat(u," ").concat(l);n[u]=l+1;var h=a(c),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==h?(o[h].references++,o[h].updater(p)):o.push({identifier:c,updater:m(p,e),references:1}),r.push(c)}return r}function u(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=s(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var l,c=(l=[],function(t,e){return l[t]=e,l.filter(Boolean).join("\n")});function h(t,e,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=c(e,s);else{var o=document.createTextNode(s),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}function p(t,e,n){var r=n.css,s=n.media,o=n.sourceMap;if(s?t.setAttribute("media",s):t.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var d=null,f=0;function m(t,e){var n,r,s;if(e.singleton){var o=f++;n=d||(d=u(e)),r=h.bind(null,n,o,!1),s=h.bind(null,n,o,!0)}else n=u(e),r=p.bind(null,n,e),s=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else s()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=i(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var s=a(n[r]);o[s].references--}for(var u=i(t,e),l=0;l<n.length;l++){var c=a(n[l]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}n=u}}}},9855:function(t){"use strict";var e=window.URL||window.webkitURL;t.exports=function(t,n){try{try{var r;try{(r=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(t),r=r.getBlob()}catch(e){r=new Blob([t])}return new Worker(e.createObjectURL(r))}catch(e){return new Worker("data:application/javascript,"+encodeURIComponent(t))}}catch(t){if(!n)throw Error("Inline worker is not supported");return new Worker(n)}}},5410:function(){},8628:function(){},1601:function(){},7792:function(){},4977:function(){},5042:function(){},9330:function(t,e,n){t.exports=function(){return n(9855)('!function(){var t={690:function(t,e,r){const{resize:a}=r(994);t.exports={buildImageList:t=>{const e=[];let r=100/Math.min(t.width,t.height);for(;;)if(e.push(r),r*=Math.pow(2,1/3),r>=.95){r=1;break}e.push(r),e.reverse();const i=[];for(let r=0;r<e.length;r++)t.width,e[r],t.height,e[r],i.push(Object.assign(a({image:t,ratio:e[r]}),{scale:e[r]}));return i},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),r=[],i=[];r.push(256/e),r.push(128/e);for(let e=0;e<r.length;e++)i.push(Object.assign(a({image:t,ratio:r[e]}),{scale:r[e]}));return i}}},918:function(t,e,r){const{Cumsum:a}=r(518),i=({image:t,cx:e,cy:r,sdThresh:a,imageDataCumsum:i,imageDataSqrCumsum:s})=>{if(e-6<0||e+6>=t.width)return null;if(r-6<0||r+6>=t.height)return null;let o=i.query(e-6,r-6,e+6,r+6);o/=169;let h=s.query(e-6,r-6,e+6,r+6);return h-=2*o*i.query(e-6,r-6,e+6,r+6),h+=169*o*o,h/169<a*a?null:(h=Math.sqrt(h),h)},s=t=>{const{image:e,cx:r,cy:a,vlen:i,tx:s,ty:o,imageDataCumsum:h,imageDataSqrCumsum:l}=t,{data:n,width:u,height:m}=e;if(r-6<0||r+6>=u)return null;if(a-6<0||a+6>=m)return null;let c=h.query(r-6,a-6,r+6,a+6),f=l.query(r-6,a-6,r+6,a+6),g=0,d=(a-6)*u+(r-6),p=(o-6)*u+(s-6),w=u-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=n[d]*n[p],d+=1,p+=1;d+=w,p+=w}let M=h.query(s-6,o-6,s+6,o+6);M/=169,g-=M*c;let y=f-c*c/169;return 0==y?null:(y=Math.sqrt(y),1*g/(i*y))};t.exports={extract:t=>{const{data:e,width:r,height:o,scale:h}=t,l=[r*o];for(let t=0;t<l.length;t++)l[t]=!1;const n=new Float32Array(e.length);for(let t=0;t<r;t++)n[t]=-1,n[r*(o-1)+t]=-1;for(let t=0;t<o;t++)n[t*r]=-1,n[t*r+r-1]=-1;for(let t=1;t<r-1;t++)for(let a=1;a<o-1;a++){let i=t+r*a,s=0,o=0;for(let t=-1;t<=1;t++)s+=e[i+r*t+1]-e[i+r*t-1],o+=e[i+r+t]-e[i-r+t];s/=768,o/=768,n[i]=Math.sqrt((s*s+o*o)/2)}const u=new Uint32Array(1e3);for(let t=0;t<1e3;t++)u[t]=0;const m=[-1,1,-r,r];let c=0;for(let t=1;t<r-1;t++)for(let e=1;e<o-1;e++){let a=t+r*e,i=!0;for(let t=0;t<m.length;t++)if(n[a]<=n[a+m[t]]){i=!1;break}if(i){let t=Math.floor(1e3*n[a]);t>999&&(t=999),t<0&&(t=0),u[t]+=1,c+=1,l[a]=!0}}const f=.02*r*o;let g=999,d=0;for(;g>=0&&(d+=u[g],!(d>f));)g--;for(let t=0;t<l.length;t++)l[t]&&1e3*n[t]<g&&(l[t]=!1);const p=[];for(let t=0;t<e.length;t++)p[t]=e[t]*e[t];const w=new a(e,r,o),M=new a(p,r,o),y=new Float32Array(e.length);for(let e=0;e<r;e++)for(let a=0;a<o;a++){const o=a*r+e;if(!l[o]){y[o]=1;continue}const h=i({image:t,cx:e,cy:a,sdThresh:5,imageDataCumsum:w,imageDataSqrCumsum:M});if(null===h){y[o]=1;continue}let n=-1;for(let r=-10;r<=10;r++){for(let i=-10;i<=10;i++){if(i*i+r*r<=4)continue;const o=s({image:t,cx:e+i,cy:a+r,vlen:h,tx:e,ty:a,imageDataCumsum:w,imageDataSqrCumsum:M});if(null!==o&&o>n&&(n=o,n>.95))break}if(n>.95)break}y[o]=n}return(t=>{let{image:e,featureMap:r,templateSize:a,searchSize:o,occSize:h,maxSimThresh:l,minSimThresh:n,sdThresh:u,imageDataCumsum:m,imageDataSqrCumsum:c}=t;const{data:f,width:g,height:d,scale:p}=e;h=Math.floor(Math.min(e.width,e.height)/10);const w=3*(2*a+1),M=Math.floor(g/w),y=Math.floor(d/w);let x=Math.floor(g/h)*Math.floor(d/h)+M*y;const q=[],C=new Float32Array(f.length);for(let t=0;t<C.length;t++)C[t]=r[t];let S=0;for(;S<x;){let t=l,r=-1,f=-1;for(let e=0;e<d;e++)for(let a=0;a<g;a++)C[e*g+a]<t&&(t=C[e*g+a],r=a,f=e);if(-1===r)break;const p=i({image:e,cx:r,cy:f,sdThresh:0,imageDataCumsum:m,imageDataSqrCumsum:c});if(null===p){C[f*g+r]=1;continue}if(p/(2*a+1)<u){C[f*g+r]=1;continue}let w=1,M=-1;for(let a=-o;a<=o;a++){for(let i=-o;i<=o;i++){if(i*i+a*a>o*o)continue;if(0===i&&0===a)continue;const h=s({image:e,vlen:p,cx:r+i,cy:f+a,tx:r,ty:f,imageDataCumsum:m,imageDataSqrCumsum:c});if(null!==h){if(h<w&&(w=h,w<n&&w<t))break;if(h>M&&(M=h,M>.99))break}}if(w<n&&w<t||M>.99)break}if(w<n&&w<t||M>.99)C[f*g+r]=1;else{q.push({x:r,y:f}),S+=1;for(let t=-h;t<=h;t++)for(let e=-h;e<=h;e++)f+t<0||f+t>=d||r+e<0||r+e>=g||(C[(f+t)*g+(r+e)]=1)}}return q})({image:t,featureMap:y,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:w,imageDataSqrCumsum:M})}}},518:function(t){t.exports={Cumsum:class{constructor(t,e,r){this.cumsum=[];for(let t=0;t<r;t++){this.cumsum.push([]);for(let r=0;r<e;r++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let r=1;r<e;r++)this.cumsum[0][r]=this.cumsum[0][r-1]+t[r];for(let a=1;a<r;a++)this.cumsum[a][0]=this.cumsum[a-1][0]+t[a*e];for(let a=1;a<r;a++)for(let r=1;r<e;r++)this.cumsum[a][r]=t[a*e+r]+this.cumsum[a-1][r]+this.cumsum[a][r-1]-this.cumsum[a-1][r-1]}query(t,e,r,a){let i=this.cumsum[a][r];return e>0&&(i-=this.cumsum[e-1][r]),t>0&&(i-=this.cumsum[a][t-1]),t>0&&e>0&&(i+=this.cumsum[e-1][t-1]),i}}}},994:function(t){t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:r,height:a}=t,i=Math.floor(r/2),s=Math.floor(a/2),o=new Float32Array(i*s),h=[0,1,r,r+1];for(let t=0;t<s;t++)for(let a=0;a<i;a++){let s=2*t*r+2*a,l=0;for(let t=0;t<h.length;t++)l+=e[s+h[t]];l*=.25,o[t*i+a]=l}return{data:o,width:i,height:s}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:r})=>{const{width:a,height:i,data:s}=t,o=2*t.width+(e?1:0),h=2*t.height+(r?1:0),l=new Float32Array(o*h);for(let t=0;t<o;t++){const e=.5*t-.25;let r=Math.floor(e),n=Math.ceil(e);r<0&&(r=0),n>=a&&(n=a-1);for(let u=0;u<h;u++){const h=.5*u-.25;let m=Math.floor(h),c=Math.ceil(h);m<0&&(m=0),c>=i&&(c=i-1);const f=(n-e)*(c-h)*s[m*a+r]+(n-e)*(h-m)*s[c*a+r]+(e-r)*(c-h)*s[m*a+n]+(e-r)*(h-m)*s[c*a+n];l[u*o+t]=f}}return{data:l,width:o,height:h}},resize:({image:t,ratio:e})=>{const r=Math.round(t.width*e),a=Math.round(t.height*e),i=new Uint8Array(r*a);for(let s=0;s<r;s++){let o=Math.round(1*s/e),h=Math.round(1*(s+1)/e)-1;h>=t.width&&(h=t.width-1);for(let l=0;l<a;l++){let a=Math.round(1*l/e),n=Math.round(1*(l+1)/e)-1;n>=t.height&&(n=t.height-1);let u=0,m=0;for(let e=o;e<=h;e++)for(let r=a;r<=n;r++)u+=1*t.data[r*t.width+e],m+=1;i[l*r+s]=Math.floor(u/m)}}return{data:i,width:r,height:a}}}}},e={};function r(a){var i=e[a];if(void 0!==i)return i.exports;var s=e[a]={exports:{}};return t[a](s,s.exports,r),s.exports}!function(){const{extract:t}=r(918),{buildTrackingImageList:e}=r(690);onmessage=t=>{const{data:r}=t;if("compile"===r.type){const{targetImages:t}=r,i=50/t.length;let s=0;const o=[];for(let r=0;r<t.length;r++){const h=t[r],l=e(h),n=i/l.length,u=a(l,(t=>{s+=n,postMessage({type:"progress",percent:s})}));o.push(u)}postMessage({type:"compileDone",list:o})}};const a=(e,r)=>{const a=[];for(let i=0;i<e.length;i++){const s=e[i],o=t(s),h={data:s.data,scale:s.scale,width:s.width,height:s.height,points:o};a.push(h),r(i)}return a}}()}();',n.p+"compiler.worker.prod.js")}},531:function(t,e,n){t.exports=function(){return n(9855)('!function(){var t={23:function(t,e,r){"use strict";r.r(e),r.d(e,{AbstractMatrix:function(){return E},CHO:function(){return Z},CholeskyDecomposition:function(){return Z},EVD:function(){return J},EigenvalueDecomposition:function(){return J},LU:function(){return D},LuDecomposition:function(){return D},Matrix:function(){return S},MatrixColumnSelectionView:function(){return R},MatrixColumnView:function(){return I},MatrixFlipColumnView:function(){return T},MatrixFlipRowView:function(){return q},MatrixRowSelectionView:function(){return P},MatrixRowView:function(){return C},MatrixSelectionView:function(){return N},MatrixSubView:function(){return V},MatrixTransposeView:function(){return A},NIPALS:function(){return tt},Nipals:function(){return tt},QR:function(){return H},QrDecomposition:function(){return H},SVD:function(){return $},SingularValueDecomposition:function(){return $},WrapperMatrix1D:function(){return j},WrapperMatrix2D:function(){return F},correlation:function(){return B},covariance:function(){return W},default:function(){return S},determinant:function(){return U},inverse:function(){return L},linearDependencies:function(){return G},pseudoInverse:function(){return Q},solve:function(){return O},wrap:function(){return z}});const o=Object.prototype.toString;function s(t){return o.call(t).endsWith("Array]")}function n(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!s(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=o||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[o],l=o+1;l<i;l++)t[l]>h&&(h=t[l]);return h}function i(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!s(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=o||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[o],l=o+1;l<i;l++)t[l]<h&&(h=t[l]);return h}function h(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!s(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!s(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var o=i(t),h=n(t);if(o===h)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var l=r.min,u=void 0===l?r.autoMinMax?o:0:l,a=r.max,c=void 0===a?r.autoMinMax?h:1:a;if(u>=c)throw new RangeError("min option must be smaller than max option");for(var f=(c-u)/(h-o),m=0;m<t.length;m++)e[m]=(t[m]-o)*f+u;return e}const l=" ".repeat(2),u=" ".repeat(4);function a(t,e={}){const{maxRows:r=15,maxColumns:o=10,maxNumSize:s=8}=e;return`${t.constructor.name} {\\n${l}[\\n${u}${function(t,e,r,o){const{rows:s,columns:n}=t,i=Math.min(s,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let s=0;s<h;s++)r.push(c(t.get(e,s),o));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==s&&l.push(`... ${s-e} more rows`),l.join(`\\n${u}`)}(t,r,o,s)}\\n${l}]\\n${l}rows: ${t.rows}\\n${l}columns: ${t.columns}\\n}`}function c(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const o=t.toPrecision(e-2);if(o.length<=e)return o;const s=t.toExponential(e-2),n=s.indexOf("e"),i=s.slice(n);return s.slice(0,e-i.length)+i}function f(t,e,r){let o=r?t.rows:t.rows-1;if(e<0||e>o)throw new RangeError("Row index out of range")}function m(t,e,r){let o=r?t.columns:t.columns-1;if(e<0||e>o)throw new RangeError("Column index out of range")}function g(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function w(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function p(t,e){if(!s(e))throw new TypeError("row indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.rows)throw new RangeError("row indices are out of range")}function d(t,e){if(!s(e))throw new TypeError("column indices must be an array");for(let r=0;r<e.length;r++)if(e[r]<0||e[r]>=t.columns)throw new RangeError("column indices are out of range")}function y(t,e,r,o,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(b("startRow",e),b("endRow",r),b("startColumn",o),b("endColumn",s),e>r||o>s||e<0||e>=t.rows||r<0||r>=t.rows||o<0||o>=t.columns||s<0||s>=t.columns)throw new RangeError("Submatrix indices are out of range")}function M(t,e=0){let r=[];for(let o=0;o<t;o++)r.push(e);return r}function b(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function x(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class E{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let o=new S(t,e);for(let s=0;s<t;s++)for(let t=0;t<e;t++)o.set(s,t,r[s*e+t]);return o}static rowVector(t){let e=new S(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new S(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new S(t,e)}static ones(t,e){return new S(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:o=Math.random}=r;let s=new S(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)s.set(r,t,o());return s}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:o=0,max:s=1e3,random:n=Math.random}=r;if(!Number.isInteger(o))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(o>=s)throw new RangeError("min must be smaller than max");let i=s-o,h=new S(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=o+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let o=Math.min(t,e),s=this.zeros(t,e);for(let t=0;t<o;t++)s.set(t,t,r);return s}static diag(t,e,r){let o=t.length;void 0===e&&(e=o),void 0===r&&(r=e);let s=Math.min(o,e,r),n=this.zeros(e,r);for(let e=0;e<s;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new S(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return s}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new this(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return s}static checkMatrix(t){return E.isMatrix(t)?t:new S(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);t++}return o}isReducedEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(o=!1);t++}return o}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let o=e;for(let s=e;s<t.rows;s++)t.get(s,r)>t.get(o,r)&&(o=s);if(0===t.get(o,r))r++;else{t.swapRows(e,o);let s=t.get(e,r);for(let o=r;o<t.columns;o++)t.set(e,o,t.get(e,o)/s);for(let o=e+1;o<t.rows;o++){let s=t.get(o,r)/t.get(e,r);t.set(o,r,0);for(let n=r+1;n<t.columns;n++)t.set(o,n,t.get(o,n)-t.get(e,n)*s)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,o=r-1;for(;o>=0;)if(0===t.maxRow(o))o--;else{let s=0,n=!1;for(;s<r&&!1===n;)1===t.get(o,s)?n=!0:s++;for(let r=0;r<o;r++){let n=t.get(r,s);for(let i=s;i<e;i++){let e=t.get(r,i)-n*t.get(o,i);t.set(r,i,e)}}o--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let o=new S(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)o.setSubMatrix(this,this.rows*t,this.columns*e);return o}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){f(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return S.rowVector(this.getRow(t))}setRow(t,e){f(this,t),e=g(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){f(this,t),f(this,e);for(let r=0;r<this.columns;r++){let o=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,o)}return this}getColumn(t){m(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return S.columnVector(this.getColumn(t))}setColumn(t,e){m(this,t),e=w(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){m(this,t),m(this,e);for(let r=0;r<this.rows;r++){let o=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,o)}return this}addRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){f(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){m(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}maxIndex(){x(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)>t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}min(t){if(this.isEmpty())return NaN;switch(t){case"row":{const t=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[e]&&(t[e]=this.get(e,r));return t}case"column":{const t=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t[r]&&(t[r]=this.get(e,r));return t}case void 0:{let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}default:throw new Error(`invalid option: ${t}`)}}minIndex(){x(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)<t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}maxRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){f(this,t),x(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)>e&&(e=this.get(t,o),r[1]=o);return r}minRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){f(this,t),x(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)<e&&(e=this.get(t,o),r[1]=o);return r}maxColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){m(this,t),x(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)>e&&(e=this.get(o,t),r[0]=o);return r}minColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){m(this,t),x(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)<e&&(e=this.get(o,t),r[0]=o);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){E.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let o=0;o<e.length;o++)r+=e[o]*t[o];return r}mmul(t){t=S.checkMatrix(t);let e=this.rows,r=this.columns,o=t.columns,s=new S(e,o),n=new Float64Array(r);for(let i=0;i<o;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let o=0;o<r;o++)e+=this.get(t,o)*n[o];s.set(t,i,e)}}return s}strassen2x2(t){t=S.checkMatrix(t);let e=new S(2,2);const r=this.get(0,0),o=t.get(0,0),s=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(o+u),c=(i+l)*o,f=r*(n-u),m=l*(h-o),g=(r+s)*u,w=a+m-g+(s-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(o+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=S.checkMatrix(t);let e=new S(3,3);const r=this.get(0,0),o=this.get(0,1),s=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),v=r*c,k=(-r+l+u)*(c-m+p),I=(-r+l)*(m-p),R=(l+u)*(-c+m),T=(-s+u+a)*(w+d-y),q=(s-a)*(w-y),C=s*d,P=(u+a)*(-d+y),N=(-s+i+h)*(p+d-M),V=(s-h)*(p-M),A=(i+h)*(-d+M),j=v+C+o*g,F=(r+o+s-n-i-u-a)*w+x+E+v+T+C+P,z=v+k+R+(r+o+s-i-h-l-u)*p+C+N+A,D=b+i*(-c+f+g-w-p-d+M)+x+v+C+N+V,_=b+x+E+v+h*y,H=C+N+V+A+n*m,$=v+k+I+u*(-c+m+g-w-p-d+y)+T+q+C,L=T+q+C+P+l*f,O=v+k+I+R+a*M;return e.set(0,0,j),e.set(0,1,F),e.set(0,2,z),e.set(1,0,D),e.set(1,1,_),e.set(1,2,H),e.set(2,0,$),e.set(2,1,L),e.set(2,2,O),e}mmulStrassen(t){t=S.checkMatrix(t);let e=this.clone(),r=e.rows,o=e.columns,s=t.rows,n=t.columns;function i(t,e,r){let o=t.rows,s=t.columns;if(o===e&&s===r)return t;{let o=E.zeros(e,r);return o=o.setSubMatrix(t,0,0),o}}o!==s&&console.warn(`Multiplying ${r} x ${o} and ${s} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,s),l=Math.max(o,n);return e=i(e,h,l),function t(e,r,o,s){if(o<=512||s<=512)return e.mmul(r);o%2==1&&s%2==1?(e=i(e,o+1,s+1),r=i(r,o+1,s+1)):o%2==1?(e=i(e,o+1,s),r=i(r,o+1,s)):s%2==1&&(e=i(e,o,s+1),r=i(r,o,s+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(E.add(l,g),E.add(u,w),n,h),d=t(E.add(f,g),u,n,h),y=t(l,E.sub(c,w),n,h),M=t(g,E.sub(m,u),n,h),b=t(E.add(l,a),w,n,h),x=t(E.sub(f,l),E.add(u,c),n,h),v=t(E.sub(a,g),E.add(m,w),n,h),S=E.add(p,M);S.sub(b),S.add(v);let k=E.add(y,b),I=E.add(d,M),R=E.sub(p,d);R.add(y),R.add(x);let T=E.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(k,S.rows,0),T=T.setSubMatrix(I,0,S.columns),T=T.setSubMatrix(R,S.rows,S.columns),T.subMatrix(0,o-1,0,s-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new S(this.rows,this.columns);for(let t=0;t<this.rows;t++){const s=this.getRow(t);s.length>0&&h(s,{min:e,max:r,output:s}),o.setRow(t,s)}return o}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new S(this.rows,this.columns);for(let t=0;t<this.columns;t++){const s=this.getColumn(t);s.length&&h(s,{min:e,max:r,output:s}),o.setColumn(t,s)}return o}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),o=this.get(e,this.columns-1-r);this.set(e,r,o),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),o=this.get(this.rows-1-r,e);this.set(r,e,o),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=S.checkMatrix(t);let e=this.rows,r=this.columns,o=t.rows,s=t.columns,n=new S(e*o,r*s);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<o;r++)for(let h=0;h<s;h++)n.set(o*i+r,s*e+h,this.get(i,e)*t.get(r,h));return n}kroneckerSum(t){if(t=S.checkMatrix(t),!this.isSquare()||!t.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let e=this.rows,r=t.rows,o=this.kroneckerProduct(S.eye(r,r)),s=S.eye(e,e).kroneckerProduct(t);return o.add(s)}transpose(){let t=new S(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=v){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=v){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,o){y(this,t,e,r,o);let s=new S(e-t+1,o-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=o;e++)s.set(n-t,e-r,this.get(n,e));return s}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let o=new S(t.length,r-e+1);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.rows)throw new RangeError(`Row index out of range: ${t[s]}`);o.set(s,n-e,this.get(t[s],n))}return o}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let o=new S(r-e+1,t.length);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.columns)throw new RangeError(`Column index out of range: ${t[s]}`);o.set(n-e,s,this.get(n,t[s]))}return o}setSubMatrix(t,e,r){if((t=S.checkMatrix(t)).isEmpty())return this;y(this,e,e+t.rows-1,r,r+t.columns-1);for(let o=0;o<t.rows;o++)for(let s=0;s<t.columns;s++)this.set(e+o,r+s,t.get(o,s));return this}selection(t,e){p(this,t),d(this,e);let r=new S(t.length,e.length);for(let o=0;o<t.length;o++){let s=t[o];for(let t=0;t<e.length;t++){let n=e[t];r.set(o,t,this.get(s,n))}}return r}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new S(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=M(t.rows);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]+=t.get(r,o);return e}(this);case"column":return function(t){let e=M(t.columns);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]+=t.get(r,o);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e+=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=M(t.rows,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]*=t.get(r,o);return e}(this);case"column":return function(t){let e=M(t.columns,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]*=t.get(r,o);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e*=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:o=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!s(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(i,e)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,o);case"column":if(!s(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(e,i)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,o);case void 0:if("number"!=typeof o)throw new TypeError("mean must be a number");return function(t,e,r){const o=t.rows,s=t.columns,n=o*s;let i=0,h=0,l=0;for(let e=0;e<o;e++)for(let o=0;o<s;o++)l=t.get(e,o)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,o);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!s(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[r])}(this,r),this;case"column":if(!s(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[o])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let o=0;for(let e=0;e<t.columns;e++)o+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(o))}return e}(this);else if(!s(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let o=0;for(let e=0;e<t.rows;e++)o+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(o))}return e}(this);else if(!s(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[o])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let o=0;o<t.columns;o++)for(let s=0;s<t.rows;s++)r+=Math.pow(t.get(s,o),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return a(this,t)}}function v(t,e){return t-e}E.prototype.klass="Matrix","undefined"!=typeof Symbol&&(E.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return a(this)}),E.random=E.rand,E.randomInt=E.randInt,E.diagonal=E.diag,E.prototype.diagonal=E.prototype.diag,E.identity=E.eye,E.prototype.negate=E.prototype.neg,E.prototype.tensorProduct=E.prototype.kroneckerProduct;class S extends E{constructor(t,e){if(super(),S.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!s(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let o=0;o<t;o++){if(r[o].length!==e)throw new RangeError("Inconsistent array dimensions");if(!r[o].every((t=>"number"==typeof t)))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(r[o]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return f(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),f(this,t,!0),e=Float64Array.from(g(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){m(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let o=0;o<t;o++)r[o]=this.data[e][o];for(let o=t+1;o<this.columns;o++)r[o-1]=this.data[e][o];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),m(this,t,!0),e=w(this,e);for(let r=0;r<this.rows;r++){const o=new Float64Array(this.columns+1);let s=0;for(;s<t;s++)o[s]=this.data[r][s];for(o[s++]=e[r];s<this.columns+1;s++)o[s]=this.data[r][s-1];this.data[r]=o}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(E,S);class k extends E{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class I extends k{constructor(t,e){m(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}}class R extends k{constructor(t,e){d(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}}class T extends k{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}}class q extends k{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}}class C extends k{constructor(t,e){f(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}}class P extends k{constructor(t,e){p(t,e),super(t,e.length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}}class N extends k{constructor(t,e,r){p(t,e),d(t,r),super(t,e.length,r.length),this.rowIndices=e,this.columnIndices=r}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class V extends k{constructor(t,e,r,o,s){y(t,e,r,o,s),super(t,r-e+1,s-o+1),this.startRow=e,this.startColumn=o}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}}class A extends k{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}}class j extends E{constructor(t,e={}){const{rows:r=1}=e;if(t.length%r!=0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let o=this._calculateIndex(t,e);return this.data[o]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class F extends E{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}function z(t,e){if(s(t))return t[0]&&s(t[0])?new F(t):new j(t,e);throw new Error("the argument is not an array")}class D{constructor(t){let e,r,o,s,n,i,h,l,u,a=(t=F.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,o=0;o<u;o++)n+=a.get(e,o)*l[o];l[e]-=n,a.set(e,r,l[e])}for(s=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[s])&&(s=e);if(s!==r){for(o=0;o<f;o++)i=a.get(s,o),a.set(s,o,a.get(r,o)),a.set(r,o,i);h=m[s],m[s]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=S.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,o,s,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(s=0;s<h;s++)for(r=s+1;r<h;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s));for(s=h-1;s>=0;s--){for(o=0;o<n;o++)i.set(s,o,i.get(s,o)/e.get(s,s));for(r=0;r<s;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let o=0;o<r;o++)e*=t.get(o,o);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new S(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s>e?o.set(s,e,t.get(s,e)):s===e?o.set(s,e,1):o.set(s,e,0);return o}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new S(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s<=e?o.set(s,e,t.get(s,e)):o.set(s,e,0);return o}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function _(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class H{constructor(t){let e,r,o,s,n=(t=F.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(o=0;o<h;o++){let t=0;for(e=o;e<i;e++)t=_(t,n.get(e,o));if(0!==t){for(n.get(o,o)<0&&(t=-t),e=o;e<i;e++)n.set(e,o,n.get(e,o)/t);for(n.set(o,o,n.get(o,o)+1),r=o+1;r<h;r++){for(s=0,e=o;e<i;e++)s+=n.get(e,o)*n.get(e,r);for(s=-s/n.get(o,o),e=o;e<i;e++)n.set(e,r,n.get(e,r)+s*n.get(e,o))}}l[o]=-t}this.QR=n,this.Rdiag=l}solve(t){t=S.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let o,s,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(s=0;s<h;s++){for(i=0,o=n;o<r;o++)i+=e.get(o,n)*l.get(o,s);for(i=-i/e.get(n,n),o=n;o<r;o++)l.set(o,s,l.get(o,s)+i*e.get(o,n))}for(n=u-1;n>=0;n--){for(s=0;s<h;s++)l.set(n,s,l.get(n,s)/this.Rdiag[n]);for(o=0;o<n;o++)for(s=0;s<h;s++)l.set(o,s,l.get(o,s)-l.get(n,s)*e.get(o,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,o=r.columns,s=new S(o,o);for(t=0;t<o;t++)for(e=0;e<o;e++)t<e?s.set(t,e,r.get(t,e)):t===e?s.set(t,e,this.Rdiag[t]):s.set(t,e,0);return s}get orthogonalMatrix(){let t,e,r,o,s=this.QR,n=s.rows,i=s.columns,h=new S(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==s.get(r,r)){for(o=0,t=r;t<n;t++)o+=s.get(t,r)*h.get(t,e);for(o=-o/s.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+o*s.get(t,r))}}return h}}class ${constructor(t,e={}){if((t=F.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,o=t.columns;const{computeLeftSingularVectors:s=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(s),u=Boolean(n),a=!1;if(r<o)if(i){h=t.transpose(),r=h.rows,o=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,o),f=Math.min(r+1,o),m=new Float64Array(f),g=new S(r,c),w=new S(o,o),p=new Float64Array(o),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,o),b=Math.max(0,Math.min(o-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=_(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<o;e++){if(t<M&&0!==m[t]){let o=0;for(let s=t;s<r;s++)o+=h.get(s,t)*h.get(s,e);o=-o/h.get(t,t);for(let s=t;s<r;s++)h.set(s,e,h.get(s,e)+o*h.get(s,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<o;e++)p[t]=_(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<o;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<o;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<o;e++){let o=-p[e]/p[t+1];for(let s=t+1;s<r;s++)h.set(s,e,h.get(s,e)+o*d[s])}}if(u)for(let e=t+1;e<o;e++)w.set(e,t,p[e])}}let E=Math.min(o,r+1);if(M<o&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let o=0;for(let s=t;s<r;s++)o+=g.get(s,t)*g.get(s,e);o=-o/g.get(t,t);for(let s=t;s<r;s++)g.set(s,e,g.get(s,e)+o*g.get(s,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=o-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<o;e++){let r=0;for(let s=t+1;s<o;s++)r+=w.get(s,t)*w.get(s,e);r=-r/w.get(t+1,t);for(let s=t+1;s<o;s++)w.set(s,e,w.get(s,e)+r*w.get(s,t))}for(let e=0;e<o;e++)w.set(e,t,0);w.set(t,t,1)}let v=E-1,k=0,I=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+I*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=I*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let s=_(m[r],e),n=m[r]/s,i=e/s;if(m[r]=s,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<o;t++)s=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,s)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let o=t;o<E;o++){let s=_(m[o],e),n=m[o]/s,i=e/s;if(m[o]=s,e=-i*p[o],p[o]=n*p[o],l)for(let e=0;e<r;e++)s=n*g.get(e,o)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,o)+n*g.get(e,t-1)),g.set(e,o,s)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),s=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+s)*(n-s)+i*i)/2,f=s*i*(s*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+s)*(h-s)+d,M=h*a;for(let e=t;e<E-1;e++){let s=_(y,M);0===s&&(s=Number.MIN_VALUE);let n=y/s,i=M/s;if(e!==t&&(p[e-1]=s),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<o;t++)s=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,s);if(s=_(y,M),0===s&&(s=Number.MIN_VALUE),n=y/s,i=M/s,m[e]=s,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)s=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,s)}p[E-2]=y,k+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=v;e++)w.set(e,t,-w.get(e,t));for(;t<v&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<o-1)for(let r=0;r<o;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let o=0;o<r;o++)e=g.get(o,t+1),g.set(o,t+1,g.get(o,t)),g.set(o,t,e);t++}k=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=o,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,o=this.s.length,s=S.zeros(o,o);for(let t=0;t<o;t++)Math.abs(this.s[t])<=r?s.set(t,t,0):s.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(s),l=i.rows,u=n.rows,a=S.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let s=0;s<o;s++)r+=h.get(t,s)*n.get(e,s);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(S.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,o=t.columns,s=new S(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<o;r++)Math.abs(this.s[r])>e&&s.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new S(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let o=0;o<h;o++)r+=s.get(t,o)*n.get(e,o);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let o=0,s=r.length;o<s;o++)r[o]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return S.diag(this.s)}}function L(t,e=!1){return t=F.checkMatrix(t),e?new $(t).inverse():O(t,S.eye(t.rows))}function O(t,e,r=!1){return t=F.checkMatrix(t),e=F.checkMatrix(e),r?new $(t).solve(e):t.isSquare()?new D(t).solve(e):new H(t).solve(e)}function U(t){if((t=S.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let e,r,o,s;if(2===t.columns)return e=t.get(0,0),r=t.get(0,1),o=t.get(1,0),s=t.get(1,1),e*s-r*o;if(3===t.columns){let s,n,i;return s=new N(t,[1,2],[1,2]),n=new N(t,[1,2],[0,2]),i=new N(t,[1,2],[0,1]),e=t.get(0,0),r=t.get(0,1),o=t.get(0,2),e*U(s)-r*U(n)+o*U(i)}return new D(t).determinant}throw Error("determinant can only be calculated for a square matrix")}function X(t,e){let r=[];for(let o=0;o<t;o++)o!==e&&r.push(o);return r}function Y(t,e,r,o=1e-9,s=1e-9){if(t>s)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<o&&t.set(e,0,0);return t.to1DArray()}}function G(t,e={}){const{thresholdValue:r=1e-9,thresholdError:o=1e-9}=e;let s=(t=S.checkMatrix(t)).rows,n=new S(s,s);for(let e=0;e<s;e++){let i=S.columnVector(t.getRow(e)),h=t.subMatrixRow(X(s,e)).transpose(),l=new $(h).solve(i),u=S.sub(i,h.mmul(l)).abs().max();n.setRow(e,Y(u,l,e,r,o))}return n}function Q(t,e=Number.EPSILON){if((t=S.checkMatrix(t)).isEmpty())return t.transpose();let r=new $(t,{autoTranspose:!0}),o=r.leftSingularVectors,s=r.rightSingularVectors,n=r.diagonal;for(let t=0;t<n.length;t++)Math.abs(n[t])>e?n[t]=1/n[t]:n[t]=0;return s.mmul(S.diag(n).mmul(o.transpose()))}function W(t,e=t,r={}){t=new S(t);let o=!1;if("object"!=typeof e||S.isMatrix(e)||s(e)?e=new S(e):(r=e,e=t,o=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:n=!0}=r;n&&(t=t.center("column"),o||(e=e.center("column")));const i=t.transpose().mmul(e);for(let e=0;e<i.rows;e++)for(let r=0;r<i.columns;r++)i.set(e,r,i.get(e,r)*(1/(t.rows-1)));return i}function B(t,e=t,r={}){t=new S(t);let o=!1;if("object"!=typeof e||S.isMatrix(e)||s(e)?e=new S(e):(r=e,e=t,o=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:n=!0,scale:i=!0}=r;n&&(t.center("column"),o||e.center("column")),i&&(t.scale("column"),o||e.scale("column"));const h=t.standardDeviation("column",{unbiased:!0}),l=o?h:e.standardDeviation("column",{unbiased:!0}),u=t.transpose().mmul(e);for(let e=0;e<u.rows;e++)for(let r=0;r<u.columns;r++)u.set(e,r,u.get(e,r)*(1/(h[e]*l[r]))*(1/(t.rows-1)));return u}class J{constructor(t,e={}){const{assumeSymmetric:r=!1}=e;if(!(t=F.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let o,s,n=t.columns,i=new S(n,n),h=new Float64Array(n),l=new Float64Array(n),u=t,a=!1;if(a=!!r||t.isSymmetric(),a){for(o=0;o<n;o++)for(s=0;s<n;s++)i.set(o,s,u.get(o,s));!function(t,e,r,o){let s,n,i,h,l,u,a,c;for(l=0;l<t;l++)r[l]=o.get(t-1,l);for(h=t-1;h>0;h--){for(c=0,i=0,u=0;u<h;u++)c+=Math.abs(r[u]);if(0===c)for(e[h]=r[h-1],l=0;l<h;l++)r[l]=o.get(h-1,l),o.set(h,l,0),o.set(l,h,0);else{for(u=0;u<h;u++)r[u]/=c,i+=r[u]*r[u];for(s=r[h-1],n=Math.sqrt(i),s>0&&(n=-n),e[h]=c*n,i-=s*n,r[h-1]=s-n,l=0;l<h;l++)e[l]=0;for(l=0;l<h;l++){for(s=r[l],o.set(l,h,s),n=e[l]+o.get(l,l)*s,u=l+1;u<=h-1;u++)n+=o.get(u,l)*r[u],e[u]+=o.get(u,l)*s;e[l]=n}for(s=0,l=0;l<h;l++)e[l]/=i,s+=e[l]*r[l];for(a=s/(i+i),l=0;l<h;l++)e[l]-=a*r[l];for(l=0;l<h;l++){for(s=r[l],n=e[l],u=l;u<=h-1;u++)o.set(u,l,o.get(u,l)-(s*e[u]+n*r[u]));r[l]=o.get(h-1,l),o.set(h,l,0)}}r[h]=i}for(h=0;h<t-1;h++){if(o.set(t-1,h,o.get(h,h)),o.set(h,h,1),i=r[h+1],0!==i){for(u=0;u<=h;u++)r[u]=o.get(u,h+1)/i;for(l=0;l<=h;l++){for(n=0,u=0;u<=h;u++)n+=o.get(u,h+1)*o.get(u,l);for(u=0;u<=h;u++)o.set(u,l,o.get(u,l)-n*r[u])}}for(u=0;u<=h;u++)o.set(u,h+1,0)}for(l=0;l<t;l++)r[l]=o.get(t-1,l),o.set(t-1,l,0);o.set(t-1,t-1,1),e[0]=0}(n,l,h,i),function(t,e,r,o){let s,n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b;for(i=1;i<t;i++)e[i-1]=e[i];e[t-1]=0;let x=0,E=0,v=Number.EPSILON;for(u=0;u<t;u++){for(E=Math.max(E,Math.abs(r[u])+Math.abs(e[u])),a=u;a<t&&!(Math.abs(e[a])<=v*E);)a++;if(a>u){b=0;do{for(b+=1,s=r[u],c=(r[u+1]-s)/(2*e[u]),f=_(c,1),c<0&&(f=-f),r[u]=e[u]/(c+f),r[u+1]=e[u]*(c+f),m=r[u+1],n=s-r[u],i=u+2;i<t;i++)r[i]-=n;for(x+=n,c=r[a],g=1,w=g,p=g,d=e[u+1],y=0,M=0,i=a-1;i>=u;i--)for(p=w,w=g,M=y,s=g*e[i],n=g*c,f=_(c,e[i]),e[i+1]=y*f,y=e[i]/f,g=c/f,c=g*r[i]-y*s,r[i+1]=n+y*(g*s+y*r[i]),l=0;l<t;l++)n=o.get(l,i+1),o.set(l,i+1,y*o.get(l,i)+g*n),o.set(l,i,g*o.get(l,i)-y*n);c=-y*M*p*d*e[u]/m,e[u]=y*c,r[u]=g*c}while(Math.abs(e[u])>v*E)}r[u]=r[u]+x,e[u]=0}for(i=0;i<t-1;i++){for(l=i,c=r[i],h=i+1;h<t;h++)r[h]<c&&(l=h,c=r[h]);if(l!==i)for(r[l]=r[i],r[i]=c,h=0;h<t;h++)c=o.get(h,i),o.set(h,i,o.get(h,l)),o.set(h,l,c)}}(n,l,h,i)}else{let t=new S(n,n),e=new Float64Array(n);for(s=0;s<n;s++)for(o=0;o<n;o++)t.set(o,s,u.get(o,s));!function(t,e,r,o){let s,n,i,h,l,u,a,c=t-1;for(u=1;u<=c-1;u++){for(a=0,h=u;h<=c;h++)a+=Math.abs(e.get(h,u-1));if(0!==a){for(i=0,h=c;h>=u;h--)r[h]=e.get(h,u-1)/a,i+=r[h]*r[h];for(n=Math.sqrt(i),r[u]>0&&(n=-n),i-=r[u]*n,r[u]=r[u]-n,l=u;l<t;l++){for(s=0,h=c;h>=u;h--)s+=r[h]*e.get(h,l);for(s/=i,h=u;h<=c;h++)e.set(h,l,e.get(h,l)-s*r[h])}for(h=0;h<=c;h++){for(s=0,l=c;l>=u;l--)s+=r[l]*e.get(h,l);for(s/=i,l=u;l<=c;l++)e.set(h,l,e.get(h,l)-s*r[l])}r[u]=a*r[u],e.set(u,u-1,a*n)}}for(h=0;h<t;h++)for(l=0;l<t;l++)o.set(h,l,h===l?1:0);for(u=c-1;u>=1;u--)if(0!==e.get(u,u-1)){for(h=u+1;h<=c;h++)r[h]=e.get(h,u-1);for(l=u;l<=c;l++){for(n=0,h=u;h<=c;h++)n+=r[h]*o.get(h,l);for(n=n/r[u]/e.get(u,u-1),h=u;h<=c;h++)o.set(h,l,o.get(h,l)+n*r[h])}}}(n,t,e,i),function(t,e,r,o,s){let n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b=t-1,x=t-1,E=Number.EPSILON,v=0,S=0,k=0,I=0,R=0,T=0,q=0,C=0;for(n=0;n<t;n++)for((n<0||n>x)&&(r[n]=s.get(n,n),e[n]=0),i=Math.max(n-1,0);i<t;i++)S+=Math.abs(s.get(n,i));for(;b>=0;){for(l=b;l>0&&(T=Math.abs(s.get(l-1,l-1))+Math.abs(s.get(l,l)),0===T&&(T=S),!(Math.abs(s.get(l,l-1))<E*T));)l--;if(l===b)s.set(b,b,s.get(b,b)+v),r[b]=s.get(b,b),e[b]=0,b--,C=0;else if(l===b-1){if(c=s.get(b,b-1)*s.get(b-1,b),k=(s.get(b-1,b-1)-s.get(b,b))/2,I=k*k+c,q=Math.sqrt(Math.abs(I)),s.set(b,b,s.get(b,b)+v),s.set(b-1,b-1,s.get(b-1,b-1)+v),f=s.get(b,b),I>=0){for(q=k>=0?k+q:k-q,r[b-1]=f+q,r[b]=r[b-1],0!==q&&(r[b]=f-c/q),e[b-1]=0,e[b]=0,f=s.get(b,b-1),T=Math.abs(f)+Math.abs(q),k=f/T,I=q/T,R=Math.sqrt(k*k+I*I),k/=R,I/=R,i=b-1;i<t;i++)q=s.get(b-1,i),s.set(b-1,i,I*q+k*s.get(b,i)),s.set(b,i,I*s.get(b,i)-k*q);for(n=0;n<=b;n++)q=s.get(n,b-1),s.set(n,b-1,I*q+k*s.get(n,b)),s.set(n,b,I*s.get(n,b)-k*q);for(n=0;n<=x;n++)q=o.get(n,b-1),o.set(n,b-1,I*q+k*o.get(n,b)),o.set(n,b,I*o.get(n,b)-k*q)}else r[b-1]=f+k,r[b]=f+k,e[b-1]=q,e[b]=-q;b-=2,C=0}else{if(f=s.get(b,b),m=0,c=0,l<b&&(m=s.get(b-1,b-1),c=s.get(b,b-1)*s.get(b-1,b)),10===C){for(v+=f,n=0;n<=b;n++)s.set(n,n,s.get(n,n)-f);T=Math.abs(s.get(b,b-1))+Math.abs(s.get(b-1,b-2)),f=m=.75*T,c=-.4375*T*T}if(30===C&&(T=(m-f)/2,T=T*T+c,T>0)){for(T=Math.sqrt(T),m<f&&(T=-T),T=f-c/((m-f)/2+T),n=0;n<=b;n++)s.set(n,n,s.get(n,n)-T);v+=T,f=m=c=.964}for(C+=1,u=b-2;u>=l&&(q=s.get(u,u),R=f-q,T=m-q,k=(R*T-c)/s.get(u+1,u)+s.get(u,u+1),I=s.get(u+1,u+1)-q-R-T,R=s.get(u+2,u+1),T=Math.abs(k)+Math.abs(I)+Math.abs(R),k/=T,I/=T,R/=T,u!==l)&&!(Math.abs(s.get(u,u-1))*(Math.abs(I)+Math.abs(R))<E*(Math.abs(k)*(Math.abs(s.get(u-1,u-1))+Math.abs(q)+Math.abs(s.get(u+1,u+1)))));)u--;for(n=u+2;n<=b;n++)s.set(n,n-2,0),n>u+2&&s.set(n,n-3,0);for(h=u;h<=b-1&&(y=h!==b-1,h!==u&&(k=s.get(h,h-1),I=s.get(h+1,h-1),R=y?s.get(h+2,h-1):0,f=Math.abs(k)+Math.abs(I)+Math.abs(R),0!==f&&(k/=f,I/=f,R/=f)),0!==f);h++)if(T=Math.sqrt(k*k+I*I+R*R),k<0&&(T=-T),0!==T){for(h!==u?s.set(h,h-1,-T*f):l!==u&&s.set(h,h-1,-s.get(h,h-1)),k+=T,f=k/T,m=I/T,q=R/T,I/=k,R/=k,i=h;i<t;i++)k=s.get(h,i)+I*s.get(h+1,i),y&&(k+=R*s.get(h+2,i),s.set(h+2,i,s.get(h+2,i)-k*q)),s.set(h,i,s.get(h,i)-k*f),s.set(h+1,i,s.get(h+1,i)-k*m);for(n=0;n<=Math.min(b,h+3);n++)k=f*s.get(n,h)+m*s.get(n,h+1),y&&(k+=q*s.get(n,h+2),s.set(n,h+2,s.get(n,h+2)-k*R)),s.set(n,h,s.get(n,h)-k),s.set(n,h+1,s.get(n,h+1)-k*I);for(n=0;n<=x;n++)k=f*o.get(n,h)+m*o.get(n,h+1),y&&(k+=q*o.get(n,h+2),o.set(n,h+2,o.get(n,h+2)-k*R)),o.set(n,h,o.get(n,h)-k),o.set(n,h+1,o.get(n,h+1)-k*I)}}}if(0!==S){for(b=t-1;b>=0;b--)if(k=r[b],I=e[b],0===I)for(l=b,s.set(b,b,1),n=b-1;n>=0;n--){for(c=s.get(n,n)-k,R=0,i=l;i<=b;i++)R+=s.get(n,i)*s.get(i,b);if(e[n]<0)q=c,T=R;else if(l=n,0===e[n]?s.set(n,b,0!==c?-R/c:-R/(E*S)):(f=s.get(n,n+1),m=s.get(n+1,n),I=(r[n]-k)*(r[n]-k)+e[n]*e[n],a=(f*T-q*R)/I,s.set(n,b,a),s.set(n+1,b,Math.abs(f)>Math.abs(q)?(-R-c*a)/f:(-T-m*a)/q)),a=Math.abs(s.get(n,b)),E*a*a>1)for(i=n;i<=b;i++)s.set(i,b,s.get(i,b)/a)}else if(I<0)for(l=b-1,Math.abs(s.get(b,b-1))>Math.abs(s.get(b-1,b))?(s.set(b-1,b-1,I/s.get(b,b-1)),s.set(b-1,b,-(s.get(b,b)-k)/s.get(b,b-1))):(M=K(0,-s.get(b-1,b),s.get(b-1,b-1)-k,I),s.set(b-1,b-1,M[0]),s.set(b-1,b,M[1])),s.set(b,b-1,0),s.set(b,b,1),n=b-2;n>=0;n--){for(g=0,w=0,i=l;i<=b;i++)g+=s.get(n,i)*s.get(i,b-1),w+=s.get(n,i)*s.get(i,b);if(c=s.get(n,n)-k,e[n]<0)q=c,R=g,T=w;else if(l=n,0===e[n]?(M=K(-g,-w,c,I),s.set(n,b-1,M[0]),s.set(n,b,M[1])):(f=s.get(n,n+1),m=s.get(n+1,n),p=(r[n]-k)*(r[n]-k)+e[n]*e[n]-I*I,d=2*(r[n]-k)*I,0===p&&0===d&&(p=E*S*(Math.abs(c)+Math.abs(I)+Math.abs(f)+Math.abs(m)+Math.abs(q))),M=K(f*R-q*g+I*w,f*T-q*w-I*g,p,d),s.set(n,b-1,M[0]),s.set(n,b,M[1]),Math.abs(f)>Math.abs(q)+Math.abs(I)?(s.set(n+1,b-1,(-g-c*s.get(n,b-1)+I*s.get(n,b))/f),s.set(n+1,b,(-w-c*s.get(n,b)-I*s.get(n,b-1))/f)):(M=K(-R-m*s.get(n,b-1),-T-m*s.get(n,b),q,I),s.set(n+1,b-1,M[0]),s.set(n+1,b,M[1]))),a=Math.max(Math.abs(s.get(n,b-1)),Math.abs(s.get(n,b))),E*a*a>1)for(i=n;i<=b;i++)s.set(i,b-1,s.get(i,b-1)/a),s.set(i,b,s.get(i,b)/a)}for(n=0;n<t;n++)if(n<0||n>x)for(i=n;i<t;i++)o.set(n,i,s.get(n,i));for(i=t-1;i>=0;i--)for(n=0;n<=x;n++){for(q=0,h=0;h<=Math.min(i,x);h++)q+=o.get(n,h)*s.get(h,i);o.set(n,i,q)}}}(n,l,h,i,t)}this.n=n,this.e=l,this.d=h,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,o=this.e,s=this.d,n=new S(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)n.set(t,e,0);n.set(t,t,s[t]),o[t]>0?n.set(t,t+1,o[t]):o[t]<0&&n.set(t,t-1,o[t])}return n}}function K(t,e,r,o){let s,n;return Math.abs(r)>Math.abs(o)?(s=o/r,n=r+s*o,[(t+s*e)/n,(e-s*t)/n]):(s=r/o,n=o+s*r,[(s*t+e)/n,(s*e-t)/n])}class Z{constructor(t){if(!(t=F.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,o,s=t,n=s.rows,i=new S(n,n),h=!0;for(r=0;r<n;r++){let t=0;for(o=0;o<r;o++){let n=0;for(e=0;e<o;e++)n+=i.get(o,e)*i.get(r,e);n=(s.get(r,o)-n)/i.get(o,o),i.set(r,o,n),t+=n*n}for(t=s.get(r,r)-t,h&=t>0,i.set(r,r,Math.sqrt(Math.max(t,0))),o=r+1;o<n;o++)i.set(r,o,0)}this.L=i,this.positiveDefinite=Boolean(h)}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=F.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let o,s,n,i=t.columns,h=t.clone();for(n=0;n<r;n++)for(s=0;s<i;s++){for(o=0;o<n;o++)h.set(n,s,h.get(n,s)-h.get(o,s)*e.get(n,o));h.set(n,s,h.get(n,s)/e.get(n,n))}for(n=r-1;n>=0;n--)for(s=0;s<i;s++){for(o=n+1;o<r;o++)h.set(n,s,h.get(n,s)-h.get(o,s)*e.get(o,n));h.set(n,s,h.get(n,s)/e.get(n,n))}return h}get lowerTriangularMatrix(){return this.L}}class tt{constructor(t,e={}){t=F.checkMatrix(t);let{Y:r}=e;const{scaleScores:o=!1,maxIterations:n=1e3,terminationCriteria:i=1e-10}=e;let h;if(r){if(r=s(r)&&"number"==typeof r[0]?S.columnVector(r):F.checkMatrix(r),r.rows!==t.rows)throw new Error("Y should have the same number of rows as X");h=r.getColumnVector(0)}else h=t.getColumnVector(0);let l,u,a,c,f=1;for(let e=0;e<n&&f>i;e++)a=t.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),a=a.div(a.norm()),l=t.mmul(a).div(a.transpose().mmul(a).get(0,0)),e>0&&(f=l.clone().sub(c).pow(2).sum()),c=l.clone(),r?(u=r.transpose().mmul(l).div(l.transpose().mmul(l).get(0,0)),u=u.div(u.norm()),h=r.mmul(u).div(u.transpose().mmul(u).get(0,0))):h=l;if(r){let e=t.transpose().mmul(l).div(l.transpose().mmul(l).get(0,0));e=e.div(e.norm());let o=t.clone().sub(l.clone().mmul(e.transpose())),s=h.transpose().mmul(l).div(l.transpose().mmul(l).get(0,0)),n=r.clone().sub(l.clone().mulS(s.get(0,0)).mmul(u.transpose()));this.t=l,this.p=e.transpose(),this.w=a.transpose(),this.q=u,this.u=h,this.s=l.transpose().mmul(l),this.xResidual=o,this.yResidual=n,this.betas=s}else this.w=a.transpose(),this.s=l.transpose().mmul(l).sqrt(),this.t=o?l.clone().div(this.s.get(0,0)):l,this.xResidual=t.sub(l.mmul(a.transpose()))}}},842:function(t,e,r){"use strict";r.d(e,{Z:function(){return o}});class o{constructor(t=[],e=s){if(this.data=t,this.length=this.data.length,this.compare=e,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,o=e[t];for(;t>0;){const s=t-1>>1,n=e[s];if(r(o,n)>=0)break;e[t]=n,t=s}e[t]=o}_down(t){const{data:e,compare:r}=this,o=this.length>>1,s=e[t];for(;t<o;){let o=1+(t<<1),n=e[o];const i=o+1;if(i<this.length&&r(e[i],n)<0&&(o=i,n=e[i]),r(n,s)>=0)break;e[t]=n,t=o}e[t]=s}}function s(t,e){return t<e?-1:t>e?1:0}},96:function(t,e,r){const{Matrix:o,inverse:s}=r(23),{solveHomography:n}=r(305);t.exports={estimate:({screenCoords:t,worldCoords:e,projectionTransform:r})=>{const i=n(e.map((t=>[t.x,t.y])),t.map((t=>[t.x,t.y]))),h=new o([[i[0],i[1],i[2]],[i[3],i[4],i[5]],[i[6],i[7],i[8]]]),l=new o(r),u=s(l).mmul(h).to1DArray(),a=Math.sqrt(u[0]*u[0]+u[3]*u[3]+u[6]*u[6]),c=Math.sqrt(u[1]*u[1]+u[4]*u[4]+u[7]*u[7]),f=(a+c)/2,m=[];m[0]=u[0]/a,m[3]=u[3]/a,m[6]=u[6]/a,m[1]=u[1]/c,m[4]=u[4]/c,m[7]=u[7]/c,m[2]=m[3]*m[7]-m[6]*m[4],m[5]=m[6]*m[1]-m[0]*m[7],m[8]=m[0]*m[4]-m[1]*m[3];const g=Math.sqrt(m[2]*m[2]+m[5]*m[5]+m[8]*m[8]);m[2]/=g,m[5]/=g,m[8]/=g;const w=[];return w[0]=u[2]/f,w[1]=u[5]/f,w[2]=u[8]/f,[[m[0],m[1],m[2],w[0]],[m[3],m[4],m[5],w[1]],[m[6],m[7],m[8],w[2]]]}}},883:function(t,e,r){const{estimate:o}=r(96),{refineEstimate:s}=r(941);t.exports={Estimator:class{constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return o({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return s({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}}},941:function(t,e,r){const{Matrix:o,inverse:s}=r(23),{normalizePoints:n,applyModelViewProjectionTransform:i,buildModelViewProjectionTransform:h,computeScreenCoordiate:l}=r(203);let u=[[],[],[]],a=[[],[]],c=[[],[],[]];const f=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o,inlierProb:s})=>{const n=s<1;let i=t,u=0,a=0,c=new Array(r.length),f=new Array(r.length),p=new Array(r.length),d=new Array(r.length);for(let t=0;t<=10;t++){const y=h(e,i);for(let t=0;t<r.length;t++){const e=l(y,r[t].x,r[t].y,r[t].z),s=o[t].x-e.x,n=o[t].y-e.y;p[t]=s,d[t]=n,c[t]=s*s+n*n}let M;if(a=0,n){const t=Math.max(3,Math.floor(r.length*s)-1);for(let t=0;t<r.length;t++)f[t]=c[t];f.sort(((t,e)=>t-e)),M=Math.max(4*f[t],16);for(let t=0;t<r.length;t++)f[t]>M?a+=M/6:a+=M/6*(1-(1-f[t]/M)*(1-f[t]/M)*(1-f[t]/M))}else for(let t=0;t<r.length;t++)a+=c[t];if(a/=r.length,a<.1)break;if(t>0&&a/u>.99)break;if(10===t)break;u=a;const b=[],x=[];for(let t=0;t<r.length;t++){if(n&&c[t]>M)continue;const o=w({modelViewProjectionTransform:y,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-c[t]/M)*(1-c[t]/M);for(let t=0;t<2;t++)for(let r=0;r<6;r++)o[t][r]*=e;b.push([p[t]*e]),b.push([d[t]*e])}else b.push([p[t]]),b.push([d[t]]);for(let t=0;t<o.length;t++)x.push(o[t])}const E=g({dU:b,J_U_S:x});if(null===E)break;i=m({modelViewTransform:i,dS:E})}return{modelViewTransform:i,err:a}},m=({modelViewTransform:t,dS:e})=>{let r,o,s,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];n<1e-6?(r=1,o=0,s=0,n=0):(n=Math.sqrt(n),r=e[0]/n,o=e[1]/n,s=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;u[0][0]=r*r*l+i,u[0][1]=r*o*l-s*h,u[0][2]=r*s*l+o*h,u[0][3]=e[3],u[1][0]=o*r*l+s*h,u[1][1]=o*o*l+i,u[1][2]=o*s*l-r*h,u[1][3]=e[4],u[2][0]=s*r*l-o*h,u[2][1]=s*o*l+r*h,u[2][2]=s*s*l+i,u[2][3]=e[5];const a=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)a[e][r]=t[e][0]*u[0][r]+t[e][1]*u[1][r]+t[e][2]*u[2][r];a[e][3]+=t[e][3]}return a},g=({dU:t,J_U_S:e})=>{const r=new o(e),n=new o(t),i=r.transpose(),h=i.mmul(r),l=i.mmul(n);let u;try{u=s(h)}catch(t){return null}return u.mmul(l).to1DArray()},w=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:o})=>{const s=e,{x:n,y:h,z:l}=o,u=i(t,n,h,l),f=u.z*u.z;a[0][0]=r[0][0]*u.z/f,a[0][1]=r[0][1]*u.z/f,a[0][2]=(r[0][2]*u.z-r[2][2]*u.x)/f,a[1][0]=r[1][0]*u.z/f,a[1][1]=r[1][1]*u.z/f,a[1][2]=(r[1][2]*u.z-r[2][2]*u.y)/f,c[0][0]=s[0][2]*h,c[0][1]=-s[0][2]*n,c[0][2]=s[0][1]*n-s[0][0]*h,c[0][3]=s[0][0],c[0][4]=s[0][1],c[0][5]=s[0][2],c[1][0]=s[1][2]*h,c[1][1]=-s[1][2]*n,c[1][2]=s[1][1]*n-s[1][0]*h,c[1][3]=s[1][0],c[1][4]=s[1][1],c[1][5]=s[1][2],c[2][0]=s[2][2]*h,c[2][1]=-s[2][2]*n,c[2][2]=s[2][1]*n-s[2][0]*h,c[2][3]=s[2][0],c[2][4]=s[2][1],c[2][5]=s[2][2];const m=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){m[t][e]=0;for(let r=0;r<3;r++)m[t][e]+=a[t][r]*c[r][e]}return m};t.exports={refineEstimate:({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o})=>{let s=0,n=0;for(let t=0;t<r.length;t++)s+=r[t].x,n+=r[t].y;s/=r.length,n/=r.length;const i=[];for(let t=0;t<r.length;t++)i.push({x:r[t].x-s,y:r[t].y-n,z:r[t].z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*s+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*s+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*s+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(let t=0;t<l.length;t++){const r=f({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:o,inlierProb:l[t]});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*s-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*s-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*s-a[2][1]*n,a)}}},203:function(t){const e=(t,e,r,o)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,r,o,s)=>{const{x:n,y:i,z:h}=e(t,r,o);return{x:n/h,y:i/h}}}},183:function(t){t.exports={compute:t=>{const{v1:e,v2:r}=t;let o=0;for(let t=0;t<e.length;t++){let i=(e[t]^r[t])>>>0;o+=(n=void 0,((n=((n=((n=((n=(s=i)-(s>>1&1431655765))>>2&858993459)+(858993459&n))>>4)+n&252645135)>>8)+n&16711935)>>16)+n&65535)}var s,n;return o}}},56:function(t){const e=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:o,scaleOneOverLogK:s})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*o+c,y:u[2]*r+u[3]*o+f,angle:n,scale:Math.log(i)*s}};t.exports={computeHoughMatches:t=>{const{keywidth:r,keyheight:o,querywidth:s,queryheight:n,matches:i}=t,h=1.2*s,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(r,o),g=Math.floor(r/2),w=Math.floor(o/2),p=[];for(let t=0;t<i.length;t++){const e=i[t].querypoint.scale,r=i[t].keypoint.scale;0==r&&console.log("ERROR divide zero");const o=e/r;p.push(o*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],v=[],S={};for(let t=0;t<i.length;t++){const r=i[t].querypoint,o=i[t].keypoint,{x:s,y:n,scale:m,angle:p}=e({querypoint:r,keypoint:o,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(s<l||s>=h||n<a||n>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}let d=y*(s-l)/(h-l),k=M*(n-a)/(u-a),I=c*(p+Math.PI)/(2*Math.PI),R=10*(m- -1)/2;v[t]={binX:d,binY:k,binAngle:I,binScale:R};let T=Math.floor(d-.5),q=Math.floor(k-.5),C=Math.floor(R-.5),P=(Math.floor(I-.5)+c)%c;if(T<0||T+1>=y||q<0||q+1>=M||C<0||C+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){let e=T+t;for(let t=0;t<2;t++){let r=q+t;for(let t=0;t<2;t++){let o=(P+t)%c;for(let t=0;t<2;t++){const s=e+r*y+o*b+(C+t)*x;void 0===S[s]&&(S[s]=0),S[s]+=1}}}}E[t]=!0}}let k=0,I=-1;if(Object.keys(S).forEach((t=>{S[t]>k&&(k=S[t],I=t)})),k<3)return[];const R=Math.floor(I%x%b%y),T=Math.floor((I-R)%x%b/y),q=Math.floor((I-R-T*y)%x/b),C=Math.floor((I-R-T*y-q*b)/x),P=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=v[t];if(Math.abs(e.binX-(R+.5))>=1)continue;if(Math.abs(e.binY-(T+.5))>=1)continue;if(Math.abs(e.binScale-(C+.5))>=1)continue;const r=Math.abs(e.binAngle-(q+.5));Math.min(r,c-r)>=1||P.push(i[t])}return P}}},731:function(t,e,r){const{match:o}=r(84);t.exports={Matcher:class{constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){let r={frames:[]},s=null;for(let n=0;n<t.length;n++){const{H:i,matches:h,debugExtra:l}=o({keyframe:t[n],querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});r.frames.push(l),i&&(null===s||s.matches.length<h.length)&&(s={keyframeIndex:n,H:i,matches:h})}if(null===s)return{keyframeIndex:-1,debugExtra:r};const n=[],i=[],h=t[s.keyframeIndex];for(let t=0;t<s.matches.length;t++){const e=s.matches[t].querypoint,r=s.matches[t].keypoint;n.push({x:e.x,y:e.y}),i.push({x:(r.x+.5)/h.scale,y:(r.y+.5)/h.scale,z:0})}return{screenCoords:n,worldCoords:i,keyframeIndex:s.keyframeIndex,debugExtra:r}}}}},84:function(t,e,r){const o=r(842).Z,{compute:s}=r(183),{computeHoughMatches:n}=r(56),{computeHomography:i}=r(643),{multiplyPointHomographyInhomogenous:h,matrixInverse33:l}=r(240),u=({node:t,keypoints:e,querypoint:r,queue:o,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(let e=0;e<t.pointIndexes.length;e++)n.push(t.pointIndexes[e]);return}const h=[];for(let o=0;o<t.children.length;o++){const n=t.children[o].centerPointIndex,i=s({v1:e[n].descriptors,v2:r.descriptors});h.push(i)}let l=Number.MAX_SAFE_INTEGER;for(let e=0;e<t.children.length;e++)l=Math.min(l,h[e]);for(let e=0;e<t.children.length;e++)h[e]!==l&&o.push({node:t.children[e],d:h[e]});for(let s=0;s<t.children.length;s++)h[s]===l&&u({node:t.children[s],keypoints:e,querypoint:r,queue:o,keypointIndexes:n,numPop:i});if(i<8&&o.length>0){const{node:t,d:s}=o.pop();u({node:t,keypoints:e,querypoint:r,queue:o,keypointIndexes:n,numPop:i+=1})}},a=t=>{const{H:e,matches:r,threshold:o}=t,s=o*o,n=[];for(let t=0;t<r.length;t++){const o=r[t].querypoint,i=r[t].keypoint,l=h([i.x,i.y],e);(l[0]-o.x)*(l[0]-o.x)+(l[1]-o.y)*(l[1]-o.y)<=s&&n.push(r[t])}return n};t.exports={match:({keyframe:t,querypoints:e,querywidth:r,queryheight:c,debugMode:f})=>{let m={};const g=[];for(let r=0;r<e.length;r++){const n=e[r],i=n.maxima?t.maximaPoints:t.minimaPoints;if(0===i.length)continue;const h=n.maxima?t.maximaPointsCluster.rootNode:t.minimaPointsCluster.rootNode,l=[],a=new o([],((t,e)=>t.d-e.d));u({node:h,keypoints:i,querypoint:n,queue:a,keypointIndexes:l,numPop:0});let c=-1,f=Number.MAX_SAFE_INTEGER,m=Number.MAX_SAFE_INTEGER;for(let t=0;t<l.length;t++){const e=i[l[t]],r=s({v1:e.descriptors,v2:n.descriptors});r<f?(m=f,f=r,c=l[t]):r<m&&(m=r)}-1!==c&&(m===Number.MAX_SAFE_INTEGER||1*f/m<.7)&&g.push({querypoint:n,keypoint:i[c]})}if(f&&(m.matches=g),g.length<6)return{debugExtra:m};const w=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:g});f&&(m.houghMatches=w);const p=i({srcPoints:w.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:w.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===p)return{debugExtra:m};const d=a({H:p,matches:w,threshold:3});if(f&&(m.inlierMatches=d),d.length<6)return{debugExtra:m};const y=l(p,1e-5),M=[];for(let r=0;r<e.length;r++){const o=e[r],n=h([o.x,o.y],y);let i=-1,l=Number.MAX_SAFE_INTEGER,u=Number.MAX_SAFE_INTEGER;const a=o.maxima?t.maximaPoints:t.minimaPoints;for(let t=0;t<a.length;t++){const e=a[t];if((e.x-n[0])*(e.x-n[0])+(e.y-n[1])*(e.y-n[1])>100)continue;const r=s({v1:e.descriptors,v2:o.descriptors});r<l?(u=l,l=r,i=t):r<u&&(u=r)}-1!==i&&(u===Number.MAX_SAFE_INTEGER||1*l/u<.7)&&M.push({querypoint:o,keypoint:a[i]})}f&&(m.matches2=M);const b=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:M});f&&(m.houghMatches2=b);const x=i({srcPoints:b.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:b.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===x)return{debugExtra:m};const E=a({H:x,matches:b,threshold:3});return f&&(m.inlierMatches2=E),{H:x,matches:E,debugExtra:m}}}},643:function(t,e,r){const{Matrix:o,inverse:s}=r(23),{createRandomizer:n}=r(603),{quadrilateralConvex:i,matrixInverse33:h,smallestTriangleArea:l,multiplyPointHomographyInhomogenous:u,checkThreePointsConsistent:a,checkFourPointsConsistent:c,determinant:f}=r(240),{solveHomography:m}=r(305),g=({H:t,testPoints:e,keyframe:r})=>{const o=h(t,1e-5);if(null===o)return!1;const s=[];for(let t=0;t<e.length;t++)s.push(u(e[t],o));return!(l(s[0],s[1],s[2],s[3])<r.width*r.height*1e-4||!i(s[0],s[1],s[2],s[3]))},w=({inH:t})=>{const e=1/t[8],r=[];for(let o=0;o<8;o++)r[o]=t[o]*e;return r[8]=1,r},p=({H:t,srcPoint:e,dstPoint:r,oneOverScale2:o})=>{const s=u(e,t),n=[s[0]-r[0],s[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*o)},d=({H:t,testPoints:e})=>{const r=[];for(let o=0;o<e.length;o++)r[o]=u(e[o],t);for(let t=0;t<e.length;t++){const o=t,s=(t+1)%e.length,n=(t+2)%e.length;if(!a(e[o],e[s],e[n],r[o],r[s],r[n]))return!1}return!0};t.exports={computeHomography:t=>{const{srcPoints:e,dstPoints:r,keyframe:o,quickMode:s}=t,i=[[0,0],[o.width,0],[o.width,o.height],[0,o.height]];if(e.length<4)return null;const h=Math.min(10,e.length),l=n(),u=[];for(let t=0;t<e.length;t++)u[t]=t;l.arrayShuffle({arr:u,sampleSize:u.length});const a=s?10:20,f=2*a;let y=0;const M=[];for(;y<f&&M.length<a;){if(y+=1,l.arrayShuffle({arr:u,sampleSize:4}),!c(e[u[0]],e[u[1]],e[u[2]],e[u[3]],r[u[0]],r[u[1]],r[u[2]],r[u[3]]))continue;const t=m([e[u[0]],e[u[1]],e[u[2]],e[u[3]]],[r[u[0]],r[u[1]],r[u[2]],r[u[3]]]);null!==t&&d({H:t,testPoints:i})&&M.push(t)}if(0===M.length)return null;const b=[];for(let t=0;t<M.length;t++)b.push({H:M[t],cost:0});let x=h;for(let t=0;t<e.length&&b.length>2;t+=x){x=Math.min(h,e.length-t);let o=t+x;for(let s=0;s<b.length;s++)for(let n=t;n<o;n++){const t=p({H:b[s].H,srcPoint:e[n],dstPoint:r[n],oneOverScale2:1e4});b[s].cost+=t}b.sort(((t,e)=>t.cost-e.cost)),b.splice(-Math.floor((b.length+1)/2))}let E=null;for(let t=0;t<b.length;t++){const e=w({inH:b[t].H});if(g({H:e,testPoints:i,keyframe:o})){E=e;break}}return E}}},240:function(t){const e=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),r=t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],o=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*o},o=(t,e)=>[t[0]-e[0],t[1]-e[1]],s=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)};t.exports={matrixInverse33:(t,e)=>{const o=r(t);if(Math.abs(o)<=e)return null;const s=1/o;return[(t[4]*t[8]-t[5]*t[7])*s,(t[2]*t[7]-t[1]*t[8])*s,(t[1]*t[5]-t[2]*t[4])*s,(t[5]*t[6]-t[3]*t[8])*s,(t[0]*t[8]-t[2]*t[6])*s,(t[2]*t[3]-t[0]*t[5])*s,(t[3]*t[7]-t[4]*t[6])*s,(t[1]*t[6]-t[0]*t[7])*s,(t[0]*t[4]-t[1]*t[3])*s]},matrixMul33:(t,e)=>{const r=[];return r[0]=t[0]*e[0]+t[1]*e[3]+t[2]*e[6],r[1]=t[0]*e[1]+t[1]*e[4]+t[2]*e[7],r[2]=t[0]*e[2]+t[1]*e[5]+t[2]*e[8],r[3]=t[3]*e[0]+t[4]*e[3]+t[5]*e[6],r[4]=t[3]*e[1]+t[4]*e[4]+t[5]*e[7],r[5]=t[3]*e[2]+t[4]*e[5]+t[5]*e[8],r[6]=t[6]*e[0]+t[7]*e[3]+t[8]*e[6],r[7]=t[6]*e[1]+t[7]*e[4]+t[8]*e[7],r[8]=t[6]*e[2]+t[7]*e[5]+t[8]*e[8],r},quadrilateralConvex:(t,r,o,s)=>{const n=e(t,r,o)<=0;return e(r,o,s)<=0===n&&e(o,s,t)<=0===n&&e(s,t,r)<=0===n},smallestTriangleArea:(t,e,r,n)=>{const i=o(e,t),h=o(r,t),l=o(n,t),u=o(e,r),a=o(n,r),c=s(i,h),f=s(h,l),m=s(i,l),g=s(u,a);return Math.min(Math.min(Math.min(c,f),m),g)},multiplyPointHomographyInhomogenous:(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8],o=[];return o[0]=(e[0]*t[0]+e[1]*t[1]+e[2])/r,o[1]=(e[3]*t[0]+e[4]*t[1]+e[5])/r,o},checkThreePointsConsistent:(t,r,o,s,n,i)=>e(t,r,o)>0==e(s,n,i)>0,checkFourPointsConsistent:(t,r,o,s,n,i,h,l)=>e(t,r,o)>0==e(n,i,h)>0&&e(r,o,s)>0==e(i,h,l)>0&&e(o,s,t)>0==e(h,l,n)>0&&e(s,t,r)>0==e(l,n,i)>0,determinant:r}},305:function(t,e,r){const{Matrix:o,inverse:s}=r(23),n=t=>{let e=0,r=0;for(let o=0;o<t.length;o++)e+=t[o][0],r+=t[o][1];let o=e/t.length,s=r/t.length,n=0;for(let e=0;e<t.length;e++){const r=t[e][0]-o,i=t[e][1]-s;n+=Math.sqrt(r*r+i*i)}let i=Math.sqrt(2)*t.length/n;const h=[];for(let e=0;e<t.length;e++)h.push([(t[e][0]-o)*i,(t[e][1]-s)*i]);return{normPoints:h,param:{meanX:o,meanY:s,s:i}}};t.exports={solveHomography:(t,e)=>{const{normPoints:r,param:i}=n(t),{normPoints:h,param:l}=n(e),u=h.length,a=[],c=[];for(let t=0;t<u;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*h[t][0],-r[t][1]*h[t][0]],o=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*h[t][1],-r[t][1]*h[t][1]];a.push(e),a.push(o),c.push([h[t][0]]),c.push([h[t][1]])}try{const t=new o(a),e=new o(c),r=t.transpose(),n=r.mmul(t),h=r.mmul(e);return((t,e,r)=>{const o=r.s*r.meanX,s=r.s*r.meanY,n=[t[0]+o*t[6],t[1]+o*t[7],(t[0]+o*t[6])*-e.meanX+(t[1]+o*t[7])*-e.meanY+(t[2]+o)/e.s,t[3]+s*t[6],t[4]+s*t[7],(t[3]+s*t[6])*-e.meanX+(t[4]+s*t[7])*-e.meanY+(t[5]+s)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(s(n).mmul(h).to1DArray(),i,l)}catch(t){return null}}}},603:function(t){t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;let o=e[t];e[t]=e[r],e[r]=o}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}}},e={};function r(o){var s=e[o];if(void 0!==s)return s.exports;var n=e[o]={exports:{}};return t[o](n,n.exports,r),n.exports}r.d=function(t,e){for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},function(){const{Matcher:t}=r(731),{Estimator:e}=r(883);let o=null,s=null,n=!1,i=null,h=null;onmessage=r=>{const{data:l}=r;if("setup"===l.type)o=l.projectionTransform,s=l.matchingDataList,n=l.debugMode,i=new t(l.inputWidth,l.inputHeight,n),h=new e(l.projectionTransform);else if("match"===l.type){const t=l.targetIndexes;let e=-1,r=null,o=null;for(let n=0;n<t.length;n++){const u=t[n],{keyframeIndex:a,screenCoords:c,worldCoords:f,debugExtra:m}=i.matchDetection(s[u],l.featurePoints);if(o=m,-1!==a){const t=h.estimate({screenCoords:c,worldCoords:f});t&&(e=u,r=t);break}}postMessage({type:"matchDone",targetIndex:e,modelViewTransform:r,debugExtra:o})}else if("trackUpdate"===l.type){const{modelViewTransform:t,worldCoords:e,screenCoords:r}=l,o=h.refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:o})}}}()}();',n.p+"controller.worker.prod.js")}},479:function(t,e,n){const r=n(9330),{Detector:s}=n(9814),{buildImageList:o,buildTrackingImageList:a}=n(5690),{build:i}=n(5765),u=n(1113),l=n(5512),c=async(t,e)=>{const n=[];for(let r=0;r<t.length;r++){const o=t[r],a=new s(o.width,o.height);await l.nextFrame(),l.tidy((()=>{const t=l.tensor(o.data,[o.data.length],"float32").reshape([o.height,o.width]),{featurePoints:s}=a.detect(t),u=s.filter((t=>t.maxima)),c=s.filter((t=>!t.maxima)),h=i({points:u}),p=i({points:c});n.push({maximaPoints:u,minimaPoints:c,maximaPointsCluster:h,minimaPointsCluster:p,width:o.width,height:o.height,scale:o.scale}),e(r)}))}return n};t.exports={Compiler:class{constructor(){this.data=null}compileImageTargets(t,e){return new Promise((async(n,s)=>{const i=[];for(let e=0;e<t.length;e++){const n=t[e],r=document.createElement("canvas");r.width=n.width,r.height=n.height;const s=r.getContext("2d");s.drawImage(n,0,0,n.width,n.height);const o=s.getImageData(0,0,n.width,n.height),a=new Uint8Array(n.width*n.height);for(let t=0;t<a.length;t++){const e=4*t;a[t]=Math.floor((o.data[e]+o.data[e+1]+o.data[e+2])/3)}const u={data:a,height:n.height,width:n.width};i.push(u)}const u=50/i.length;let l=0;this.data=[];for(let t=0;t<i.length;t++){const n=i[t],r=o(n),s=u/r.length,a=await c(r,(()=>{l+=s,e(l)}));this.data.push({targetImage:n,imageList:r,matchingData:a})}for(let t=0;t<i.length;t++){const e=a(i[t]);this.data[t].trackingImageList=e}const h=await new Promise(((t,n)=>{const s=new r;s.onmessage=n=>{"progress"===n.data.type?e(50+n.data.percent):"compileDone"===n.data.type&&t(n.data.list)},s.postMessage({type:"compile",targetImages:i})}));for(let t=0;t<i.length;t++)this.data[t].trackingData=h[t];n(this.data)}))}exportData(){const t=[];for(let e=0;e<this.data.length;e++)t.push({targetImage:{width:this.data[e].targetImage.width,height:this.data[e].targetImage.height},trackingData:this.data[e].trackingData,matchingData:this.data[e].matchingData});return u.encode({v:2,dataList:t})}importData(t){const e=u.decode(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(let r=0;r<n.length;r++)this.data.push({targetImage:n[r].targetImage,trackingData:n[r].trackingData,matchingData:n[r].matchingData});return this.data}}}},8608:function(t,e,n){const r=n(5512),s=n(531),{Tracker:o}=n(7758),{CropDetector:a}=n(1127),{Compiler:i}=n(479),{InputLoader:u}=n(6649),{OneEuroFilter:l}=n(4587);t.exports={Controller:class{constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:r=!1,maxTrack:o=1,warmupTolerance:i=null,missTolerance:l=null,filterMinCF:c=null,filterBeta:h=null}){this.inputWidth=t,this.inputHeight=e,this.maxTrack=o,this.filterMinCF=null===c?.001:c,this.filterBeta=null===h?1e3:h,this.warmupTolerance=null===i?5:i,this.missTolerance=null===l?5:l,this.cropDetector=new a(this.inputWidth,this.inputHeight,r),this.inputLoader=new u(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const p=45*Math.PI/180,d=this.inputHeight/2/Math.tan(p/2);this.projectionTransform=[[d,0,this.inputWidth/2],[0,d,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new s,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{"matchDone"===t.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(t.data),"trackUpdateDone"===t.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(t.data)}}showTFStats(){console.log(r.memory().numTensors),console.table(r.memory())}addImageTargets(t){return new Promise((async(e,n)=>{const r=await fetch(t),s=await r.arrayBuffer();e(this.addImageTargetsFromBuffer(s))}))}addImageTargetsFromBuffer(t){const e=(new i).importData(t),n=[],r=[],s=[];for(let o=0;o<e.length;o++)r.push(e[o].matchingData),n.push(e[o].trackingData),s.push([e[o].targetImage.width,e[o].targetImage.height]);return this.tracker=new o(s,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=s,{dimensions:s,matchingDataList:r,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(n,e);return{targetIndex:r,modelViewTransform:s}}async _trackAndUpdate(t,e,n){const{worldCoords:r,screenCoords:s}=this.tracker.track(t,e,n);return r.length<4?null:await this._workerTrackUpdate(e,{worldCoords:r,screenCoords:s})}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.markerDimensions.length;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new l({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const e=this.inputLoader.loadInput(t);if(this.trackingStates.reduce(((t,e)=>t+(e.isTracking?1:0)),0)<this.maxTrack){const t=[];for(let e=0;e<this.trackingStates.length;e++)!0!==this.trackingStates[e].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==e||t.push(e));const{targetIndex:n,modelViewTransform:r}=await this._detectAndMatch(e,t);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=r)}for(let t=0;t<this.trackingStates.length;t++){const n=this.trackingStates[t];if(n.isTracking){let r=await this._trackAndUpdate(e,n.currentModelViewTransform,t);null===r?n.isTracking=!1:n.currentModelViewTransform=r}if(n.showing||n.isTracking&&(n.trackMiss=0,n.trackCount+=1,n.trackCount>this.warmupTolerance&&(n.showing=!0,n.trackingMatrix=null,n.filter.reset())),n.showing&&(n.isTracking?n.trackMiss=0:(n.trackCount=0,n.trackMiss+=1,n.trackMiss>this.missTolerance&&(n.showing=!1,n.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:t,worldMatrix:null})))),n.showing){const e=this._glModelViewMatrix(n.currentModelViewTransform,t);n.trackingMatrix=n.filter.filter(Date.now(),e);const r=[];for(let t=0;t<n.trackingMatrix.length;t++)r[t]=n.trackingMatrix[t];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:t,worldMatrix:r})}}e.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await r.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:r}}async match(t,e){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:r}}async track(t,e,n){const r=this.inputLoader.loadInput(t),s=this.tracker.track(r,e,n);return r.dispose(),s}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}_workerMatch(t,e){return new Promise((async(n,r)=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})}))}_workerTrackUpdate(t,e){return new Promise((async(n,r)=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:s,screenCoords:o}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,worldCoords:s,screenCoords:o})}))}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}_glProjectionMatrix({projectionTransform:t,width:e,height:n,near:r,far:s}){const o=[[2*t[0][0]/e,0,-(2*t[0][2]/e-1),0],[0,2*t[1][1]/n,-(2*t[1][2]/n-1),0],[0,0,-(s+r)/(s-r),-2*s*r/(s-r)],[0,0,-1,0]],a=[];for(let i=0;i<4;i++)for(let t=0;t<4;t++)a.push(o[t][i]);return a}}}},1127:function(t,e,n){n(5512);const{Detector:r}=n(9814),{buildModelViewProjectionTransform:s,computeScreenCoordiate:o}=n(6203);t.exports={CropDetector:class{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let s=Math.min(t,e)/2,o=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=o,this.detector=new r(o,o,n),this.kernelCaches={},this.lastRandomIndex=4}detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=this._detect(t,n,e);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),r}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),s=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return s<0&&(s=0),r<0&&(r=0),s>=this.width-this.cropSize&&(s=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,s,r)}_detect(t,e,n){const r=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:s,debugExtra:o}=this.detector.detect(r);return s.forEach((t=>{t.x+=e,t.y+=n})),this.debugMode&&(o.projectedImage=r.arraySync()),r.dispose(),{featurePoints:s,debugExtra:o}}}}},9814:function(t,e,n){const r=n(5512),{FREAKPOINTS:s}=n(389),o=(s.length-1)*s.length/2;t.exports={Detector:class{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let r=0;for(;t>=8&&e>=8&&(t/=2,e/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(let r=0;r<t.length;r++)e[4*r]=t[r],e[4*r+1]=t[r],e[4*r+2]=t[r],e[4*r+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}detect(t){let e=null;const n=[];for(let g=0;g<this.numOctaves;g++){let e,r;e=0===g?this._applyFilter(t):this._downsampleBilinear(n[g-1][n[g-1].length-1]),r=this._applyFilter(e),n.push([e,r])}const r=[];for(let g=0;g<this.numOctaves;g++){let t=this._differenceImageBinomial(n[g][0],n[g][1]);r.push(t)}const s=[];for(let g=1;g<this.numOctaves-1;g++){const t=this._buildExtremas(r[g-1],r[g],r[g+1]);s.push(t)}const o=this._applyPrune(s),a=this._computeLocalization(o,r),i=this._computeOrientationHistograms(a,n),u=this._smoothHistograms(i),l=this._computeExtremaAngles(u),c=this._computeExtremaFreak(n,a,l),h=this._computeFreakDescriptors(c),p=a.arraySync(),d=l.arraySync(),f=h.arraySync();this.debugMode&&(e={pyramidImages:n.map((t=>t.map((t=>t.arraySync())))),dogPyramidImages:r.map((t=>t?t.arraySync():null)),extremasResults:s.map((t=>t.arraySync())),extremaAngles:l.arraySync(),prunedExtremas:o,localizedExtremas:a.arraySync()}),n.forEach((t=>t.forEach((t=>t.dispose())))),r.forEach((t=>t&&t.dispose())),s.forEach((t=>t.dispose())),a.dispose(),i.dispose(),u.dispose(),l.dispose(),c.dispose(),h.dispose();const m=[];for(let g=0;g<p.length;g++){if(0==p[g][0])continue;const t=[];for(let a=0;a<f[g].length;a+=4){let e=16777216*f[g][a]+65536*f[g][a+1]+256*f[g][a+2]+f[g][a+3];t.push(e)}const e=p[g][1],n=p[g][2],r=p[g][3]*Math.pow(2,e)+Math.pow(2,e-1)-.5,s=n*Math.pow(2,e)+Math.pow(2,e-1)-.5,o=Math.pow(2,e);m.push({maxima:p[g][0]>0,x:r,y:s,scale:o,angle:d[g],descriptors:t})}return{featurePoints:m,debugExtra:e}}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let r=0;r<t.shape[1];r++)for(let s=r+1;s<t.shape[1];s++)e.push(r),n.push(s);const s=r.tensor(e,[e.length]).cast("int32"),o=r.tensor(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:r.keep(r.stack([s,o],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(o/8);if(!this.kernelCaches.computeFreakDescriptors){const e={variableNames:["freak","p"],outputShape:[t.shape[0],n],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${o}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`};this.kernelCaches.computeFreakDescriptors=[e]}return r.tidy((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")}))}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||r.tidy((()=>{const t=r.tensor(s);this.tensorCaches._computeExtremaFreak={freakPointsT:r.keep(t)}}));const{freakPointsT:o}=this.tensorCaches._computeExtremaFreak,a=[];for(let r=1;r<t.length;r++)a.push(t[r][1]);if(!this.kernelCaches._computeExtremaFreak){const n=[];for(let e=1;e<t.length;e++)n.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)r+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n\t`;r+="}";const o={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],s.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[o]}return r.tidy((()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...a,e,n,o])}))}_computeExtremaAngles(t){if(!this.kernelCaches.computeExtremaAngles){const e={variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=e}return r.tidy((()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])}))}_computeOrientationHistograms(t,e){const n=[];for(let r=1;r<e.length;r++)n.push(e[r][1]);this.tensorCaches.orientationHistograms||r.tidy((()=>{const t=Math.ceil(4.5),e=[];for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++){const t=r*r+n*n;if(t<=20.25){const s=-.05555555555555555*t;let o=.0013888888*(720+s*(720+s*(360+s*(120+s*(30+s*(6+s))))));e.push([n,r,o])}}this.tensorCaches.orientationHistograms={radialPropertiesT:r.keep(r.tensor(e,[e.length,3]))}}));const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const n=[];for(let t=1;t<e.length;t++)n.push("image"+t);let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n\t`;r+="}";const o={variableNames:[...n,"extrema","radial"],outputShape:[t.shape[0],s.shape[0],2],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`},a={variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${s.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[o,a]}return r.tidy((()=>{const[e,r]=this.kernelCaches.computeOrientationHistograms,o=this._compileAndRun(e,[...n,t,s]);return this._compileAndRun(r,[o])}))}_smoothHistograms(t){if(!this.kernelCaches.smoothHistograms){const e={variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"};this.kernelCaches.smoothHistograms=e}return r.tidy((()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t}))}_computeLocalization(t,e){if(!this.kernelCaches.computeLocalization){const n=[];let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)n.push("image"+t),r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n \t`;r+="}";const s={variableNames:[...n,"extrema"],outputShape:[t.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`};this.kernelCaches.computeLocalization=[s]}return r.tidy((()=>{const n=this.kernelCaches.computeLocalization[0],s=r.tensor(t,[t.length,t[0].length],"int32"),o=this._compileAndRun(n,[...e.slice(1),s]).arraySync(),a=[];for(let t=0;t<o.length;t++){a.push([]);for(let e=0;e<o[t].length;e++)a[t].push([])}const i=[];for(let e=0;e<t.length;e++)i[e]=[t[e][0],t[e][1],t[e][2],t[e][3]];for(let t=0;t<i.length;t++){if(0===i[t][0])continue;const e=o[t],n=.5*(e[1][2]-e[1][0]),r=.5*(e[2][1]-e[0][1]),s=e[1][2]+e[1][0]-2*e[1][1],a=e[2][1]+e[0][1]-2*e[1][1],u=.25*(e[0][0]+e[2][2]-e[0][2]-e[2][0]),l=s*a-u*u,c=(a*-n+-u*-r)/l,h=(-u*-n+s*-r)/l,p=i[t][2]+h,d=i[t][3]+c;Math.abs(l)<1e-4||(i[t][2]=p,i[t][3]=d)}return r.tensor(i,[i.length,i[0].length],"float32")}))}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=[];for(let n=0;n<t.length;n++){const r=t[n].shape[0],s=t[n].shape[1],o={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};e.push(o)}this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let r=0;r<100;r++){n.push([]),e.push([]);for(let t=0;t<5;t++)n[r].push([0,0,0,0]),e[r].push(0)}r.tidy((()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let s=0;s<t.length;s++){const o=r[s],a=this._compileAndRun(o,[t[s]]),i=s+1,u=a.arraySync(),l=a.shape[0],c=a.shape[1],h=2*c/10,p=2*l/10;for(let t=0;t<l;t++)for(let r=0;r<c;r++){const s=u[t][r];if(0==s)continue;const o=s%1e3,a=Math.floor(Math.abs(s)/1e3),l=2*r+(2===a||3===a?1:0),c=2*t+(1===a||3===a?1:0),d=Math.floor(l/h),f=10*Math.floor(c/p)+d,m=Math.abs(o);let g=5;for(;g>=1&&m>e[f][g-1];)g-=1;if(g<5){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t][0]=n[f][t-1][0],n[f][t][1]=n[f][t-1][1],n[f][t][2]=n[f][t-1][2],n[f][t][3]=n[f][t-1][3];e[f][g]=m,n[f][g][0]=o,n[f][g][1]=i,n[f][g][2]=c,n[f][g][3]=l}}}}));const s=[];for(let r=0;r<100;r++)for(let t=0;t<5;t++)s.push(n[r][t]);return s}_buildExtremas(t,e,n){const s=e.shape[0],o=e.shape[1],a="w"+o;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[a]){const t={variableNames:["image0","image1","image2"],outputShape:[s,o],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${s-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${o-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`};this.kernelCaches.buildExtremas[a]=t}return r.tidy((()=>{const r=this.kernelCaches.buildExtremas[a];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(r,[t,e,n])}))}_differenceImageBinomial(t,e){return r.tidy((()=>t.sub(e)))}_applyFilter(t){const e=t.shape[0],n=t.shape[1],s="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[s]){const t={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"},r={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.applyFilter[s]=[t,r]}return r.tidy((()=>{const[e,n]=this.kernelCaches.applyFilter[s],r=this._compileAndRun(e,[t]);return this._compileAndRun(n,[r])}))}_upsampleBilinear(t,e){t.shape[0];const n="w"+t.shape[1];if(this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),!this.kernelCaches.upsampleBilinear[n]){const t={variableNames:["p"],outputShape:[e.shape[0],e.shape[1]],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.upsampleBilinear[n]=t}return r.tidy((()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])}))}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],s="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[s]){const t={variableNames:["p"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[s]=t}return r.tidy((()=>{const e=this.kernelCaches.downsampleBilinear[s];return this._compileAndRun(e,[t])}))}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const s=r.backend().runWebGLProgram(t,e,n);return r.engine().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}}},389:function(t){const e=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],n=[];for(let r=0;r<e.length;r++){const t=e[r].sigma;for(let s=0;s<e[r].points.length;s++){const o=e[r].points[s];n.push([t,o[0],o[1]])}}t.exports={FREAKPOINTS:n}},6203:function(t){const e=(t,e,n,r)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,n,r,s)=>{const{x:o,y:a,z:i}=e(t,n,r);return{x:o/i,y:a/i}}}},5690:function(t,e,n){const{resize:r}=n(4994);t.exports={buildImageList:t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const s=[];for(let o=0;o<e.length;o++)t.width,e[o],t.height,e[o],s.push(Object.assign(r({image:t,ratio:e[o]}),{scale:e[o]}));return s},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),n=[],s=[];n.push(256/e),n.push(128/e);for(let o=0;o<n.length;o++)s.push(Object.assign(r({image:t,ratio:n[o]}),{scale:n[o]}));return s}}},565:function(t,e,n){const{Controller:r}=n(8608),{Compiler:s}=n(479),{UI:o}=n(9856),a={Controller:r,Compiler:s,UI:o};window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE=a,t.exports=a},6649:function(t,e,n){const r=n(5512);t.exports={InputLoader:class{constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const s=r.backend();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(t){return r.tidy((()=>{let e=r.browser.fromPixels(t);return e=e.mean(2),e}))}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=r.backend();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===r.env().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const s=r.backend().runWebGLProgram(t,e,n);return r.engine().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}}},4183:function(t){t.exports={compute:t=>{const{v1:e,v2:n}=t;let r=0;for(let a=0;a<e.length;a++){let t=(e[a]^n[a])>>>0;r+=(o=void 0,((o=((o=((o=((o=(s=t)-(s>>1&1431655765))>>2&858993459)+(858993459&o))>>4)+o&252645135)>>8)+o&16711935)>>16)+o&65535)}var s,o;return r}}},5765:function(t,e,n){const{compute:r}=n(4183),{createRandomizer:s}=n(603),o=t=>{const{points:e,pointIndexes:n,centerPointIndex:s,randomizer:a}=t;let i=!1;(n.length<=8||n.length<=16)&&(i=!0);const u={};if(!i){const t=(t=>{const{points:e,pointIndexes:n,randomizer:s}=t,o=[];for(let r=0;r<n.length;r++)o.push(r);let a=Number.MAX_SAFE_INTEGER,i=-1;const u=[];for(let l=0;l<128;l++){s.arrayShuffle({arr:o,sampleSize:8});let t=0;const c=[];for(let s=0;s<n.length;s++){let a=Number.MAX_SAFE_INTEGER;for(let t=0;t<8;t++){const i=n[o[t]],u=r({v1:e[n[s]].descriptors,v2:e[i].descriptors});u<a&&(c[s]=o[t],a=u)}t+=a}u.push(c),t<a&&(a=t,i=l)}return u[i]})({points:e,pointIndexes:n,randomizer:a});for(let e=0;e<t.length;e++)void 0===u[n[t[e]]]&&(u[n[t[e]]]=[]),u[n[t[e]]].push(n[e])}1===Object.keys(u).length&&(i=!0);const l={centerPointIndex:s};if(i){l.leaf=!0,l.pointIndexes=[];for(let t=0;t<n.length;t++)l.pointIndexes.push(n[t]);return l}return l.leaf=!1,l.children=[],Object.keys(u).forEach((t=>{l.children.push(o({points:e,pointIndexes:u[t],centerPointIndex:t,randomizer:a}))})),l};t.exports={build:({points:t})=>{const e=[];for(let r=0;r<t.length;r++)e.push(r);const n=s();return{rootNode:o({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}}}},7758:function(t,e,n){const r=n(5512),{buildModelViewProjectionTransform:s,computeScreenCoordiate:o}=n(6203);t.exports={Tracker:class{constructor(t,e,n,r,s,o=!1){this.markerDimensions=t,this.trackingDataList=e,this.projectionTransform=n,this.debugMode=o,this.trackingKeyframeList=[];for(let i=0;i<e.length;i++)this.trackingKeyframeList.push(e[i][1]);let a=0;for(let i=0;i<this.trackingKeyframeList.length;i++)a=Math.max(a,this.trackingKeyframeList[i].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let i=0;i<this.trackingKeyframeList.length;i++){const{featurePoints:t,imagePixels:e,imageProperties:n}=this._prebuild(this.trackingKeyframeList[i],a);this.featurePointsListT[i]=t,this.imagePixelsListT[i]=e,this.imagePropertiesListT[i]=n}this.kernelCaches={}}dummyRun(t){let e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}track(t,e,n){let r={};const a=s(this.projectionTransform,e),i=this._buildAdjustedModelViewTransform(a),u=(this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height,this.featurePointsListT[n]),l=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(i,t,n),{matchingPointsT:p,simT:d}=this._computeMatching(u,l,c,h),f=p.arraySync(),m=d.arraySync(),g=this.trackingKeyframeList[n],y=[],b=[],x=[];for(let s=0;s<f.length;s++)if(m[s]>.8&&s<g.points.length){x.push(s);const t=o(a,f[s][0],f[s][1]);b.push(t),y.push({x:g.points[s].x/g.scale,y:g.points[s].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:p.arraySync(),goodTrack:x,trackedPoints:b}),i.dispose(),h.dispose(),p.dispose(),d.dispose(),{worldCoords:y,screenCoords:b,debugExtra:r}}_computeMatching(t,e,n,s){const o=s.shape[0],a=s.shape[1],i=t.shape[0];if(!this.kernelCaches.computeMatching){const t={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[i,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${a} - 6) || sy < 6 || sy >= (${o} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},e={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[i,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[i],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[t,e,n]}return r.tidy((()=>{const r=this.kernelCaches.computeMatching,o=this._compileAndRun(r[0],[t,e,n,s]),a=o.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[t,n,a]),simT:this._compileAndRun(r[2],[o,a])}}))}_computeProjection(t,e,n){const s=this.trackingKeyframeList[n].width,o=this.trackingKeyframeList[n].height,a=this.trackingKeyframeList[n].scale,i=s+"-"+o+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const t={variableNames:["M","pixel"],outputShape:[o,s],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${a});\n\t      float x = float(coords[1]) / float(${a});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=t}return r.tidy((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[t,e])}))}_buildAdjustedModelViewTransform(t){return r.tidy((()=>{let e=[];for(let n=0;n<t.length;n++){e.push([]);for(let r=0;r<t[n].length;r++)e[n].push(t[n][r]/1e3)}return r.tensor(e,[3,4])}))}_prebuild(t,e){return r.tidy((()=>{const n=t.scale,s=[];for(let r=0;r<e;r++)r<t.points.length?s.push([t.points[r].x/n,t.points[r].y/n]):s.push([-1,-1]);const o=r.tensor(t.data,[t.width*t.height]),a=r.tensor([t.width,t.height,t.scale],[3]);return{featurePoints:r.tensor(s,[s.length,2],"float32"),imagePixels:o,imageProperties:a}}))}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}}},4994:function(t){t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:n,height:r}=t,s=Math.floor(n/2),o=Math.floor(r/2),a=new Float32Array(s*o),i=[0,1,n,n+1];for(let u=0;u<o;u++)for(let t=0;t<s;t++){let r=2*u*n+2*t,o=0;for(let t=0;t<i.length;t++)o+=e[r+i[t]];o*=.25,a[u*s+t]=o}return{data:a,width:s,height:o}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:n})=>{const{width:r,height:s,data:o}=t,a=2*t.width+(e?1:0),i=2*t.height+(n?1:0),u=new Float32Array(a*i);for(let l=0;l<a;l++){const t=.5*l-.25;let e=Math.floor(t),n=Math.ceil(t);e<0&&(e=0),n>=r&&(n=r-1);for(let c=0;c<i;c++){const i=.5*c-.25;let h=Math.floor(i),p=Math.ceil(i);h<0&&(h=0),p>=s&&(p=s-1);const d=(n-t)*(p-i)*o[h*r+e]+(n-t)*(i-h)*o[p*r+e]+(t-e)*(p-i)*o[h*r+n]+(t-e)*(i-h)*o[p*r+n];u[c*a+l]=d}}return{data:u,width:a,height:i}},resize:({image:t,ratio:e})=>{const n=Math.round(t.width*e),r=Math.round(t.height*e),s=new Uint8Array(n*r);for(let o=0;o<n;o++){let a=Math.round(1*o/e),i=Math.round(1*(o+1)/e)-1;i>=t.width&&(i=t.width-1);for(let u=0;u<r;u++){let r=Math.round(1*u/e),l=Math.round(1*(u+1)/e)-1;l>=t.height&&(l=t.height-1);let c=0,h=0;for(let e=a;e<=i;e++)for(let n=r;n<=l;n++)c+=1*t.data[n*t.width+e],h+=1;s[u*n+o]=Math.floor(c/h)}}return{data:s,width:n,height:r}}}},603:function(t){t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let r=0;r<n;r++){this.seed=(214013*this.seed+2531011)%(1<<31);let t=this.seed>>16&32767;t%=e.length;let n=e[r];e[r]=e[t],e[t]=n}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}},4587:function(t){const e=(t,e)=>{const n=2*Math.PI*e*t;return n/(n+1)},n=(t,e,n)=>t*e+(1-t)*n;t.exports={OneEuroFilter:class{constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,r){if(!this.initialized)return this.initialized=!0,this.xPrev=r,this.dxPrev=r.map((()=>0)),this.tPrev=t,r;const{xPrev:s,tPrev:o,dxPrev:a}=this,i=t-o,u=e(i,this.dCutOff),l=[],c=[],h=[];for(let p=0;p<r.length;p++){l[p]=(r[p]-s[p])/i,c[p]=n(u,l[p],a[p]);const t=this.minCutOff+this.beta*Math.abs(c[p]),o=e(i,t);h[p]=n(o,r[p],s[p])}return this.xPrev=h,this.dxPrev=c,this.tPrev=t,h}}}},9856:function(t,e,n){n(4412);const r=n(9894).Z,s=n(7676).Z,o=n(2810).Z;t.exports={UI:class{constructor({uiLoading:t,uiScanning:e,uiError:n}){"yes"===t?this.loadingModal=this._loadHTML(r):"no"!==t&&(this.loadingModal=document.querySelector(t)),"yes"===n?this.compatibilityModal=this._loadHTML(s):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===e?this.scanningMask=this._loadHTML(o):"no"!==e&&(this.scanningMask=document.querySelector(e)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}}},e={};function n(r){var s=e[r];if(void 0!==s)return s.exports;var o=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,{a:e}),e},n.d=function(t,e){for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t},n.p="",n.nc=void 0,n(565)}()},2483:function(t,e,n){"use strict";n.d(e,{p7:function(){return ne},r5:function(){return B}});n(7658),n(541);var r=n(3396),s=n(4870);
/*!
  * vue-router v4.1.5
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */
const o="undefined"!==typeof window;function a(t){return t.__esModule||"Module"===t[Symbol.toStringTag]}const i=Object.assign;function u(t,e){const n={};for(const r in e){const s=e[r];n[r]=c(s)?s.map(t):t(s)}return n}const l=()=>{},c=Array.isArray;const h=/\/$/,p=t=>t.replace(h,"");function d(t,e,n="/"){let r,s={},o="",a="";const i=e.indexOf("#");let u=e.indexOf("?");return i<u&&i>=0&&(u=-1),u>-1&&(r=e.slice(0,u),o=e.slice(u+1,i>-1?i:e.length),s=t(o)),i>-1&&(r=r||e.slice(0,i),a=e.slice(i,e.length)),r=v(null!=r?r:e,n),{fullPath:r+(o&&"?")+o+a,path:r,query:s,hash:a}}function f(t,e){const n=e.query?t(e.query):"";return e.path+(n&&"?")+n+(e.hash||"")}function m(t,e){return e&&t.toLowerCase().startsWith(e.toLowerCase())?t.slice(e.length)||"/":t}function g(t,e,n){const r=e.matched.length-1,s=n.matched.length-1;return r>-1&&r===s&&y(e.matched[r],n.matched[s])&&b(e.params,n.params)&&t(e.query)===t(n.query)&&e.hash===n.hash}function y(t,e){return(t.aliasOf||t)===(e.aliasOf||e)}function b(t,e){if(Object.keys(t).length!==Object.keys(e).length)return!1;for(const n in t)if(!x(t[n],e[n]))return!1;return!0}function x(t,e){return c(t)?w(t,e):c(e)?w(e,t):t===e}function w(t,e){return c(e)?t.length===e.length&&t.every(((t,n)=>t===e[n])):1===t.length&&t[0]===e}function v(t,e){if(t.startsWith("/"))return t;if(!t)return e;const n=e.split("/"),r=t.split("/");let s,o,a=n.length-1;for(s=0;s<r.length;s++)if(o=r[s],"."!==o){if(".."!==o)break;a>1&&a--}return n.slice(0,a).join("/")+"/"+r.slice(s-(s===r.length?1:0)).join("/")}var k,I;(function(t){t["pop"]="pop",t["push"]="push"})(k||(k={})),function(t){t["back"]="back",t["forward"]="forward",t["unknown"]=""}(I||(I={}));function S(t){if(!t)if(o){const e=document.querySelector("base");t=e&&e.getAttribute("href")||"/",t=t.replace(/^\w+:\/\/[^\/]+/,"")}else t="/";return"/"!==t[0]&&"#"!==t[0]&&(t="/"+t),p(t)}const N=/^[^#]+#/;function T(t,e){return t.replace(N,"#")+e}function C(t,e){const n=document.documentElement.getBoundingClientRect(),r=t.getBoundingClientRect();return{behavior:e.behavior,left:r.left-n.left-(e.left||0),top:r.top-n.top-(e.top||0)}}const E=()=>({left:window.pageXOffset,top:window.pageYOffset});function $(t){let e;if("el"in t){const n=t.el,r="string"===typeof n&&n.startsWith("#");0;const s="string"===typeof n?r?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!s)return;e=C(s,t)}else e=t;"scrollBehavior"in document.documentElement.style?window.scrollTo(e):window.scrollTo(null!=e.left?e.left:window.pageXOffset,null!=e.top?e.top:window.pageYOffset)}function R(t,e){const n=history.state?history.state.position-e:-1;return n+t}const A=new Map;function _(t,e){A.set(t,e)}function M(t){const e=A.get(t);return A.delete(t),e}let F=()=>location.protocol+"//"+location.host;function D(t,e){const{pathname:n,search:r,hash:s}=e,o=t.indexOf("#");if(o>-1){let e=s.includes(t.slice(o))?t.slice(o).length:1,n=s.slice(e);return"/"!==n[0]&&(n="/"+n),m(n,"")}const a=m(n,t);return a+r+s}function O(t,e,n,r){let s=[],o=[],a=null;const u=({state:o})=>{const i=D(t,location),u=n.value,l=e.value;let c=0;if(o){if(n.value=i,e.value=o,a&&a===u)return void(a=null);c=l?o.position-l.position:0}else r(i);s.forEach((t=>{t(n.value,u,{delta:c,type:k.pop,direction:c?c>0?I.forward:I.back:I.unknown})}))};function l(){a=n.value}function c(t){s.push(t);const e=()=>{const e=s.indexOf(t);e>-1&&s.splice(e,1)};return o.push(e),e}function h(){const{history:t}=window;t.state&&t.replaceState(i({},t.state,{scroll:E()}),"")}function p(){for(const t of o)t();o=[],window.removeEventListener("popstate",u),window.removeEventListener("beforeunload",h)}return window.addEventListener("popstate",u),window.addEventListener("beforeunload",h),{pauseListeners:l,listen:c,destroy:p}}function L(t,e,n,r=!1,s=!1){return{back:t,current:e,forward:n,replaced:r,position:window.history.length,scroll:s?E():null}}function P(t){const{history:e,location:n}=window,r={value:D(t,n)},s={value:e.state};function o(r,o,a){const i=t.indexOf("#"),u=i>-1?(n.host&&document.querySelector("base")?t:t.slice(i))+r:F()+t+r;try{e[a?"replaceState":"pushState"](o,"",u),s.value=o}catch(l){console.error(l),n[a?"replace":"assign"](u)}}function a(t,n){const a=i({},e.state,L(s.value.back,t,s.value.forward,!0),n,{position:s.value.position});o(t,a,!0),r.value=t}function u(t,n){const a=i({},s.value,e.state,{forward:t,scroll:E()});o(a.current,a,!0);const u=i({},L(r.value,t,null),{position:a.position+1},n);o(t,u,!1),r.value=t}return s.value||o(r.value,{back:null,current:r.value,forward:null,position:e.length-1,replaced:!0,scroll:null},!0),{location:r,state:s,push:u,replace:a}}function z(t){t=S(t);const e=P(t),n=O(t,e.state,e.location,e.replace);function r(t,e=!0){e||n.pauseListeners(),history.go(t)}const s=i({location:"",base:t,go:r,createHref:T.bind(null,t)},e,n);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>e.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>e.state.value}),s}function B(t){return t=location.host?t||location.pathname+location.search:"",t.includes("#")||(t+="#"),z(t)}function U(t){return"string"===typeof t||t&&"object"===typeof t}function V(t){return"string"===typeof t||"symbol"===typeof t}const W={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},G=Symbol("");var H;(function(t){t[t["aborted"]=4]="aborted",t[t["cancelled"]=8]="cancelled",t[t["duplicated"]=16]="duplicated"})(H||(H={}));function j(t,e){return i(new Error,{type:t,[G]:!0},e)}function q(t,e){return t instanceof Error&&G in t&&(null==e||!!(t.type&e))}const K="[^/]+?",X={sensitive:!1,strict:!1,start:!0,end:!0},Y=/[.+*?^${}()[\]/\\]/g;function J(t,e){const n=i({},X,e),r=[];let s=n.start?"^":"";const o=[];for(const i of t){const t=i.length?[]:[90];n.strict&&!i.length&&(s+="/");for(let e=0;e<i.length;e++){const r=i[e];let a=40+(n.sensitive?.25:0);if(0===r.type)e||(s+="/"),s+=r.value.replace(Y,"\\$&"),a+=40;else if(1===r.type){const{value:t,repeatable:n,optional:u,regexp:l}=r;o.push({name:t,repeatable:n,optional:u});const c=l||K;if(c!==K){a+=10;try{new RegExp(`(${c})`)}catch(h){throw new Error(`Invalid custom RegExp for param "${t}" (${c}): `+h.message)}}let p=n?`((?:${c})(?:/(?:${c}))*)`:`(${c})`;e||(p=u&&i.length<2?`(?:/${p})`:"/"+p),u&&(p+="?"),s+=p,a+=20,u&&(a+=-8),n&&(a+=-20),".*"===c&&(a+=-50)}t.push(a)}r.push(t)}if(n.strict&&n.end){const t=r.length-1;r[t][r[t].length-1]+=.7000000000000001}n.strict||(s+="/?"),n.end?s+="$":n.strict&&(s+="(?:/|$)");const a=new RegExp(s,n.sensitive?"":"i");function u(t){const e=t.match(a),n={};if(!e)return null;for(let r=1;r<e.length;r++){const t=e[r]||"",s=o[r-1];n[s.name]=t&&s.repeatable?t.split("/"):t}return n}function l(e){let n="",r=!1;for(const s of t){r&&n.endsWith("/")||(n+="/"),r=!1;for(const t of s)if(0===t.type)n+=t.value;else if(1===t.type){const{value:o,repeatable:a,optional:i}=t,u=o in e?e[o]:"";if(c(u)&&!a)throw new Error(`Provided param "${o}" is an array but it is not repeatable (* or + modifiers)`);const l=c(u)?u.join("/"):u;if(!l){if(!i)throw new Error(`Missing required param "${o}"`);s.length<2&&(n.endsWith("/")?n=n.slice(0,-1):r=!0)}n+=l}}return n||"/"}return{re:a,score:r,keys:o,parse:u,stringify:l}}function Z(t,e){let n=0;while(n<t.length&&n<e.length){const r=e[n]-t[n];if(r)return r;n++}return t.length<e.length?1===t.length&&80===t[0]?-1:1:t.length>e.length?1===e.length&&80===e[0]?1:-1:0}function Q(t,e){let n=0;const r=t.score,s=e.score;while(n<r.length&&n<s.length){const t=Z(r[n],s[n]);if(t)return t;n++}if(1===Math.abs(s.length-r.length)){if(tt(r))return 1;if(tt(s))return-1}return s.length-r.length}function tt(t){const e=t[t.length-1];return t.length>0&&e[e.length-1]<0}const et={type:0,value:""},nt=/[a-zA-Z0-9_]/;function rt(t){if(!t)return[[]];if("/"===t)return[[et]];if(!t.startsWith("/"))throw new Error(`Invalid path "${t}"`);function e(t){throw new Error(`ERR (${n})/"${l}": ${t}`)}let n=0,r=n;const s=[];let o;function a(){o&&s.push(o),o=[]}let i,u=0,l="",c="";function h(){l&&(0===n?o.push({type:0,value:l}):1===n||2===n||3===n?(o.length>1&&("*"===i||"+"===i)&&e(`A repeatable param (${l}) must be alone in its segment. eg: '/:ids+.`),o.push({type:1,value:l,regexp:c,repeatable:"*"===i||"+"===i,optional:"*"===i||"?"===i})):e("Invalid state to consume buffer"),l="")}function p(){l+=i}while(u<t.length)if(i=t[u++],"\\"!==i||2===n)switch(n){case 0:"/"===i?(l&&h(),a()):":"===i?(h(),n=1):p();break;case 4:p(),n=r;break;case 1:"("===i?n=2:nt.test(i)?p():(h(),n=0,"*"!==i&&"?"!==i&&"+"!==i&&u--);break;case 2:")"===i?"\\"==c[c.length-1]?c=c.slice(0,-1)+i:n=3:c+=i;break;case 3:h(),n=0,"*"!==i&&"?"!==i&&"+"!==i&&u--,c="";break;default:e("Unknown state");break}else r=n,n=4;return 2===n&&e(`Unfinished custom RegExp for param "${l}"`),h(),a(),s}function st(t,e,n){const r=J(rt(t.path),n);const s=i(r,{record:t,parent:e,children:[],alias:[]});return e&&!s.record.aliasOf===!e.record.aliasOf&&e.children.push(s),s}function ot(t,e){const n=[],r=new Map;function s(t){return r.get(t)}function o(t,n,r){const s=!r,u=it(t);u.aliasOf=r&&r.record;const h=ht(e,t),p=[u];if("alias"in t){const e="string"===typeof t.alias?[t.alias]:t.alias;for(const t of e)p.push(i({},u,{components:r?r.record.components:u.components,path:t,aliasOf:r?r.record:u}))}let d,f;for(const e of p){const{path:i}=e;if(n&&"/"!==i[0]){const t=n.record.path,r="/"===t[t.length-1]?"":"/";e.path=n.record.path+(i&&r+i)}if(d=st(e,n,h),r?r.alias.push(d):(f=f||d,f!==d&&f.alias.push(d),s&&t.name&&!lt(d)&&a(t.name)),u.children){const t=u.children;for(let e=0;e<t.length;e++)o(t[e],d,r&&r.children[e])}r=r||d,c(d)}return f?()=>{a(f)}:l}function a(t){if(V(t)){const e=r.get(t);e&&(r.delete(t),n.splice(n.indexOf(e),1),e.children.forEach(a),e.alias.forEach(a))}else{const e=n.indexOf(t);e>-1&&(n.splice(e,1),t.record.name&&r.delete(t.record.name),t.children.forEach(a),t.alias.forEach(a))}}function u(){return n}function c(t){let e=0;while(e<n.length&&Q(t,n[e])>=0&&(t.record.path!==n[e].record.path||!pt(t,n[e])))e++;n.splice(e,0,t),t.record.name&&!lt(t)&&r.set(t.record.name,t)}function h(t,e){let s,o,a,u={};if("name"in t&&t.name){if(s=r.get(t.name),!s)throw j(1,{location:t});0,a=s.record.name,u=i(at(e.params,s.keys.filter((t=>!t.optional)).map((t=>t.name))),t.params&&at(t.params,s.keys.map((t=>t.name)))),o=s.stringify(u)}else if("path"in t)o=t.path,s=n.find((t=>t.re.test(o))),s&&(u=s.parse(o),a=s.record.name);else{if(s=e.name?r.get(e.name):n.find((t=>t.re.test(e.path))),!s)throw j(1,{location:t,currentLocation:e});a=s.record.name,u=i({},e.params,t.params),o=s.stringify(u)}const l=[];let c=s;while(c)l.unshift(c.record),c=c.parent;return{name:a,path:o,params:u,matched:l,meta:ct(l)}}return e=ht({strict:!1,end:!0,sensitive:!1},e),t.forEach((t=>o(t))),{addRoute:o,resolve:h,removeRoute:a,getRoutes:u,getRecordMatcher:s}}function at(t,e){const n={};for(const r of e)r in t&&(n[r]=t[r]);return n}function it(t){return{path:t.path,redirect:t.redirect,name:t.name,meta:t.meta||{},aliasOf:void 0,beforeEnter:t.beforeEnter,props:ut(t),children:t.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in t?t.components||null:t.component&&{default:t.component}}}function ut(t){const e={},n=t.props||!1;if("component"in t)e.default=n;else for(const r in t.components)e[r]="boolean"===typeof n?n:n[r];return e}function lt(t){while(t){if(t.record.aliasOf)return!0;t=t.parent}return!1}function ct(t){return t.reduce(((t,e)=>i(t,e.meta)),{})}function ht(t,e){const n={};for(const r in t)n[r]=r in e?e[r]:t[r];return n}function pt(t,e){return e.children.some((e=>e===t||pt(t,e)))}const dt=/#/g,ft=/&/g,mt=/\//g,gt=/=/g,yt=/\?/g,bt=/\+/g,xt=/%5B/g,wt=/%5D/g,vt=/%5E/g,kt=/%60/g,It=/%7B/g,St=/%7C/g,Nt=/%7D/g,Tt=/%20/g;function Ct(t){return encodeURI(""+t).replace(St,"|").replace(xt,"[").replace(wt,"]")}function Et(t){return Ct(t).replace(It,"{").replace(Nt,"}").replace(vt,"^")}function $t(t){return Ct(t).replace(bt,"%2B").replace(Tt,"+").replace(dt,"%23").replace(ft,"%26").replace(kt,"`").replace(It,"{").replace(Nt,"}").replace(vt,"^")}function Rt(t){return $t(t).replace(gt,"%3D")}function At(t){return Ct(t).replace(dt,"%23").replace(yt,"%3F")}function _t(t){return null==t?"":At(t).replace(mt,"%2F")}function Mt(t){try{return decodeURIComponent(""+t)}catch(e){}return""+t}function Ft(t){const e={};if(""===t||"?"===t)return e;const n="?"===t[0],r=(n?t.slice(1):t).split("&");for(let s=0;s<r.length;++s){const t=r[s].replace(bt," "),n=t.indexOf("="),o=Mt(n<0?t:t.slice(0,n)),a=n<0?null:Mt(t.slice(n+1));if(o in e){let t=e[o];c(t)||(t=e[o]=[t]),t.push(a)}else e[o]=a}return e}function Dt(t){let e="";for(let n in t){const r=t[n];if(n=Rt(n),null==r){void 0!==r&&(e+=(e.length?"&":"")+n);continue}const s=c(r)?r.map((t=>t&&$t(t))):[r&&$t(r)];s.forEach((t=>{void 0!==t&&(e+=(e.length?"&":"")+n,null!=t&&(e+="="+t))}))}return e}function Ot(t){const e={};for(const n in t){const r=t[n];void 0!==r&&(e[n]=c(r)?r.map((t=>null==t?null:""+t)):null==r?r:""+r)}return e}const Lt=Symbol(""),Pt=Symbol(""),zt=Symbol(""),Bt=Symbol(""),Ut=Symbol("");function Vt(){let t=[];function e(e){return t.push(e),()=>{const n=t.indexOf(e);n>-1&&t.splice(n,1)}}function n(){t=[]}return{add:e,list:()=>t,reset:n}}function Wt(t,e,n,r,s){const o=r&&(r.enterCallbacks[s]=r.enterCallbacks[s]||[]);return()=>new Promise(((a,i)=>{const u=t=>{!1===t?i(j(4,{from:n,to:e})):t instanceof Error?i(t):U(t)?i(j(2,{from:e,to:t})):(o&&r.enterCallbacks[s]===o&&"function"===typeof t&&o.push(t),a())},l=t.call(r&&r.instances[s],e,n,u);let c=Promise.resolve(l);t.length<3&&(c=c.then(u)),c.catch((t=>i(t)))}))}function Gt(t,e,n,r){const s=[];for(const o of t){0;for(const t in o.components){let i=o.components[t];if("beforeRouteEnter"===e||o.instances[t])if(Ht(i)){const a=i.__vccOpts||i,u=a[e];u&&s.push(Wt(u,n,r,o,t))}else{let u=i();0,s.push((()=>u.then((s=>{if(!s)return Promise.reject(new Error(`Couldn't resolve component "${t}" at "${o.path}"`));const i=a(s)?s.default:s;o.components[t]=i;const u=i.__vccOpts||i,l=u[e];return l&&Wt(l,n,r,o,t)()}))))}}}return s}function Ht(t){return"object"===typeof t||"displayName"in t||"props"in t||"__vccOpts"in t}function jt(t){const e=(0,r.f3)(zt),n=(0,r.f3)(Bt),o=(0,r.Fl)((()=>e.resolve((0,s.SU)(t.to)))),a=(0,r.Fl)((()=>{const{matched:t}=o.value,{length:e}=t,r=t[e-1],s=n.matched;if(!r||!s.length)return-1;const a=s.findIndex(y.bind(null,r));if(a>-1)return a;const i=Jt(t[e-2]);return e>1&&Jt(r)===i&&s[s.length-1].path!==i?s.findIndex(y.bind(null,t[e-2])):a})),i=(0,r.Fl)((()=>a.value>-1&&Yt(n.params,o.value.params))),u=(0,r.Fl)((()=>a.value>-1&&a.value===n.matched.length-1&&b(n.params,o.value.params)));function c(n={}){return Xt(n)?e[(0,s.SU)(t.replace)?"replace":"push"]((0,s.SU)(t.to)).catch(l):Promise.resolve()}return{route:o,href:(0,r.Fl)((()=>o.value.href)),isActive:i,isExactActive:u,navigate:c}}const qt=(0,r.aZ)({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:jt,setup(t,{slots:e}){const n=(0,s.qj)(jt(t)),{options:o}=(0,r.f3)(zt),a=(0,r.Fl)((()=>({[Zt(t.activeClass,o.linkActiveClass,"router-link-active")]:n.isActive,[Zt(t.exactActiveClass,o.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive})));return()=>{const s=e.default&&e.default(n);return t.custom?s:(0,r.h)("a",{"aria-current":n.isExactActive?t.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:a.value},s)}}}),Kt=qt;function Xt(t){if(!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)&&!t.defaultPrevented&&(void 0===t.button||0===t.button)){if(t.currentTarget&&t.currentTarget.getAttribute){const e=t.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return t.preventDefault&&t.preventDefault(),!0}}function Yt(t,e){for(const n in e){const r=e[n],s=t[n];if("string"===typeof r){if(r!==s)return!1}else if(!c(s)||s.length!==r.length||r.some(((t,e)=>t!==s[e])))return!1}return!0}function Jt(t){return t?t.aliasOf?t.aliasOf.path:t.path:""}const Zt=(t,e,n)=>null!=t?t:null!=e?e:n,Qt=(0,r.aZ)({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(t,{attrs:e,slots:n}){const o=(0,r.f3)(Ut),a=(0,r.Fl)((()=>t.route||o.value)),u=(0,r.f3)(Pt,0),l=(0,r.Fl)((()=>{let t=(0,s.SU)(u);const{matched:e}=a.value;let n;while((n=e[t])&&!n.components)t++;return t})),c=(0,r.Fl)((()=>a.value.matched[l.value]));(0,r.JJ)(Pt,(0,r.Fl)((()=>l.value+1))),(0,r.JJ)(Lt,c),(0,r.JJ)(Ut,a);const h=(0,s.iH)();return(0,r.YP)((()=>[h.value,c.value,t.name]),(([t,e,n],[r,s,o])=>{e&&(e.instances[n]=t,s&&s!==e&&t&&t===r&&(e.leaveGuards.size||(e.leaveGuards=s.leaveGuards),e.updateGuards.size||(e.updateGuards=s.updateGuards))),!t||!e||s&&y(e,s)&&r||(e.enterCallbacks[n]||[]).forEach((e=>e(t)))}),{flush:"post"}),()=>{const s=a.value,o=t.name,u=c.value,l=u&&u.components[o];if(!l)return te(n.default,{Component:l,route:s});const p=u.props[o],d=p?!0===p?s.params:"function"===typeof p?p(s):p:null,f=t=>{t.component.isUnmounted&&(u.instances[o]=null)},m=(0,r.h)(l,i({},d,e,{onVnodeUnmounted:f,ref:h}));return te(n.default,{Component:m,route:s})||m}}});function te(t,e){if(!t)return null;const n=t(e);return 1===n.length?n[0]:n}const ee=Qt;function ne(t){const e=ot(t.routes,t),n=t.parseQuery||Ft,a=t.stringifyQuery||Dt,h=t.history;const p=Vt(),m=Vt(),y=Vt(),b=(0,s.XI)(W);let x=W;o&&t.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const w=u.bind(null,(t=>""+t)),v=u.bind(null,_t),I=u.bind(null,Mt);function S(t,n){let r,s;return V(t)?(r=e.getRecordMatcher(t),s=n):s=t,e.addRoute(s,r)}function N(t){const n=e.getRecordMatcher(t);n&&e.removeRoute(n)}function T(){return e.getRoutes().map((t=>t.record))}function C(t){return!!e.getRecordMatcher(t)}function A(t,r){if(r=i({},r||b.value),"string"===typeof t){const s=d(n,t,r.path),o=e.resolve({path:s.path},r),a=h.createHref(s.fullPath);return i(s,o,{params:I(o.params),hash:Mt(s.hash),redirectedFrom:void 0,href:a})}let s;if("path"in t)s=i({},t,{path:d(n,t.path,r.path).path});else{const e=i({},t.params);for(const t in e)null==e[t]&&delete e[t];s=i({},t,{params:v(t.params)}),r.params=v(r.params)}const o=e.resolve(s,r),u=t.hash||"";o.params=w(I(o.params));const l=f(a,i({},t,{hash:Et(u),path:o.path})),c=h.createHref(l);return i({fullPath:l,hash:u,query:a===Dt?Ot(t.query):t.query||{}},o,{redirectedFrom:void 0,href:c})}function F(t){return"string"===typeof t?d(n,t,b.value.path):i({},t)}function D(t,e){if(x!==t)return j(8,{from:e,to:t})}function O(t){return z(t)}function L(t){return O(i(F(t),{replace:!0}))}function P(t){const e=t.matched[t.matched.length-1];if(e&&e.redirect){const{redirect:n}=e;let r="function"===typeof n?n(t):n;return"string"===typeof r&&(r=r.includes("?")||r.includes("#")?r=F(r):{path:r},r.params={}),i({query:t.query,hash:t.hash,params:"path"in r?{}:t.params},r)}}function z(t,e){const n=x=A(t),r=b.value,s=t.state,o=t.force,u=!0===t.replace,l=P(n);if(l)return z(i(F(l),{state:"object"===typeof l?i({},s,l.state):s,force:o,replace:u}),e||n);const c=n;let h;return c.redirectedFrom=e,!o&&g(a,r,n)&&(h=j(16,{to:c,from:r}),nt(r,r,!0,!1)),(h?Promise.resolve(h):U(c,r)).catch((t=>q(t)?q(t,2)?t:et(t):Q(t,c,r))).then((t=>{if(t){if(q(t,2))return z(i({replace:u},F(t.to),{state:"object"===typeof t.to?i({},s,t.to.state):s,force:o}),e||c)}else t=H(c,r,!0,u,s);return G(c,r,t),t}))}function B(t,e){const n=D(t,e);return n?Promise.reject(n):Promise.resolve()}function U(t,e){let n;const[r,s,o]=se(t,e);n=Gt(r.reverse(),"beforeRouteLeave",t,e);for(const i of r)i.leaveGuards.forEach((r=>{n.push(Wt(r,t,e))}));const a=B.bind(null,t,e);return n.push(a),re(n).then((()=>{n=[];for(const r of p.list())n.push(Wt(r,t,e));return n.push(a),re(n)})).then((()=>{n=Gt(s,"beforeRouteUpdate",t,e);for(const r of s)r.updateGuards.forEach((r=>{n.push(Wt(r,t,e))}));return n.push(a),re(n)})).then((()=>{n=[];for(const r of t.matched)if(r.beforeEnter&&!e.matched.includes(r))if(c(r.beforeEnter))for(const s of r.beforeEnter)n.push(Wt(s,t,e));else n.push(Wt(r.beforeEnter,t,e));return n.push(a),re(n)})).then((()=>(t.matched.forEach((t=>t.enterCallbacks={})),n=Gt(o,"beforeRouteEnter",t,e),n.push(a),re(n)))).then((()=>{n=[];for(const r of m.list())n.push(Wt(r,t,e));return n.push(a),re(n)})).catch((t=>q(t,8)?t:Promise.reject(t)))}function G(t,e,n){for(const r of y.list())r(t,e,n)}function H(t,e,n,r,s){const a=D(t,e);if(a)return a;const u=e===W,l=o?history.state:{};n&&(r||u?h.replace(t.fullPath,i({scroll:u&&l&&l.scroll},s)):h.push(t.fullPath,s)),b.value=t,nt(t,e,n,u),et()}let K;function X(){K||(K=h.listen(((t,e,n)=>{if(!it.listening)return;const r=A(t),s=P(r);if(s)return void z(i(s,{replace:!0}),r).catch(l);x=r;const a=b.value;o&&_(R(a.fullPath,n.delta),E()),U(r,a).catch((t=>q(t,12)?t:q(t,2)?(z(t.to,r).then((t=>{q(t,20)&&!n.delta&&n.type===k.pop&&h.go(-1,!1)})).catch(l),Promise.reject()):(n.delta&&h.go(-n.delta,!1),Q(t,r,a)))).then((t=>{t=t||H(r,a,!1),t&&(n.delta&&!q(t,8)?h.go(-n.delta,!1):n.type===k.pop&&q(t,20)&&h.go(-1,!1)),G(r,a,t)})).catch(l)})))}let Y,J=Vt(),Z=Vt();function Q(t,e,n){et(t);const r=Z.list();return r.length?r.forEach((r=>r(t,e,n))):console.error(t),Promise.reject(t)}function tt(){return Y&&b.value!==W?Promise.resolve():new Promise(((t,e)=>{J.add([t,e])}))}function et(t){return Y||(Y=!t,X(),J.list().forEach((([e,n])=>t?n(t):e())),J.reset()),t}function nt(e,n,s,a){const{scrollBehavior:i}=t;if(!o||!i)return Promise.resolve();const u=!s&&M(R(e.fullPath,0))||(a||!s)&&history.state&&history.state.scroll||null;return(0,r.Y3)().then((()=>i(e,n,u))).then((t=>t&&$(t))).catch((t=>Q(t,e,n)))}const rt=t=>h.go(t);let st;const at=new Set,it={currentRoute:b,listening:!0,addRoute:S,removeRoute:N,hasRoute:C,getRoutes:T,resolve:A,options:t,push:O,replace:L,go:rt,back:()=>rt(-1),forward:()=>rt(1),beforeEach:p.add,beforeResolve:m.add,afterEach:y.add,onError:Z.add,isReady:tt,install(t){const e=this;t.component("RouterLink",Kt),t.component("RouterView",ee),t.config.globalProperties.$router=e,Object.defineProperty(t.config.globalProperties,"$route",{enumerable:!0,get:()=>(0,s.SU)(b)}),o&&!st&&b.value===W&&(st=!0,O(h.location).catch((t=>{0})));const n={};for(const s in W)n[s]=(0,r.Fl)((()=>b.value[s]));t.provide(zt,e),t.provide(Bt,(0,s.qj)(n)),t.provide(Ut,b);const a=t.unmount;at.add(t),t.unmount=function(){at.delete(t),at.size<1&&(x=W,K&&K(),K=null,b.value=W,st=!1,Y=!1),a()}}};return it}function re(t){return t.reduce(((t,e)=>t.then((()=>e()))),Promise.resolve())}function se(t,e){const n=[],r=[],s=[],o=Math.max(e.matched.length,t.matched.length);for(let a=0;a<o;a++){const o=e.matched[a];o&&(t.matched.find((t=>y(t,o)))?r.push(o):n.push(o));const i=t.matched[a];i&&(e.matched.find((t=>y(t,i)))||s.push(i))}return[n,r,s]}}}]);
//# sourceMappingURL=chunk-vendors.qs.js.map
